import { useSSRContext, mergeProps, withCtx, renderSlot, computed, ref, watch, onMounted, onUnmounted, createVNode, createBlock, openBlock, useSlots, unref, createTextVNode, createCommentVNode, Fragment, renderList, toDisplayString, resolveComponent, withDirectives, withModifiers, vShow, defineComponent, withKeys, markRaw, resolveDynamicComponent, vModelText, nextTick, vModelCheckbox, reactive, watchEffect, onBeforeMount, createSSRApp, h as h$1 } from "vue";
import { ssrRenderAttrs, ssrRenderStyle, ssrRenderSlot, ssrRenderComponent, ssrLooseContain, ssrGetDynamicModelProps, ssrRenderClass, ssrInterpolate, ssrRenderList, ssrRenderAttr, ssrRenderVNode, ssrIncludeBooleanAttr, ssrGetDirectiveProps, ssrLooseEqual } from "vue/server-renderer";
import { useForm, usePage, Link, router, Head, createInertiaApp } from "@inertiajs/vue3";
import __unplugin_components_0$2 from "primevue/dialog";
import { defineStore, createPinia } from "pinia";
import axios$1 from "axios";
import __unplugin_components_2 from "primevue/column";
import __unplugin_components_0 from "primevue/message";
import __unplugin_components_4 from "primevue/steppanel";
import __unplugin_components_3 from "primevue/step";
import __unplugin_components_2$2 from "primevue/stepitem";
import __unplugin_components_1$3 from "primevue/stepper";
import __unplugin_components_1$2 from "primevue/inputtext";
import __unplugin_components_1$1 from "primevue/autocomplete";
import __unplugin_components_1 from "primevue/select";
import __unplugin_components_0$1 from "primevue/button";
import __unplugin_components_2$1 from "primevue/datepicker";
import __unplugin_components_2$3 from "primevue/textarea";
import __unplugin_components_0$3 from "primevue/floatlabel";
import jsPDF from "jspdf";
import { useStorage } from "@vueuse/core";
import __unplugin_components_0$4 from "primevue/divider";
import __unplugin_directives_0 from "primevue/tooltip";
import __unplugin_components_5 from "primevue/inputnumber";
import __unplugin_components_3$1 from "primevue/inputicon";
import __unplugin_components_1$4 from "primevue/iconfield";
import { useToast } from "primevue/usetoast";
import dayjs from "dayjs";
import __unplugin_components_2$4 from "primevue/tag";
import __unplugin_components_1$5 from "primevue/chart";
import __unplugin_components_0$5 from "primevue/card";
import { useToast as useToast$1, useConfirm } from "primevue";
import { FilterMatchMode } from "@primevue/core/api";
import __unplugin_components_0$6 from "primevue/picklist";
import __unplugin_components_1$6 from "primevue/avatar";
import __unplugin_components_0$7 from "primevue/avatargroup";
import __unplugin_components_1$7 from "primevue/datatable";
import __unplugin_components_5$1 from "primevue/editor";
import __unplugin_components_1$8 from "primevue/confirmdialog";
import { useConfirm as useConfirm$1 } from "primevue/useconfirm";
import __unplugin_components_0$8 from "primevue/toast";
import __unplugin_components_1$9 from "primevue/progressbar";
import __unplugin_components_0$9 from "primevue/overlaybadge";
import __unplugin_directives_0$1 from "primevue/focustrap";
import __unplugin_components_2$5 from "primevue/password";
import createServer from "@inertiajs/vue3/server";
import { renderToString } from "@vue/server-renderer";
import PrimeVue from "primevue/config";
import ToastService from "primevue/toastservice";
import ConfirmationService from "primevue/confirmationservice";
import AnimateOnScroll from "primevue/animateonscroll";
import { definePreset } from "@primevue/themes";
import Aura from "@primevue/themes/aura";
import __unplugin_components_2$6 from "primevue/scrolltop";
import { createPopper } from "@popperjs/core";
import tailwindConfig from "tailwindcss/defaultConfig.js";
import __unplugin_components_0$a from "primevue/progressspinner";
const _sfc_main$2O = {
  __name: "ActionMessage",
  __ssrInlineRender: true,
  props: {
    on: Boolean
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}><div style="${ssrRenderStyle(__props.on ? null : { display: "none" })}" class="text-sm text-gray-600">`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$2O = _sfc_main$2O.setup;
_sfc_main$2O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ActionMessage.vue");
  return _sfc_setup$2O ? _sfc_setup$2O(props, ctx) : void 0;
};
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$2N = {};
function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:col-span-1 flex justify-between" }, _attrs))}><div class="px-4 sm:px-0"><h3 class="text-lg font-medium text-gray-900">`);
  ssrRenderSlot(_ctx.$slots, "title", {}, null, _push, _parent);
  _push(`</h3><p class="mt-1 text-sm text-gray-600">`);
  ssrRenderSlot(_ctx.$slots, "description", {}, null, _push, _parent);
  _push(`</p></div><div class="px-4 sm:px-0">`);
  ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$2N = _sfc_main$2N.setup;
_sfc_main$2N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SectionTitle.vue");
  return _sfc_setup$2N ? _sfc_setup$2N(props, ctx) : void 0;
};
const SectionTitle = /* @__PURE__ */ _export_sfc(_sfc_main$2N, [["ssrRender", _sfc_ssrRender$l]]);
const _sfc_main$2M = {
  __name: "ActionSection",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
      _push(ssrRenderComponent(SectionTitle, null, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "title")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "description")
            ];
          }
        }),
        _: 3
      }, _parent));
      _push(`<div class="mt-5 md:mt-0 md:col-span-2"><div class="px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg">`);
      ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$2M = _sfc_main$2M.setup;
_sfc_main$2M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ActionSection.vue");
  return _sfc_setup$2M ? _sfc_setup$2M(props, ctx) : void 0;
};
const _sfc_main$2L = {
  __name: "Checkbox",
  __ssrInlineRender: true,
  props: {
    checked: {
      type: [Array, Boolean],
      default: false
    },
    value: {
      type: String,
      default: null
    }
  },
  emits: ["update:checked"],
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const props = __props;
    const proxyChecked = computed({
      get() {
        return props.checked;
      },
      set(val) {
        emit("update:checked", val);
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      let _temp0;
      _push(`<input${ssrRenderAttrs((_temp0 = mergeProps({
        checked: Array.isArray(proxyChecked.value) ? ssrLooseContain(proxyChecked.value, __props.value) : proxyChecked.value,
        type: "checkbox",
        value: __props.value,
        class: "rounded border-gray-300 text-indigo-600 shadow-sm focus:ring-indigo-500"
      }, _attrs), mergeProps(_temp0, ssrGetDynamicModelProps(_temp0, proxyChecked.value))))}>`);
    };
  }
};
const _sfc_setup$2L = _sfc_main$2L.setup;
_sfc_main$2L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Checkbox.vue");
  return _sfc_setup$2L ? _sfc_setup$2L(props, ctx) : void 0;
};
const _sfc_main$2K = {
  __name: "Modal",
  __ssrInlineRender: true,
  props: {
    show: {
      type: Boolean,
      default: false
    },
    maxWidth: {
      type: String,
      default: "2xl"
    },
    closeable: {
      type: Boolean,
      default: true
    }
  },
  emits: ["close"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const dialog = ref();
    const showSlot = ref(props.show);
    watch(() => props.show, () => {
      var _a;
      if (props.show) {
        document.body.style.overflow = "hidden";
        showSlot.value = true;
        (_a = dialog.value) == null ? void 0 : _a.showModal();
      } else {
        document.body.style.overflow = null;
        setTimeout(() => {
          var _a2;
          (_a2 = dialog.value) == null ? void 0 : _a2.close();
          showSlot.value = false;
        }, 200);
      }
    });
    const close = () => {
      if (props.closeable) {
        emit("close");
      }
    };
    const closeOnEscape = (e2) => {
      if (e2.key === "Escape") {
        e2.preventDefault();
        if (props.show) {
          close();
        }
      }
    };
    onMounted(() => document.addEventListener("keydown", closeOnEscape));
    onUnmounted(() => {
      document.removeEventListener("keydown", closeOnEscape);
      document.body.style.overflow = null;
    });
    const maxWidthClass = computed(() => {
      return {
        "sm": "sm:max-w-sm",
        "md": "sm:max-w-md",
        "lg": "sm:max-w-lg",
        "xl": "sm:max-w-xl",
        "2xl": "sm:max-w-2xl"
      }[props.maxWidth];
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<dialog${ssrRenderAttrs(mergeProps({
        class: "z-50 m-0 min-h-full min-w-full overflow-y-auto bg-transparent backdrop:bg-transparent",
        ref_key: "dialog",
        ref: dialog
      }, _attrs))}><div class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50" scroll-region><div style="${ssrRenderStyle(__props.show ? null : { display: "none" })}" class="fixed inset-0 transform transition-all"><div class="absolute inset-0 bg-gray-500 opacity-75"></div></div><div style="${ssrRenderStyle(__props.show ? null : { display: "none" })}" class="${ssrRenderClass([maxWidthClass.value, "mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full sm:mx-auto"])}">`);
      if (showSlot.value) {
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></dialog>`);
    };
  }
};
const _sfc_setup$2K = _sfc_main$2K.setup;
_sfc_main$2K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Modal.vue");
  return _sfc_setup$2K ? _sfc_setup$2K(props, ctx) : void 0;
};
const _sfc_main$2J = {
  __name: "ConfirmationModal",
  __ssrInlineRender: true,
  props: {
    show: {
      type: Boolean,
      default: false
    },
    maxWidth: {
      type: String,
      default: "2xl"
    },
    closeable: {
      type: Boolean,
      default: true
    }
  },
  emits: ["close"],
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const close = () => {
      emit("close");
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2K, mergeProps({
        show: __props.show,
        "max-width": __props.maxWidth,
        closeable: __props.closeable,
        onClose: close
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4"${_scopeId}><div class="sm:flex sm:items-start"${_scopeId}><div class="mx-auto shrink-0 flex items-center justify-center size-12 rounded-full bg-red-100 sm:mx-0 sm:size-10"${_scopeId}><svg class="size-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"${_scopeId}></path></svg></div><div class="mt-3 text-center sm:mt-0 sm:ms-4 sm:text-start"${_scopeId}><h3 class="text-lg font-medium text-gray-900"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
            _push2(`</h3><div class="mt-4 text-sm text-gray-600"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div></div></div></div><div class="flex flex-row justify-end px-6 py-4 bg-gray-100 text-end"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4" }, [
                createVNode("div", { class: "sm:flex sm:items-start" }, [
                  createVNode("div", { class: "mx-auto shrink-0 flex items-center justify-center size-12 rounded-full bg-red-100 sm:mx-0 sm:size-10" }, [
                    (openBlock(), createBlock("svg", {
                      class: "size-6 text-red-600",
                      xmlns: "http://www.w3.org/2000/svg",
                      fill: "none",
                      viewBox: "0 0 24 24",
                      "stroke-width": "1.5",
                      stroke: "currentColor"
                    }, [
                      createVNode("path", {
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        d: "M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
                      })
                    ]))
                  ]),
                  createVNode("div", { class: "mt-3 text-center sm:mt-0 sm:ms-4 sm:text-start" }, [
                    createVNode("h3", { class: "text-lg font-medium text-gray-900" }, [
                      renderSlot(_ctx.$slots, "title")
                    ]),
                    createVNode("div", { class: "mt-4 text-sm text-gray-600" }, [
                      renderSlot(_ctx.$slots, "content")
                    ])
                  ])
                ])
              ]),
              createVNode("div", { class: "flex flex-row justify-end px-6 py-4 bg-gray-100 text-end" }, [
                renderSlot(_ctx.$slots, "footer")
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$2J = _sfc_main$2J.setup;
_sfc_main$2J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ConfirmationModal.vue");
  return _sfc_setup$2J ? _sfc_setup$2J(props, ctx) : void 0;
};
const _sfc_main$2I = {
  __name: "DangerButton",
  __ssrInlineRender: true,
  props: {
    type: {
      type: String,
      default: "button"
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        type: __props.type,
        class: "inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150"
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</button>`);
    };
  }
};
const _sfc_setup$2I = _sfc_main$2I.setup;
_sfc_main$2I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/DangerButton.vue");
  return _sfc_setup$2I ? _sfc_setup$2I(props, ctx) : void 0;
};
const _sfc_main$2H = {
  __name: "DialogModal",
  __ssrInlineRender: true,
  props: {
    show: {
      type: Boolean,
      default: false
    },
    maxWidth: {
      type: String,
      default: "2xl"
    },
    closeable: {
      type: Boolean,
      default: true
    }
  },
  emits: ["close"],
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const close = () => {
      emit("close");
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2K, mergeProps({
        show: __props.show,
        "max-width": __props.maxWidth,
        closeable: __props.closeable,
        onClose: close
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="px-6 py-4"${_scopeId}><div class="text-lg font-medium text-gray-900"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div><div class="mt-4 text-sm text-gray-600"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div></div><div class="flex flex-row justify-end px-6 py-4 bg-gray-100 text-end"${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "px-6 py-4" }, [
                createVNode("div", { class: "text-lg font-medium text-gray-900" }, [
                  renderSlot(_ctx.$slots, "title")
                ]),
                createVNode("div", { class: "mt-4 text-sm text-gray-600" }, [
                  renderSlot(_ctx.$slots, "content")
                ])
              ]),
              createVNode("div", { class: "flex flex-row justify-end px-6 py-4 bg-gray-100 text-end" }, [
                renderSlot(_ctx.$slots, "footer")
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$2H = _sfc_main$2H.setup;
_sfc_main$2H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/DialogModal.vue");
  return _sfc_setup$2H ? _sfc_setup$2H(props, ctx) : void 0;
};
const _sfc_main$2G = {
  __name: "FormSection",
  __ssrInlineRender: true,
  emits: ["submitted"],
  setup(__props) {
    const hasActions = computed(() => !!useSlots().actions);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
      _push(ssrRenderComponent(SectionTitle, null, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "title")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "description")
            ];
          }
        }),
        _: 3
      }, _parent));
      _push(`<div class="mt-5 md:mt-0 md:col-span-2"><form><div class="${ssrRenderClass([hasActions.value ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md", "px-4 py-5 bg-white sm:p-6 shadow"])}"><div class="grid grid-cols-6 gap-6">`);
      ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
      _push(`</div></div>`);
      if (hasActions.value) {
        _push(`<div class="flex items-center justify-end px-4 py-3 bg-gray-50 text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">`);
        ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</form></div></div>`);
    };
  }
};
const _sfc_setup$2G = _sfc_main$2G.setup;
_sfc_main$2G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/FormSection.vue");
  return _sfc_setup$2G ? _sfc_setup$2G(props, ctx) : void 0;
};
const _sfc_main$2F = {
  __name: "InputError",
  __ssrInlineRender: true,
  props: {
    message: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        style: __props.message ? null : { display: "none" }
      }, _attrs))}><p class="text-sm text-danger">${ssrInterpolate(__props.message)}</p></div>`);
    };
  }
};
const _sfc_setup$2F = _sfc_main$2F.setup;
_sfc_main$2F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/InputError.vue");
  return _sfc_setup$2F ? _sfc_setup$2F(props, ctx) : void 0;
};
const _sfc_main$2E = {
  __name: "InputLabel",
  __ssrInlineRender: true,
  props: {
    value: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<label${ssrRenderAttrs(mergeProps({ class: "block font-medium text-sm text-gray-700" }, _attrs))}>`);
      if (__props.value) {
        _push(`<span>${ssrInterpolate(__props.value)}</span>`);
      } else {
        _push(`<span>`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</span>`);
      }
      _push(`</label>`);
    };
  }
};
const _sfc_setup$2E = _sfc_main$2E.setup;
_sfc_main$2E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/InputLabel.vue");
  return _sfc_setup$2E ? _sfc_setup$2E(props, ctx) : void 0;
};
const _sfc_main$2D = {
  __name: "PrimaryButton",
  __ssrInlineRender: true,
  props: {
    type: {
      type: String,
      default: "submit"
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        type: __props.type,
        class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:bg-gray-700 active:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 transition ease-in-out duration-150"
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</button>`);
    };
  }
};
const _sfc_setup$2D = _sfc_main$2D.setup;
_sfc_main$2D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/PrimaryButton.vue");
  return _sfc_setup$2D ? _sfc_setup$2D(props, ctx) : void 0;
};
const _sfc_main$2C = {
  __name: "SecondaryButton",
  __ssrInlineRender: true,
  props: {
    type: {
      type: String,
      default: "button"
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        type: __props.type,
        class: "inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-25 transition ease-in-out duration-150"
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</button>`);
    };
  }
};
const _sfc_setup$2C = _sfc_main$2C.setup;
_sfc_main$2C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SecondaryButton.vue");
  return _sfc_setup$2C ? _sfc_setup$2C(props, ctx) : void 0;
};
const _sfc_main$2B = {};
function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "hidden sm:block" }, _attrs))}><div class="py-8"><div class="border-t border-gray-200"></div></div></div>`);
}
const _sfc_setup$2B = _sfc_main$2B.setup;
_sfc_main$2B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SectionBorder.vue");
  return _sfc_setup$2B ? _sfc_setup$2B(props, ctx) : void 0;
};
const SectionBorder = /* @__PURE__ */ _export_sfc(_sfc_main$2B, [["ssrRender", _sfc_ssrRender$k]]);
const _sfc_main$2A = {
  __name: "TextInput",
  __ssrInlineRender: true,
  props: {
    modelValue: String
  },
  emits: ["update:modelValue"],
  setup(__props, { expose: __expose }) {
    const input = ref(null);
    onMounted(() => {
      if (input.value.hasAttribute("autofocus")) {
        input.value.focus();
      }
    });
    __expose({ focus: () => input.value.focus() });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<input${ssrRenderAttrs(mergeProps({
        ref_key: "input",
        ref: input,
        class: "border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm input",
        value: __props.modelValue
      }, _attrs))}>`);
    };
  }
};
const _sfc_setup$2A = _sfc_main$2A.setup;
_sfc_main$2A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/TextInput.vue");
  return _sfc_setup$2A ? _sfc_setup$2A(props, ctx) : void 0;
};
const _sfc_main$2z = {
  __name: "ApiTokenManager",
  __ssrInlineRender: true,
  props: {
    tokens: Array,
    availablePermissions: Array,
    defaultPermissions: Array
  },
  setup(__props) {
    const props = __props;
    const createApiTokenForm = useForm({
      name: "",
      permissions: props.defaultPermissions
    });
    const updateApiTokenForm = useForm({
      permissions: []
    });
    const deleteApiTokenForm = useForm({});
    const displayingToken = ref(false);
    const managingPermissionsFor = ref(null);
    const apiTokenBeingDeleted = ref(null);
    const createApiToken = () => {
      createApiTokenForm.post(route("api-tokens.store"), {
        preserveScroll: true,
        onSuccess: () => {
          displayingToken.value = true;
          createApiTokenForm.reset();
        }
      });
    };
    const manageApiTokenPermissions = (token) => {
      updateApiTokenForm.permissions = token.abilities;
      managingPermissionsFor.value = token;
    };
    const updateApiToken = () => {
      updateApiTokenForm.put(route("api-tokens.update", managingPermissionsFor.value), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => managingPermissionsFor.value = null
      });
    };
    const confirmApiTokenDeletion = (token) => {
      apiTokenBeingDeleted.value = token;
    };
    const deleteApiToken = () => {
      deleteApiTokenForm.delete(route("api-tokens.destroy", apiTokenBeingDeleted.value), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => apiTokenBeingDeleted.value = null
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      _push(ssrRenderComponent(_sfc_main$2G, { onSubmitted: createApiToken }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Create API Token `);
          } else {
            return [
              createTextVNode(" Create API Token ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` API tokens allow third-party services to authenticate with our application on your behalf. `);
          } else {
            return [
              createTextVNode(" API tokens allow third-party services to authenticate with our application on your behalf. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "name",
              value: "Name"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "name",
              modelValue: unref(createApiTokenForm).name,
              "onUpdate:modelValue": ($event) => unref(createApiTokenForm).name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autofocus: ""
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(createApiTokenForm).errors.name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            if (__props.availablePermissions.length > 0) {
              _push2(`<div class="col-span-6"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "permissions",
                value: "Permissions"
              }, null, _parent2, _scopeId));
              _push2(`<div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
              ssrRenderList(__props.availablePermissions, (permission) => {
                _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_sfc_main$2L, {
                  checked: unref(createApiTokenForm).permissions,
                  "onUpdate:checked": ($event) => unref(createApiTokenForm).permissions = $event,
                  value: permission
                }, null, _parent2, _scopeId));
                _push2(`<span class="ms-2 text-sm text-gray-600"${_scopeId}>${ssrInterpolate(permission)}</span></label></div>`);
              });
              _push2(`<!--]--></div></div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "name",
                  value: "Name"
                }),
                createVNode(_sfc_main$2A, {
                  id: "name",
                  modelValue: unref(createApiTokenForm).name,
                  "onUpdate:modelValue": ($event) => unref(createApiTokenForm).name = $event,
                  type: "text",
                  class: "mt-1 block w-full",
                  autofocus: ""
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(createApiTokenForm).errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              __props.availablePermissions.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "col-span-6"
              }, [
                createVNode(_sfc_main$2E, {
                  for: "permissions",
                  value: "Permissions"
                }),
                createVNode("div", { class: "mt-2 grid grid-cols-1 md:grid-cols-2 gap-4" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList(__props.availablePermissions, (permission) => {
                    return openBlock(), createBlock("div", { key: permission }, [
                      createVNode("label", { class: "flex items-center" }, [
                        createVNode(_sfc_main$2L, {
                          checked: unref(createApiTokenForm).permissions,
                          "onUpdate:checked": ($event) => unref(createApiTokenForm).permissions = $event,
                          value: permission
                        }, null, 8, ["checked", "onUpdate:checked", "value"]),
                        createVNode("span", { class: "ms-2 text-sm text-gray-600" }, toDisplayString(permission), 1)
                      ])
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true)
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(createApiTokenForm).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Created. `);
                } else {
                  return [
                    createTextVNode(" Created. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(createApiTokenForm).processing },
              disabled: unref(createApiTokenForm).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Create `);
                } else {
                  return [
                    createTextVNode(" Create ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(createApiTokenForm).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Created. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(createApiTokenForm).processing },
                disabled: unref(createApiTokenForm).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Create ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
      if (__props.tokens.length > 0) {
        _push(`<div>`);
        _push(ssrRenderComponent(SectionBorder, null, null, _parent));
        _push(`<div class="mt-10 sm:mt-0">`);
        _push(ssrRenderComponent(_sfc_main$2M, null, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Manage API Tokens `);
            } else {
              return [
                createTextVNode(" Manage API Tokens ")
              ];
            }
          }),
          description: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` You may delete any of your existing tokens if they are no longer needed. `);
            } else {
              return [
                createTextVNode(" You may delete any of your existing tokens if they are no longer needed. ")
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.tokens, (token) => {
                _push2(`<div class="flex items-center justify-between"${_scopeId}><div class="break-all"${_scopeId}>${ssrInterpolate(token.name)}</div><div class="flex items-center ms-2"${_scopeId}>`);
                if (token.last_used_ago) {
                  _push2(`<div class="text-sm text-gray-400"${_scopeId}> Last used ${ssrInterpolate(token.last_used_ago)}</div>`);
                } else {
                  _push2(`<!---->`);
                }
                if (__props.availablePermissions.length > 0) {
                  _push2(`<button class="cursor-pointer ms-6 text-sm text-gray-400 underline"${_scopeId}> Permissions </button>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<button class="cursor-pointer ms-6 text-sm text-red-500"${_scopeId}> Delete </button></div></div>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              return [
                createVNode("div", { class: "space-y-6" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList(__props.tokens, (token) => {
                    return openBlock(), createBlock("div", {
                      key: token.id,
                      class: "flex items-center justify-between"
                    }, [
                      createVNode("div", { class: "break-all" }, toDisplayString(token.name), 1),
                      createVNode("div", { class: "flex items-center ms-2" }, [
                        token.last_used_ago ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "text-sm text-gray-400"
                        }, " Last used " + toDisplayString(token.last_used_ago), 1)) : createCommentVNode("", true),
                        __props.availablePermissions.length > 0 ? (openBlock(), createBlock("button", {
                          key: 1,
                          class: "cursor-pointer ms-6 text-sm text-gray-400 underline",
                          onClick: ($event) => manageApiTokenPermissions(token)
                        }, " Permissions ", 8, ["onClick"])) : createCommentVNode("", true),
                        createVNode("button", {
                          class: "cursor-pointer ms-6 text-sm text-red-500",
                          onClick: ($event) => confirmApiTokenDeletion(token)
                        }, " Delete ", 8, ["onClick"])
                      ])
                    ]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(ssrRenderComponent(_sfc_main$2H, {
        show: displayingToken.value,
        onClose: ($event) => displayingToken.value = false
      }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` API Token `);
          } else {
            return [
              createTextVNode(" API Token ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div${_scopeId}> Please copy your new API token. For your security, it won&#39;t be shown again. </div>`);
            if (_ctx.$page.props.jetstream.flash.token) {
              _push2(`<div class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500 break-all"${_scopeId}>${ssrInterpolate(_ctx.$page.props.jetstream.flash.token)}</div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              createVNode("div", null, " Please copy your new API token. For your security, it won't be shown again. "),
              _ctx.$page.props.jetstream.flash.token ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500 break-all"
              }, toDisplayString(_ctx.$page.props.jetstream.flash.token), 1)) : createCommentVNode("", true)
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2C, {
              onClick: ($event) => displayingToken.value = false
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Close `);
                } else {
                  return [
                    createTextVNode(" Close ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2C, {
                onClick: ($event) => displayingToken.value = false
              }, {
                default: withCtx(() => [
                  createTextVNode(" Close ")
                ]),
                _: 1
              }, 8, ["onClick"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_sfc_main$2H, {
        show: managingPermissionsFor.value != null,
        onClose: ($event) => managingPermissionsFor.value = null
      }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` API Token Permissions `);
          } else {
            return [
              createTextVNode(" API Token Permissions ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
            ssrRenderList(__props.availablePermissions, (permission) => {
              _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2L, {
                checked: unref(updateApiTokenForm).permissions,
                "onUpdate:checked": ($event) => unref(updateApiTokenForm).permissions = $event,
                value: permission
              }, null, _parent2, _scopeId));
              _push2(`<span class="ms-2 text-sm text-gray-600"${_scopeId}>${ssrInterpolate(permission)}</span></label></div>`);
            });
            _push2(`<!--]--></div>`);
          } else {
            return [
              createVNode("div", { class: "grid grid-cols-1 md:grid-cols-2 gap-4" }, [
                (openBlock(true), createBlock(Fragment, null, renderList(__props.availablePermissions, (permission) => {
                  return openBlock(), createBlock("div", { key: permission }, [
                    createVNode("label", { class: "flex items-center" }, [
                      createVNode(_sfc_main$2L, {
                        checked: unref(updateApiTokenForm).permissions,
                        "onUpdate:checked": ($event) => unref(updateApiTokenForm).permissions = $event,
                        value: permission
                      }, null, 8, ["checked", "onUpdate:checked", "value"]),
                      createVNode("span", { class: "ms-2 text-sm text-gray-600" }, toDisplayString(permission), 1)
                    ])
                  ]);
                }), 128))
              ])
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2C, {
              onClick: ($event) => managingPermissionsFor.value = null
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-3", { "opacity-25": unref(updateApiTokenForm).processing }],
              disabled: unref(updateApiTokenForm).processing,
              onClick: updateApiToken
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Save `);
                } else {
                  return [
                    createTextVNode(" Save ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2C, {
                onClick: ($event) => managingPermissionsFor.value = null
              }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_sfc_main$2D, {
                class: ["ms-3", { "opacity-25": unref(updateApiTokenForm).processing }],
                disabled: unref(updateApiTokenForm).processing,
                onClick: updateApiToken
              }, {
                default: withCtx(() => [
                  createTextVNode(" Save ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_sfc_main$2J, {
        show: apiTokenBeingDeleted.value != null,
        onClose: ($event) => apiTokenBeingDeleted.value = null
      }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Delete API Token `);
          } else {
            return [
              createTextVNode(" Delete API Token ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Are you sure you would like to delete this API token? `);
          } else {
            return [
              createTextVNode(" Are you sure you would like to delete this API token? ")
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2C, {
              onClick: ($event) => apiTokenBeingDeleted.value = null
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2I, {
              class: ["ms-3", { "opacity-25": unref(deleteApiTokenForm).processing }],
              disabled: unref(deleteApiTokenForm).processing,
              onClick: deleteApiToken
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Delete `);
                } else {
                  return [
                    createTextVNode(" Delete ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2C, {
                onClick: ($event) => apiTokenBeingDeleted.value = null
              }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_sfc_main$2I, {
                class: ["ms-3", { "opacity-25": unref(deleteApiTokenForm).processing }],
                disabled: unref(deleteApiTokenForm).processing,
                onClick: deleteApiToken
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$2z = _sfc_main$2z.setup;
_sfc_main$2z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Partials/ApiTokenManager.vue");
  return _sfc_setup$2z ? _sfc_setup$2z(props, ctx) : void 0;
};
const __vite_glob_0_1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2z
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2y = {
  __name: "Index",
  __ssrInlineRender: true,
  props: {
    tokens: Array,
    availablePermissions: Array,
    defaultPermissions: Array
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "API Tokens" }, _attrs), {
        header: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> API Tokens </h2>`);
          } else {
            return [
              createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " API Tokens ")
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2z, {
              tokens: __props.tokens,
              "available-permissions": __props.availablePermissions,
              "default-permissions": __props.defaultPermissions
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode("div", null, [
                createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
                  createVNode(_sfc_main$2z, {
                    tokens: __props.tokens,
                    "available-permissions": __props.availablePermissions,
                    "default-permissions": __props.defaultPermissions
                  }, null, 8, ["tokens", "available-permissions", "default-permissions"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2y = _sfc_main$2y.setup;
_sfc_main$2y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Index.vue");
  return _sfc_setup$2y ? _sfc_setup$2y(props, ctx) : void 0;
};
const __vite_glob_0_0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2y
}, Symbol.toStringTag, { value: "Module" }));
function useApi() {
  const api2 = axios$1.create({
    baseURL: "http://127.0.0.1:8000/api"
  });
  return { api: api2 };
}
useApi();
usePage();
const useUserStore = defineStore("userStore", {
  state: () => ({
    user: null,
    permissions: [],
    roles: [],
    sessions: [],
    notifications: [],
    unreadNotif: null
  }),
  getters: {
    getNotifications: (state) => {
      return (key = "all") => {
        try {
          return state.notifications[key];
        } catch (error) {
          return [];
        }
      };
    },
    getUnreadNotif: (state) => state.unreadNotif || 0,
    hasPermission: (state) => (name) => {
      const allPermissions = state.permissions.all || [];
      const viaRolesPermissions = state.permissions.via_roles || [];
      const direct = state.permissions.direct || [];
      return [
        ...allPermissions,
        ...viaRolesPermissions,
        ...direct
      ].some((permission) => permission.name === name);
    },
    hasRole: (state) => (name) => {
      return state.roles.find((role) => role.name === name) ? true : false;
    }
  },
  actions: {
    async fetchUser() {
      axios.get(route("user.me")).then((response) => {
        this.user = response.data;
      }).catch((error) => {
        console.log("Error while fetching user", error);
      });
      this.fetchPermissions();
      this.fetchRoles();
    },
    async fetchNotifications() {
      await axios.get(route("user.notifications")).then((response) => {
        const { unread_count, notifications } = response.data;
        this.notifications = notifications;
        this.unreadNotif = unread_count;
      }).catch((error) => {
        console.log(
          "Error while fetching user notifications",
          error
        );
      });
    },
    async fetchPermissions() {
      await axios.get(route("user.permissions")).then((response) => {
        this.permissions = response.data;
      }).catch((error) => {
        console.log("Error while fetching user permissions", error);
      });
    },
    async fetchRoles() {
      await axios.get(route("user.roles")).then((response) => {
        this.roles = response.data;
      }).catch((error) => {
        console.log("Error while fetching user roles", error);
      });
    },
    async fetchSessions() {
      await axios.get(route("user.sessions")).then((response) => {
        this.sessions = response.data;
      }).catch((error) => {
        console.log("Error while fetching user sessions", error);
      });
    }
  }
});
const dialogBreakpoints = {
  "1199px": "75vw",
  "575px": "90vw"
};
function getHeight(element) {
  return element ? element.getBoundingClientRect().height : 0;
}
function getIcon(key) {
  const icons = {
    role: "ki-filled ki-share",
    permission: "ki-filled ki-key-square",
    profile: "ki-filled ki-badge",
    profil: "ki-filled ki-user-tick",
    account: "ki-filled ki-user-square",
    profile_pic: "ki-filled ki-face-id",
    entreprendre: "ki-filled ki-abstract-27",
    formation: "ki-filled ki-book-open",
    emploi: "ki-filled ki-abstract-26",
    cv: "ki-filled ki-mouse-square"
  };
  return icons[key] ?? "ki-filled ki-abstract-27";
}
function neighbourColor(index) {
  const colors = [
    "#10b981",
    // emerald-500
    "#0ea5e9",
    // sky-500
    "#f97316",
    // orange-500
    "#64748b",
    // slate-500
    "#78716c"
    // stone-500
  ];
  return colors[index] ?? colors[4];
}
function generateColor(index, opactity = 1) {
  const r2 = index * 90 % 256;
  const g2 = index * 60 % 256;
  const b2 = index * 60 % 256;
  return `rgb(${r2},${g2},${b2},${opactity})`;
}
function formatJsonToPrint(json, showKeys = false) {
  return Object.entries(json).map(([key, value]) => {
    if (typeof value === "object" && value !== null) {
      value = JSON.stringify(value, null, 2);
    }
    return `<p><b>${showKeys ? key + ":" : "●"}</b> ${value}</p>`;
  }).join("\n");
}
const _sfc_main$2x = {
  __name: "EmailForm",
  __ssrInlineRender: true,
  props: {
    user: Object
  },
  emits: ["updated"],
  setup(__props, { emit: __emit }) {
    var _a;
    const emits = __emit;
    const props = __props;
    const form = useForm({
      _method: "PUT",
      email: (_a = props.user) == null ? void 0 : _a.email
    });
    const verificationLinkSent = ref(null);
    const updateProfileInformation = () => {
      form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => {
          emits("updated");
        }
      });
    };
    const sendEmailVerification = () => {
      verificationLinkSent.value = true;
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2G, mergeProps({ onSubmitted: updateProfileInformation }, _attrs), {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Adresse Email `);
          } else {
            return [
              createTextVNode(" Adresse Email ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Met à jour ton adresse email. `);
          } else {
            return [
              createTextVNode(" Met à jour ton adresse email. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.email,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            if (_ctx.$page.props.jetstream.hasEmailVerification && __props.user.email_verified_at === null) {
              _push2(`<div${_scopeId}><p class="text-sm mt-2"${_scopeId}> Ton email n&#39;est pas encore verifié. `);
              _push2(ssrRenderComponent(unref(Link), {
                href: _ctx.route("verification.send"),
                method: "post",
                as: "button",
                class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                onClick: sendEmailVerification
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Renvoyer le lien de vérification. `);
                  } else {
                    return [
                      createTextVNode(" Renvoyer le lien de vérification. ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</p><div style="${ssrRenderStyle(verificationLinkSent.value ? null : { display: "none" })}" class="mt-2 font-medium text-sm text-green-600"${_scopeId}> A new verification link has been sent to your email address. </div></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "email",
                  value: "Email"
                }),
                createVNode(_sfc_main$2A, {
                  id: "email",
                  modelValue: unref(form).email,
                  "onUpdate:modelValue": ($event) => unref(form).email = $event,
                  type: "email",
                  class: "mt-1 block w-full",
                  required: "",
                  autocomplete: "username"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.email,
                  class: "mt-2"
                }, null, 8, ["message"]),
                _ctx.$page.props.jetstream.hasEmailVerification && __props.user.email_verified_at === null ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("p", { class: "text-sm mt-2" }, [
                    createTextVNode(" Ton email n'est pas encore verifié. "),
                    createVNode(unref(Link), {
                      href: _ctx.route("verification.send"),
                      method: "post",
                      as: "button",
                      class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                      onClick: withModifiers(sendEmailVerification, ["prevent"])
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Renvoyer le lien de vérification. ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  withDirectives(createVNode("div", { class: "mt-2 font-medium text-sm text-green-600" }, " A new verification link has been sent to your email address. ", 512), [
                    [vShow, verificationLinkSent.value]
                  ])
                ])) : createCommentVNode("", true)
              ])
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Email mis à jour. `);
                } else {
                  return [
                    createTextVNode(" Email mis à jour. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Mettre à jour `);
                } else {
                  return [
                    createTextVNode(" Mettre à jour ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(form).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Email mis à jour. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(form).processing },
                disabled: unref(form).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Mettre à jour ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2x = _sfc_main$2x.setup;
_sfc_main$2x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Partials/EmailForm.vue");
  return _sfc_setup$2x ? _sfc_setup$2x(props, ctx) : void 0;
};
const __vite_glob_0_5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2x
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2w = {
  __name: "PasswordForm",
  __ssrInlineRender: true,
  setup(__props) {
    const passwordInput = ref(null);
    const currentPasswordInput = ref(null);
    const form = useForm({
      current_password: "",
      password: "",
      password_confirmation: ""
    });
    const updatePassword = () => {
      form.put(route("user-password.update"), {
        errorBag: "updatePassword",
        preserveScroll: true,
        onSuccess: () => form.reset(),
        onError: () => {
          if (form.errors.password) {
            form.reset("password", "password_confirmation");
            passwordInput.value.focus();
          }
          if (form.errors.current_password) {
            form.reset("current_password");
            currentPasswordInput.value.focus();
          }
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2G, mergeProps({ onSubmitted: updatePassword }, _attrs), {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Mot de passe `);
          } else {
            return [
              createTextVNode(" Mot de passe ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Assure toi d&#39;utiliser un mot de passe long et aléatoire pour rester secure. `);
          } else {
            return [
              createTextVNode(" Assure toi d'utiliser un mot de passe long et aléatoire pour rester secure. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "current_password",
              value: "Mot de passe actuel"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "current_password",
              ref_key: "currentPasswordInput",
              ref: currentPasswordInput,
              modelValue: unref(form).current_password,
              "onUpdate:modelValue": ($event) => unref(form).current_password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "current-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.current_password,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "Nouveau mot de passe"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              ref_key: "passwordInput",
              ref: passwordInput,
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.password,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password_confirmation",
              value: "Confirme le nouveau mot de passe"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password_confirmation",
              modelValue: unref(form).password_confirmation,
              "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.password_confirmation,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "current_password",
                  value: "Mot de passe actuel"
                }),
                createVNode(_sfc_main$2A, {
                  id: "current_password",
                  ref_key: "currentPasswordInput",
                  ref: currentPasswordInput,
                  modelValue: unref(form).current_password,
                  "onUpdate:modelValue": ($event) => unref(form).current_password = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "current-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.current_password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "password",
                  value: "Nouveau mot de passe"
                }),
                createVNode(_sfc_main$2A, {
                  id: "password",
                  ref_key: "passwordInput",
                  ref: passwordInput,
                  modelValue: unref(form).password,
                  "onUpdate:modelValue": ($event) => unref(form).password = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "new-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "password_confirmation",
                  value: "Confirme le nouveau mot de passe"
                }),
                createVNode(_sfc_main$2A, {
                  id: "password_confirmation",
                  modelValue: unref(form).password_confirmation,
                  "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "new-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.password_confirmation,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Sauvegardé avec succès. `);
                } else {
                  return [
                    createTextVNode(" Sauvegardé avec succès. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Mettre à jour `);
                } else {
                  return [
                    createTextVNode(" Mettre à jour ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(form).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Sauvegardé avec succès. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(form).processing },
                disabled: unref(form).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Mettre à jour ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2w = _sfc_main$2w.setup;
_sfc_main$2w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Partials/PasswordForm.vue");
  return _sfc_setup$2w ? _sfc_setup$2w(props, ctx) : void 0;
};
const __vite_glob_0_7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2w
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2v = {
  __name: "EmailAndPassword",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_sfc_main$2x, { user: __props.user }, null, _parent));
      _push(`<br>`);
      _push(ssrRenderComponent(_sfc_main$2w, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$2v = _sfc_main$2v.setup;
_sfc_main$2v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Partials/EmailAndPassword.vue");
  return _sfc_setup$2v ? _sfc_setup$2v(props, ctx) : void 0;
};
const __vite_glob_0_4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2v
}, Symbol.toStringTag, { value: "Module" }));
const __default__$6 = {
  name: "AccountActivities"
};
const _sfc_main$2u = /* @__PURE__ */ defineComponent({
  ...__default__$6,
  __ssrInlineRender: true,
  props: {
    paginated: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      _push(ssrRenderComponent(_component_CustomDataTable, mergeProps({
        paginated: __props.paginated,
        filterName: "account_activities",
        "show-creation-date": false,
        "show-update-date": false
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, {
              field: "event",
              header: "Evènement"
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<span class="leading-none font-semibold text-gray-700"${_scopeId2}>${ssrInterpolate(data[field])}</span>`);
                } else {
                  return [
                    createVNode("span", { class: "leading-none font-semibold text-gray-700" }, toDisplayString(data[field]), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "severity",
              header: "Importance"
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                var _a, _b, _c, _d, _e, _f;
                if (_push3) {
                  _push3(`<span class="badge badge-sm badge-outline capitalize" style="${ssrRenderStyle({
                    color: (_a = data[field]) == null ? void 0 : _a.color,
                    borderColor: (_b = data[field]) == null ? void 0 : _b.color
                  })}"${_scopeId2}>${ssrInterpolate((_c = data[field]) == null ? void 0 : _c.value)}</span>`);
                } else {
                  return [
                    createVNode("span", {
                      class: "badge badge-sm badge-outline capitalize",
                      style: {
                        color: (_d = data[field]) == null ? void 0 : _d.color,
                        borderColor: (_e = data[field]) == null ? void 0 : _e.color
                      }
                    }, toDisplayString((_f = data[field]) == null ? void 0 : _f.value), 5)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "description",
              header: "Description",
              class: "text-gray-500 font-normal"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "ip_address",
              header: "Adresse IP"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "created_at",
              header: "Date"
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<span class="text-gray-500 font-normal"${_scopeId2}>${ssrInterpolate(data[field])}</span>`);
                } else {
                  return [
                    createVNode("span", { class: "text-gray-500 font-normal" }, toDisplayString(data[field]), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, {
                field: "event",
                header: "Evènement"
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode("span", { class: "leading-none font-semibold text-gray-700" }, toDisplayString(data[field]), 1)
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "severity",
                header: "Importance"
              }, {
                body: withCtx(({ data, field }) => {
                  var _a, _b, _c;
                  return [
                    createVNode("span", {
                      class: "badge badge-sm badge-outline capitalize",
                      style: {
                        color: (_a = data[field]) == null ? void 0 : _a.color,
                        borderColor: (_b = data[field]) == null ? void 0 : _b.color
                      }
                    }, toDisplayString((_c = data[field]) == null ? void 0 : _c.value), 5)
                  ];
                }),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "description",
                header: "Description",
                class: "text-gray-500 font-normal"
              }),
              createVNode(_component_Column, {
                field: "ip_address",
                header: "Adresse IP"
              }),
              createVNode(_component_Column, {
                field: "created_at",
                header: "Date"
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode("span", { class: "text-gray-500 font-normal" }, toDisplayString(data[field]), 1)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2u = _sfc_main$2u.setup;
_sfc_main$2u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Partials/Activities.vue");
  return _sfc_setup$2u ? _sfc_setup$2u(props, ctx) : void 0;
};
const __vite_glob_0_3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2u
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2t = {
  __name: "LogoutOtherBrowserSessionsForm",
  __ssrInlineRender: true,
  props: {
    sessions: Array
  },
  setup(__props) {
    const confirmingLogout = ref(false);
    const passwordInput = ref(null);
    const form = useForm({
      password: ""
    });
    const confirmLogout = () => {
      confirmingLogout.value = true;
      setTimeout(() => passwordInput.value.focus(), 250);
    };
    const logoutOtherBrowserSessions = () => {
      form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => closeModal(),
        onError: () => passwordInput.value.focus(),
        onFinish: () => form.reset()
      });
    };
    const closeModal = () => {
      confirmingLogout.value = false;
      form.reset();
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Message = __unplugin_components_0;
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Sessions de Navigateur `);
          } else {
            return [
              createTextVNode(" Sessions de Navigateur ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Gérez et déconnectez-vous de vos sessions actives sur d&#39;autres navigateurs et appareils. `);
          } else {
            return [
              createTextVNode(" Gérez et déconnectez-vous de vos sessions actives sur d'autres navigateurs et appareils. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Si nécessaire, vous pouvez vous déconnecter de toutes vos autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont répertoriées ci-dessous ; cependant, cette liste n&#39;est peut-être pas exhaustive. Si vous pensez que votre compte a été compromis, vous devez également mettre à jour votre mot de passe. </div>`);
            if (__props.sessions.length > 0) {
              _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.sessions, (session, i2) => {
                _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
                if (session.agent.is_desktop) {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"${_scopeId}></path></svg>`);
                } else {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"${_scopeId}></path></svg>`);
                }
                _push2(`</div><div class="ms-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${ssrInterpolate(session.agent.platform ? session.agent.platform : "Unknown")} - ${ssrInterpolate(session.agent.browser ? session.agent.browser : "Unknown")}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${ssrInterpolate(session.ip_address)}, `);
                if (session.is_current_device) {
                  _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
                } else {
                  _push2(`<span${_scopeId}>Last active ${ssrInterpolate(session.last_active)}</span>`);
                }
                _push2(`</div></div></div></div>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex flex-col gap-3 items-center mt-5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, { onClick: confirmLogout }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Déconnecter toutes les autres sessions `);
                } else {
                  return [
                    createTextVNode(" Déconnecter toutes les autres sessions ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            if (unref(form).recentlySuccessful) {
              _push2(ssrRenderComponent(_component_Message, {
                closable: "",
                severity: "success"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Fait. `);
                  } else {
                    return [
                      createTextVNode(" Fait. ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
            _push2(ssrRenderComponent(_sfc_main$2H, {
              show: confirmingLogout.value,
              onClose: closeModal
            }, {
              title: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Déconnexion des autres sessions `);
                } else {
                  return [
                    createTextVNode(" Déconnexion des autres sessions ")
                  ];
                }
              }),
              content: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Veuillez saisir votre mot de passe pour confirmer que vous souhaitez vous déconnecter de vos autres sessions de navigateur sur tous vos appareils. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$2A, {
                    ref_key: "passwordInput",
                    ref: passwordInput,
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    autocomplete: "current-password",
                    onKeyup: logoutOtherBrowserSessions
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(form).errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createTextVNode(" Veuillez saisir votre mot de passe pour confirmer que vous souhaitez vous déconnecter de vos autres sessions de navigateur sur tous vos appareils. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_sfc_main$2A, {
                        ref_key: "passwordInput",
                        ref: passwordInput,
                        modelValue: unref(form).password,
                        "onUpdate:modelValue": ($event) => unref(form).password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        autocomplete: "current-password",
                        onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode(_sfc_main$2F, {
                        message: unref(form).errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ];
                }
              }),
              footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Annuler `);
                      } else {
                        return [
                          createTextVNode(" Annuler ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Confirmer `);
                      } else {
                        return [
                          createTextVNode(" Confirmer ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$2C, { onClick: closeModal }, {
                      default: withCtx(() => [
                        createTextVNode(" Annuler ")
                      ]),
                      _: 1
                    }),
                    createVNode(_sfc_main$2D, {
                      class: ["ms-3", { "opacity-25": unref(form).processing }],
                      disabled: unref(form).processing,
                      onClick: logoutOtherBrowserSessions
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Confirmer ")
                      ]),
                      _: 1
                    }, 8, ["class", "disabled"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Si nécessaire, vous pouvez vous déconnecter de toutes vos autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont répertoriées ci-dessous ; cependant, cette liste n'est peut-être pas exhaustive. Si vous pensez que votre compte a été compromis, vous devez également mettre à jour votre mot de passe. "),
              __props.sessions.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-5 space-y-6"
              }, [
                (openBlock(true), createBlock(Fragment, null, renderList(__props.sessions, (session, i2) => {
                  return openBlock(), createBlock("div", {
                    key: i2,
                    class: "flex items-center"
                  }, [
                    createVNode("div", null, [
                      session.agent.is_desktop ? (openBlock(), createBlock("svg", {
                        key: 0,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
                        })
                      ])) : (openBlock(), createBlock("svg", {
                        key: 1,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"
                        })
                      ]))
                    ]),
                    createVNode("div", { class: "ms-3" }, [
                      createVNode("div", { class: "text-sm text-gray-600" }, toDisplayString(session.agent.platform ? session.agent.platform : "Unknown") + " - " + toDisplayString(session.agent.browser ? session.agent.browser : "Unknown"), 1),
                      createVNode("div", null, [
                        createVNode("div", { class: "text-xs text-gray-500" }, [
                          createTextVNode(toDisplayString(session.ip_address) + ", ", 1),
                          session.is_current_device ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: "text-green-500 font-semibold"
                          }, "This device")) : (openBlock(), createBlock("span", { key: 1 }, "Last active " + toDisplayString(session.last_active), 1))
                        ])
                      ])
                    ])
                  ]);
                }), 128))
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "flex flex-col gap-3 items-center mt-5" }, [
                createVNode(_sfc_main$2D, { onClick: confirmLogout }, {
                  default: withCtx(() => [
                    createTextVNode(" Déconnecter toutes les autres sessions ")
                  ]),
                  _: 1
                }),
                unref(form).recentlySuccessful ? (openBlock(), createBlock(_component_Message, {
                  key: 0,
                  closable: "",
                  severity: "success"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Fait. ")
                  ]),
                  _: 1
                })) : createCommentVNode("", true)
              ]),
              createVNode(_sfc_main$2H, {
                show: confirmingLogout.value,
                onClose: closeModal
              }, {
                title: withCtx(() => [
                  createTextVNode(" Déconnexion des autres sessions ")
                ]),
                content: withCtx(() => [
                  createTextVNode(" Veuillez saisir votre mot de passe pour confirmer que vous souhaitez vous déconnecter de vos autres sessions de navigateur sur tous vos appareils. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_sfc_main$2A, {
                      ref_key: "passwordInput",
                      ref: passwordInput,
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      autocomplete: "current-password",
                      onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(form).errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ]),
                footer: withCtx(() => [
                  createVNode(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Annuler ")
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Confirmer ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["show"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2t = _sfc_main$2t.setup;
_sfc_main$2t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Partials/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$2t ? _sfc_setup$2t(props, ctx) : void 0;
};
const __vite_glob_0_6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2t
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2s = {
  __name: "EditProfilePhoto",
  __ssrInlineRender: true,
  props: {
    user: Object
  },
  emits: ["updated"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const form = useForm({
      _method: "PUT",
      photo: null
    });
    const photoPreview = ref(null);
    const photoInput = ref(null);
    const updateProfileInformation = () => {
      if (photoInput.value) {
        form.photo = photoInput.value.files[0];
      }
      form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => {
          clearPhotoFileInput();
          emits("updated");
        }
      });
    };
    const selectNewPhoto = () => {
      photoInput.value.click();
    };
    const updatePhotoPreview = () => {
      const photo = photoInput.value.files[0];
      if (!photo) return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        photoPreview.value = e2.target.result;
      };
      reader.readAsDataURL(photo);
    };
    const deletePhoto = () => {
      router.delete(route("current-user-photo.destroy"), {
        preserveScroll: true,
        onSuccess: () => {
          photoPreview.value = null;
          clearPhotoFileInput();
        }
      });
    };
    const clearPhotoFileInput = () => {
      var _a;
      if ((_a = photoInput.value) == null ? void 0 : _a.value) {
        photoInput.value.value = null;
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2G, mergeProps({ onSubmitted: updateProfileInformation }, _attrs), {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Photo de profil `);
          } else {
            return [
              createTextVNode(" Photo de profil ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Met à jour ta photo de profil. `);
          } else {
            return [
              createTextVNode(" Met à jour ta photo de profil. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (_ctx.$page.props.jetstream.managesProfilePhotos) {
              _push2(`<div class="col-span-6 sm:col-span-4 text-center"${_scopeId}><input id="photo" type="file" class="hidden"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "photo",
                value: "Photo"
              }, null, _parent2, _scopeId));
              _push2(`<div style="${ssrRenderStyle(!photoPreview.value ? null : { display: "none" })}" class="mt-2"${_scopeId}><img${ssrRenderAttr("src", __props.user.profile_photo_url)}${ssrRenderAttr("alt", __props.user.name)} class="rounded-full size-20 object-cover mx-auto"${_scopeId}></div><div style="${ssrRenderStyle(photoPreview.value ? null : { display: "none" })}" class="mt-2"${_scopeId}><span class="block rounded-full size-20 bg-cover bg-no-repeat bg-center mx-auto" style="${ssrRenderStyle(
                "background-image: url('" + photoPreview.value + "');"
              )}"${_scopeId}></span></div>`);
              _push2(ssrRenderComponent(_sfc_main$2C, {
                class: "mt-2 me-2",
                type: "button",
                onClick: selectNewPhoto
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Nouvelle photo `);
                  } else {
                    return [
                      createTextVNode(" Nouvelle photo ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              if (__props.user.profile_photo_path) {
                _push2(ssrRenderComponent(_sfc_main$2C, {
                  type: "button",
                  class: "mt-2",
                  onClick: deletePhoto
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Supprimer la photo `);
                    } else {
                      return [
                        createTextVNode(" Supprimer la photo ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(ssrRenderComponent(_sfc_main$2F, {
                message: unref(form).errors.photo,
                class: "mt-2"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              _ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock("div", {
                key: 0,
                class: "col-span-6 sm:col-span-4 text-center"
              }, [
                createVNode("input", {
                  id: "photo",
                  ref_key: "photoInput",
                  ref: photoInput,
                  type: "file",
                  class: "hidden",
                  onChange: updatePhotoPreview
                }, null, 544),
                createVNode(_sfc_main$2E, {
                  for: "photo",
                  value: "Photo"
                }),
                withDirectives(createVNode("div", { class: "mt-2" }, [
                  createVNode("img", {
                    src: __props.user.profile_photo_url,
                    alt: __props.user.name,
                    class: "rounded-full size-20 object-cover mx-auto"
                  }, null, 8, ["src", "alt"])
                ], 512), [
                  [vShow, !photoPreview.value]
                ]),
                withDirectives(createVNode("div", { class: "mt-2" }, [
                  createVNode("span", {
                    class: "block rounded-full size-20 bg-cover bg-no-repeat bg-center mx-auto",
                    style: "background-image: url('" + photoPreview.value + "');"
                  }, null, 4)
                ], 512), [
                  [vShow, photoPreview.value]
                ]),
                createVNode(_sfc_main$2C, {
                  class: "mt-2 me-2",
                  type: "button",
                  onClick: withModifiers(selectNewPhoto, ["prevent"])
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Nouvelle photo ")
                  ]),
                  _: 1
                }),
                __props.user.profile_photo_path ? (openBlock(), createBlock(_sfc_main$2C, {
                  key: 0,
                  type: "button",
                  class: "mt-2",
                  onClick: withModifiers(deletePhoto, ["prevent"])
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Supprimer la photo ")
                  ]),
                  _: 1
                })) : createCommentVNode("", true),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.photo,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])) : createCommentVNode("", true)
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Photo de profil mis à jour. `);
                } else {
                  return [
                    createTextVNode(" Photo de profil mis à jour. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Enregistrer `);
                } else {
                  return [
                    createTextVNode(" Enregistrer ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(form).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Photo de profil mis à jour. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(form).processing },
                disabled: unref(form).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Enregistrer ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2s = _sfc_main$2s.setup;
_sfc_main$2s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/EditProfilePhoto.vue");
  return _sfc_setup$2s ? _sfc_setup$2s(props, ctx) : void 0;
};
const __vite_glob_0_85 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2s
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2r = {
  __name: "FormButtonGroup",
  __ssrInlineRender: true,
  props: {
    form: Object,
    className: {
      type: String,
      default: "justify-end"
    },
    submitLabel: {
      type: String,
      default: "Enregistrer"
    },
    cancelLabel: {
      type: String,
      default: "Annuler"
    },
    showCancel: {
      type: Boolean,
      default: true
    },
    successMessage: {
      type: String,
      default: "Données mises à jour."
    }
  },
  emits: ["canceled", "submitted"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Message = __unplugin_components_0;
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["flex flex-wrap pt-2.5 gap-2", __props.className]
      }, _attrs))}>`);
      if (__props.form.recentlySuccessful) {
        _push(ssrRenderComponent(_component_Message, {
          severity: "success",
          closable: "",
          class: "w-full lg:w-auto"
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(__props.successMessage)}`);
            } else {
              return [
                createTextVNode(toDisplayString(__props.successMessage), 1)
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="flex justify-between gap-2 lg:order-2">`);
      if (__props.showCancel) {
        _push(ssrRenderComponent(_component_Button, {
          type: "button",
          label: __props.cancelLabel,
          onClick: ($event) => emits("canceled"),
          severity: "secondary"
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(ssrRenderComponent(_component_Button, {
        type: "submit",
        label: __props.submitLabel,
        icon: "pi pi-check",
        loading: __props.form.processing
      }, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$2r = _sfc_main$2r.setup;
_sfc_main$2r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/FormButtonGroup.vue");
  return _sfc_setup$2r ? _sfc_setup$2r(props, ctx) : void 0;
};
function useViewport() {
  const height = ref(window.innerHeight);
  const width = ref(window.innerWidth);
  const isMobile = window.matchMedia("(max-width: 768px)").matches;
  const handleResize = () => {
    height.value = window.innerHeight;
    width.value = window.innerWidth;
  };
  onMounted(() => {
    window.addEventListener("resize", handleResize);
  });
  onUnmounted(() => {
    window.removeEventListener("resize", handleResize);
  });
  return { height, width, isMobile };
}
const { api: api$1 } = useApi();
const useMainStore = defineStore("main", {
  state: () => ({
    isScrolled: false,
    showContent: false,
    mainSearch: "",
    faqs: [],
    polls: [],
    agoraSessions: [],
    appFeatures: [],
    departements: [],
    communes: [],
    arrondissements: []
  }),
  actions: {
    setShowContent(value) {
      this.showContent = value;
    },
    handleScroll(event) {
      const target = event.target;
      this.isScrolled = target.scrollTop > 0;
    },
    async fetchPolls() {
      await axios$1.get("/poll").then((response) => {
        this.polls = response.data;
      }).catch((error) => {
        console.log("Error while fetching polls", error);
      });
    },
    async fetchFaqs() {
      await axios$1.get("/faq").then((response) => {
        this.faqs = response.data;
      }).catch((error) => {
        console.log("Error while fetching faqs", error);
      });
    },
    async fetchAgora() {
      await axios$1.get("/agora-session").then((response) => {
        this.agoraSessions = response.data;
      }).catch((error) => {
        console.log("Error while fetching agora sesssions", error);
      });
    },
    async fetchFeatures() {
      await api$1.get("/features").then((response) => {
        this.appFeatures = response.data.app_features;
      }).catch((error) => {
        console.log("Error while fetching features", error);
      });
    },
    async fetchDepartements() {
      await api$1.get("/departements").then((response) => {
        this.departements = response.data.departements || [];
        this.communes = response.data.communes || [];
        this.arrondissements = response.data.arrondissements || [];
      }).catch((error) => {
        console.log("Error while fetching departements", error);
      });
    }
  }
});
const _sfc_main$2q = {
  __name: "EditAddress",
  __ssrInlineRender: true,
  props: {
    user: Object
  },
  setup(__props) {
    const { width: viewportWidth } = useViewport();
    const props = __props;
    const mainStore = useMainStore();
    const data = ref([]);
    const selectedDepartement = computed(
      () => mainStore.departements.find(
        (departement) => departement.name === form.departement
      )
    );
    const communes = computed(() => {
      if (selectedDepartement.value) {
        return selectedDepartement.value.communes;
      }
      return mainStore.communes || [];
    });
    const selectedCommune = computed(
      () => communes.value.find((commune) => commune.name === form.ville)
    );
    const quartiers = ref([]);
    const searchQuartier = (event) => {
      quartiers.value = selectedCommune.value.quartiers.filter((quartier) => {
        return quartier.toLowerCase().includes(event.query.toLowerCase());
      });
    };
    const form = useForm({
      departement: null,
      ville: null,
      quartier: null,
      arrondissement: null,
      maison: null
    });
    watch(
      () => props.user,
      (newUser) => {
        form.departement = newUser.info.departement || null;
        form.ville = newUser.info.ville || null;
        form.quartier = newUser.info.quartier || null;
        form.arrondissement = newUser.info.arrondissement || null;
        form.maison = newUser.info.maison || null;
      },
      { immediate: true, deep: true }
    );
    onMounted(() => {
      mainStore.fetchDepartements();
    });
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_Select = __unplugin_components_1;
      const _component_InputError = resolveComponent("InputError");
      const _component_AutoComplete = __unplugin_components_1$1;
      const _component_InputText = __unplugin_components_1$2;
      _push(`<form${ssrRenderAttrs(_attrs)}><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="max-w-56 min-w-2/5"> Département </label><div class="grow">`);
      _push(ssrRenderComponent(_component_Select, {
        modelValue: unref(form).departement,
        "onUpdate:modelValue": ($event) => unref(form).departement = $event,
        options: data.value.departements,
        filter: "",
        optionLabel: "name",
        optionValue: "name",
        placeholder: "Choisis le departement",
        fluid: "",
        style: {
          maxWidth: unref(viewportWidth) <= 300 ? "205px" : "auto"
        }
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.departement,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="max-w-56 min-w-2/5"> Ville </label><div class="grow">`);
      _push(ssrRenderComponent(_component_Select, {
        modelValue: unref(form).ville,
        "onUpdate:modelValue": ($event) => unref(form).ville = $event,
        options: communes.value,
        editable: "",
        optionLabel: "name",
        optionValue: "name",
        placeholder: "Ecris la ville",
        fluid: ""
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.ville,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="max-w-56 min-w-2/5"> Quartier </label><div class="grow">`);
      _push(ssrRenderComponent(_component_AutoComplete, {
        modelValue: unref(form).quartier,
        "onUpdate:modelValue": ($event) => unref(form).quartier = $event,
        placeholder: "Ecris le quartier",
        fluid: "",
        suggestions: quartiers.value,
        onComplete: searchQuartier
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.quartier,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Arrondissement (facultatif) </label><div class="grow">`);
      _push(ssrRenderComponent(_component_Select, {
        modelValue: unref(form).arrondissement,
        "onUpdate:modelValue": ($event) => unref(form).arrondissement = $event,
        options: (_a = selectedCommune.value) == null ? void 0 : _a.arrondissements,
        editable: "",
        optionLabel: "name",
        optionValue: "name",
        placeholder: "Ecris l'arrondissement",
        fluid: ""
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.arrondissement,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Maison (facultatif) </label><div class="grow">`);
      _push(ssrRenderComponent(_component_InputText, {
        modelValue: unref(form).maison,
        "onUpdate:modelValue": ($event) => unref(form).maison = $event,
        placeholder: "Ecris le nom de la maison",
        fluid: ""
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.maison,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div>`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        "show-cancel": false,
        "success-message": "Adresse mise à jour."
      }, null, _parent));
      _push(`</form>`);
    };
  }
};
const _sfc_setup$2q = _sfc_main$2q.setup;
_sfc_main$2q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/EditAddress.vue");
  return _sfc_setup$2q ? _sfc_setup$2q(props, ctx) : void 0;
};
const __vite_glob_0_83 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2p = {
  __name: "EditPersonalInfo",
  __ssrInlineRender: true,
  props: {
    user: Object
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      nom: null,
      prenom: null,
      phone: null,
      sexe: null,
      date_naissance: null
    });
    watch(
      () => props.user,
      (newUser) => {
        form.nom = newUser.info.nom || null;
        form.prenom = newUser.info.prenom || null;
        form.phone = newUser.phone || null;
        form.sexe = newUser.info.sexe || null;
        form.date_naissance = newUser.info.date_naissance || null;
      },
      { immediate: true, deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      const _component_Select = __unplugin_components_1;
      const _component_DatePicker = __unplugin_components_2$1;
      _push(`<form${ssrRenderAttrs(_attrs)}><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Nom </label><div class="grow">`);
      _push(ssrRenderComponent(_component_InputText, {
        fluid: "",
        modelValue: unref(form).nom,
        "onUpdate:modelValue": ($event) => unref(form).nom = $event,
        placeholder: "Ecris le nom de famille"
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.nom,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Prénom </label><div class="grow">`);
      _push(ssrRenderComponent(_component_InputText, {
        fluid: "",
        modelValue: unref(form).prenom,
        "onUpdate:modelValue": ($event) => unref(form).prenom = $event,
        placeholder: "Ecris le prénom"
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.prenom,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Téléphone </label><div class="grow">`);
      _push(ssrRenderComponent(_component_InputText, {
        fluid: "",
        modelValue: unref(form).phone,
        "onUpdate:modelValue": ($event) => unref(form).phone = $event,
        placeholder: "Ecris le numero de telephone"
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.phone,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-center flex-wrap gap-2.5"><label class="max-w-56 min-w-2/5"> Sexe </label><div class="grow">`);
      _push(ssrRenderComponent(_component_Select, {
        modelValue: unref(form).sexe,
        "onUpdate:modelValue": ($event) => unref(form).sexe = $event,
        options: ["Homme", "Femme"],
        fluid: "",
        placeholder: "Choisis le sexe"
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.sexe,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div><div class="w-full"><div class="flex items-baseline flex-wrap lg:flex-nowrap gap-2.5"><label class="flex items-center gap-1 max-w-56 min-w-2/5"> Date de naissance </label><div class="grow">`);
      _push(ssrRenderComponent(_component_DatePicker, {
        modelValue: unref(form).date_naissance,
        "onUpdate:modelValue": ($event) => unref(form).date_naissance = $event,
        placeholder: "Ecris la date de naissance",
        dateFormat: "dd/mm/yy",
        fluid: ""
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        message: unref(form).errors.date_naissance,
        class: "mt-1"
      }, null, _parent));
      _push(`</div></div></div>`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        "show-cancel": false,
        "success-message": "Informations mises à jour."
      }, null, _parent));
      _push(`</form>`);
    };
  }
};
const _sfc_setup$2p = _sfc_main$2p.setup;
_sfc_main$2p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/EditPersonalInfo.vue");
  return _sfc_setup$2p ? _sfc_setup$2p(props, ctx) : void 0;
};
const __vite_glob_0_84 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2p
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2o = {
  __name: "ProfileStepper",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    },
    stepValue: {
      type: String,
      default: "1"
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Stepper = __unplugin_components_1$3;
      const _component_StepItem = __unplugin_components_2$2;
      const _component_Step = __unplugin_components_3;
      const _component_StepPanel = __unplugin_components_4;
      _push(ssrRenderComponent(_component_Stepper, mergeProps({ value: __props.stepValue }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_StepItem, { value: "1" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Step, null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Informations Personnelles`);
                      } else {
                        return [
                          createTextVNode("Informations Personnelles")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_StepPanel, null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_sfc_main$2p, {
                          user: __props.user,
                          class: "card-body grid gap-5 lg:py-7.5 px-0"
                        }, null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(_sfc_main$2p, {
                            user: __props.user,
                            class: "card-body grid gap-5 lg:py-7.5 px-0"
                          }, null, 8, ["user"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Step, null, {
                      default: withCtx(() => [
                        createTextVNode("Informations Personnelles")
                      ]),
                      _: 1
                    }),
                    createVNode(_component_StepPanel, null, {
                      default: withCtx(() => [
                        createVNode(_sfc_main$2p, {
                          user: __props.user,
                          class: "card-body grid gap-5 lg:py-7.5 px-0"
                        }, null, 8, ["user"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_StepItem, { value: "2" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Step, null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Adresse de résidence`);
                      } else {
                        return [
                          createTextVNode("Adresse de résidence")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_StepPanel, null, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_sfc_main$2q, {
                          user: __props.user,
                          class: "card-body grid gap-5 lg:py-7.5 px-0"
                        }, null, _parent4, _scopeId3));
                      } else {
                        return [
                          createVNode(_sfc_main$2q, {
                            user: __props.user,
                            class: "card-body grid gap-5 lg:py-7.5 px-0"
                          }, null, 8, ["user"])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Step, null, {
                      default: withCtx(() => [
                        createTextVNode("Adresse de résidence")
                      ]),
                      _: 1
                    }),
                    createVNode(_component_StepPanel, null, {
                      default: withCtx(() => [
                        createVNode(_sfc_main$2q, {
                          user: __props.user,
                          class: "card-body grid gap-5 lg:py-7.5 px-0"
                        }, null, 8, ["user"])
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_StepItem, { value: "1" }, {
                default: withCtx(() => [
                  createVNode(_component_Step, null, {
                    default: withCtx(() => [
                      createTextVNode("Informations Personnelles")
                    ]),
                    _: 1
                  }),
                  createVNode(_component_StepPanel, null, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$2p, {
                        user: __props.user,
                        class: "card-body grid gap-5 lg:py-7.5 px-0"
                      }, null, 8, ["user"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              createVNode(_component_StepItem, { value: "2" }, {
                default: withCtx(() => [
                  createVNode(_component_Step, null, {
                    default: withCtx(() => [
                      createTextVNode("Adresse de résidence")
                    ]),
                    _: 1
                  }),
                  createVNode(_component_StepPanel, null, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$2q, {
                        user: __props.user,
                        class: "card-body grid gap-5 lg:py-7.5 px-0"
                      }, null, 8, ["user"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2o = _sfc_main$2o.setup;
_sfc_main$2o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/ProfileStepper.vue");
  return _sfc_setup$2o ? _sfc_setup$2o(props, ctx) : void 0;
};
const __vite_glob_0_86 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2o
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2n = /* @__PURE__ */ defineComponent({
  __name: "Index",
  __ssrInlineRender: true,
  props: {
    confirmsTwoFactorAuthentication: Boolean,
    account_activities: Object
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const userStore = useUserStore();
    const showDialog = ref(false);
    const currentItem = ref(null);
    const goTo = (item) => {
      if (item.component) {
        currentItem.value = item;
        showDialog.value = true;
      } else if (item.url) {
        router.visit(item.url);
      }
    };
    const items = ref([
      {
        icon: getIcon("profile"),
        title: "A propos de moi",
        component: markRaw(_sfc_main$2o),
        props: { user: page2.props.auth.user },
        description: "Gère tes informations personnelles et met à jour ton profil."
      },
      {
        icon: "ki-filled ki-security-user",
        title: "Email & Mot de passe",
        component: markRaw(_sfc_main$2v),
        props: { user: page2.props.auth.user },
        description: "Modifie ton email ou ton mot de passe."
      },
      {
        icon: getIcon("profile_pic"),
        title: "Photo de Profil",
        component: markRaw(_sfc_main$2s),
        props: { user: page2.props.auth.user },
        description: "Change ta photo de profil."
      },
      {
        icon: "ki-filled ki-chart-line-star",
        title: "Activités du compte",
        component: markRaw(_sfc_main$2u),
        props: { paginated: props.account_activities },
        description: "Consulte l'historique des activités et surveille les accès à ton compte."
      }
    ]);
    onMounted(async () => {
      await userStore.fetchSessions().then(
        () => items.value.push({
          icon: "ki-filled ki-desktop-mobile",
          title: "Appareils Connectés",
          component: markRaw(_sfc_main$2t),
          props: { sessions: userStore.sessions },
          description: "Consulte et gère les appareils connectés à ton compte."
        })
      );
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      const _component_Dialog = __unplugin_components_0$2;
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Mon Compte" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          var _a, _b;
          if (_push2) {
            _push2(`<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-5 lg:gap-7.5"${_scopeId}><!--[-->`);
            ssrRenderList(items.value, (item, index) => {
              _push2(`<div class="card p-5 lg:p-7.5 lg:pt-7 cursor-pointer"${_scopeId}><div class="flex flex-col gap-4"${_scopeId}><div class="flex items-center justify-between gap-2"${_scopeId}><i class="${ssrRenderClass(`${item.icon} text-2xl link`)}"${_scopeId}></i></div><div class="flex flex-col gap-3"${_scopeId}><span class="text-base font-medium leading-none text-gray-900 hover:text-primary-active"${_scopeId}>${ssrInterpolate(item.title)}</span><span class="text-2sm text-gray-700 leading-5"${_scopeId}>${ssrInterpolate(item.description)}</span></div></div></div>`);
            });
            _push2(`<!--]-->`);
            _push2(ssrRenderComponent(_component_Dialog, {
              visible: showDialog.value,
              "onUpdate:visible": ($event) => showDialog.value = $event,
              onHide: ($event) => currentItem.value = null,
              modal: "",
              header: (_a = currentItem.value) == null ? void 0 : _a.title,
              style: { width: "50rem" },
              breakpoints: unref(dialogBreakpoints)
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                var _a2, _b2;
                if (_push3) {
                  if (currentItem.value) {
                    ssrRenderVNode(_push3, createVNode(resolveDynamicComponent(currentItem.value.component), ((_a2 = currentItem.value) == null ? void 0 : _a2.props) || {}, null), _parent3, _scopeId2);
                  } else {
                    _push3(`<!---->`);
                  }
                } else {
                  return [
                    currentItem.value ? (openBlock(), createBlock(resolveDynamicComponent(currentItem.value.component), mergeProps({ key: 0 }, ((_b2 = currentItem.value) == null ? void 0 : _b2.props) || {}), null, 16)) : createCommentVNode("", true)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-5 lg:gap-7.5" }, [
                (openBlock(true), createBlock(Fragment, null, renderList(items.value, (item, index) => {
                  return openBlock(), createBlock("div", {
                    key: item.url || index,
                    class: "card p-5 lg:p-7.5 lg:pt-7 cursor-pointer",
                    onClick: ($event) => goTo(item)
                  }, [
                    createVNode("div", { class: "flex flex-col gap-4" }, [
                      createVNode("div", { class: "flex items-center justify-between gap-2" }, [
                        createVNode("i", {
                          class: `${item.icon} text-2xl link`
                        }, null, 2)
                      ]),
                      createVNode("div", { class: "flex flex-col gap-3" }, [
                        createVNode("span", { class: "text-base font-medium leading-none text-gray-900 hover:text-primary-active" }, toDisplayString(item.title), 1),
                        createVNode("span", { class: "text-2sm text-gray-700 leading-5" }, toDisplayString(item.description), 1)
                      ])
                    ])
                  ], 8, ["onClick"]);
                }), 128)),
                createVNode(_component_Dialog, {
                  visible: showDialog.value,
                  "onUpdate:visible": ($event) => showDialog.value = $event,
                  onHide: ($event) => currentItem.value = null,
                  modal: "",
                  header: (_b = currentItem.value) == null ? void 0 : _b.title,
                  style: { width: "50rem" },
                  breakpoints: unref(dialogBreakpoints)
                }, {
                  default: withCtx(() => {
                    var _a2;
                    return [
                      currentItem.value ? (openBlock(), createBlock(resolveDynamicComponent(currentItem.value.component), mergeProps({ key: 0 }, ((_a2 = currentItem.value) == null ? void 0 : _a2.props) || {}), null, 16)) : createCommentVNode("", true)
                    ];
                  }),
                  _: 1
                }, 8, ["visible", "onUpdate:visible", "onHide", "header", "breakpoints"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2n = _sfc_main$2n.setup;
_sfc_main$2n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Account/Index.vue");
  return _sfc_setup$2n ? _sfc_setup$2n(props, ctx) : void 0;
};
const __vite_glob_0_2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2n
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2m = {
  __name: "Hero",
  __ssrInlineRender: true,
  setup(__props) {
    const page2 = usePage();
    const routePrefix = page2.props.routePrefix;
    const items = [
      {
        title: "Entreprendre",
        icon: getIcon("entreprendre"),
        route: routePrefix + "entreprendre"
      },
      {
        title: "Se Former",
        icon: getIcon("formation"),
        route: routePrefix + "formation"
      },
      {
        title: "Emploi",
        icon: getIcon("emploi"),
        route: routePrefix + "emploi"
      },
      {
        title: "Création CV",
        icon: getIcon("cv"),
        route: routePrefix + "emploi"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Link = resolveComponent("Link");
      _push(`<section${ssrRenderAttrs(mergeProps({ class: "jCHKuJ3G7rklx_LiAfbf RFT3unXiLA2kbmlb8f6_ cmyDPxbqOqbqHiEyGnG8 zlFmyfujKXCLCPyPEOIS z_I3ZSqHC3yeRFg5K0tP" }, _attrs))}><div class="_EGl649n_Sjwb5RGLAt9 POA0xdG25nlhxqWJyl1U pcWvkQQ8p_VQZFs_K2QA _6AI6SY1lyVfKpv37xl0 Nf72SRfIMOn_5YU7Y5Gl"><div class="QYPW4nl6nHaIbrtaXf4h _v8hjA9ct_v6OhSQD7fC RV8RoaI_SlEMC5CEQ3ms _Y8m3EApcgnyDOY6pRW3 veFXkDzfJN473U3ycrV8 Vng8vsaWLN3Lh7gErp_m XG_JHZii6VUFSUkjd4Kc _F_1gdhzusC6tSOWHtx_ wP9HMsqy6b96l2HBRbgb BcwKNryVHiY5BN934sI_ Xjxpb8u_H96dZt4r1eF6"><h1 class="text-sky-950 _9OKVeTXzfSwD_NYO6_G _Bu4HL5sPDOGN_IKUsOc P2kov_od1FPjxxII24T5 jGqC6Vyq4r7i62RWVQU_ marR_sCaF_d1KewmkXGX text-primary-900 a0Ed69aMSu0vgf4oysz0 _FSCxmo0RizP2YBRYajk"> Le lieu où l&#39;avenir prend forme. </h1><p class="font-light text-sky-800 SGCI_v4dZasZ65DtKHsW XdjN1uxS_rsa3F90ox40 text-primary-800 eCx_6PNzncAD5yo7Qcic BygxL63OH6g8tW90EiE8 F_2Dre6FGlusaaY9LAdu EsIS9JBcwCwjZrc4Kr4F"> Don&#39;t Miss Out - Limited Stock at Rock-Bottom Prices! </p><a href="#" class="ADhvqXKjAizJqFADNpvd _Qk4_E9_iLqcHsRZZ4ge bg-primary-700 FO3G25Z1U_eQQNhsW0wX _oNj48aXBz72NzJaLsJR _F_1gdhzusC6tSOWHtx_ _A6LflweZRUwrcL6M2Tk wP9HMsqy6b96l2HBRbgb hover:bg-primary-800 qHIOIw8TObHgD3VvKa5x _FONMPVaCsLFJJGDaaIL focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"> Shop now </a></div></div><div class="RXPX15H5pmHbfVS0_NCt veFXkDzfJN473U3ycrV8"><div class="grid grid-cols-2 md:grid-cols-4 gap-y-4"><!--[-->`);
      ssrRenderList(items, (item, index) => {
        _push(`<div class="_F_1gdhzusC6tSOWHtx_">`);
        _push(ssrRenderComponent(_component_Link, {
          href: _ctx.route(item.route),
          prefetch: "",
          class: "RV8RoaI_SlEMC5CEQ3ms _9OKVeTXzfSwD_NYO6_G kqgYncRJQ7spwKfig6It q6R7ifHNsy60SzijPw4M HzSN_B__bXx8FUbQhXu_ neyUwteEn7DOg9pBSJJE _WclR59Ji8jwfmjPtOei _Qk4_E9_iLqcHsRZZ4ge PWreZZgitgAm_Nv4Noh9 pxHuWvF853ck68OLN6ef yjGyQxv8jnYk9_MGMqLN yFAsiu26MUcycUf9RwrL _BIVSYBXQUqEf_ltPrSk _t2wg7hRcyKsNN8CSSeU xotVay0PVtR3gElm6ql5"
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<i class="${ssrRenderClass("text-3xl ki-filled " + item.icon)}"${_scopeId}></i>`);
            } else {
              return [
                createVNode("i", {
                  class: "text-3xl ki-filled " + item.icon
                }, null, 2)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(ssrRenderComponent(_component_Link, {
          href: _ctx.route(item.route),
          prefetch: "",
          class: "rD4HtsUG_hahmbh2Kj09 VwrSTsh__so52zqMJvws LYMps1kO2vF8HBymW3az g3OYBOqwXUEW4dRGogkH _5zvlMLkN1qETxEl3IhT a0Ed69aMSu0vgf4oysz0"
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(item.title)}`);
            } else {
              return [
                createTextVNode(toDisplayString(item.title), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`</div>`);
      });
      _push(`<!--]--></div></div></section>`);
    };
  }
};
const _sfc_setup$2m = _sfc_main$2m.setup;
_sfc_main$2m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Partials/Dashboard/Hero.vue");
  return _sfc_setup$2m ? _sfc_setup$2m(props, ctx) : void 0;
};
const __vite_glob_0_13 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2m
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2l = /* @__PURE__ */ defineComponent({
  __name: "Dashboard",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Tableau de bord" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="grid gap-5 lg:gap-7.5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2m, null, null, _parent2, _scopeId));
            _push2(`<div class="grid lg:grid-cols-3 gap-y-5 lg:gap-7.5 items-stretch"${_scopeId}><div class="lg:col-span-1"${_scopeId}><div class="grid grid-cols-2 gap-5 lg:gap-7.5 h-full items-stretch"${_scopeId}><div class="card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg"${_scopeId}><img alt="" class="w-7 mt-4 ms-5" src="/static/media/brand-logos/linkedin-2.svg"${_scopeId}><div class="flex flex-col gap-1 pb-4 px-5"${_scopeId}><span class="text-3xl font-semibold text-gray-900"${_scopeId}> 9.3k </span><span class="text-2sm font-normal text-gray-700"${_scopeId}> Amazing mates </span></div></div><div class="card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg"${_scopeId}><img alt="" class="w-7 mt-4 ms-5" src="/static/media/brand-logos/youtube-2.svg"${_scopeId}><div class="flex flex-col gap-1 pb-4 px-5"${_scopeId}><span class="text-3xl font-semibold text-gray-900"${_scopeId}> 24k </span><span class="text-2sm font-normal text-gray-700"${_scopeId}> Lessons Views </span></div></div><div class="card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg"${_scopeId}><img alt="" class="w-7 mt-4 ms-5" src="/static/media/brand-logos/instagram-03.svg"${_scopeId}><div class="flex flex-col gap-1 pb-4 px-5"${_scopeId}><span class="text-3xl font-semibold text-gray-900"${_scopeId}> 608 </span><span class="text-2sm font-normal text-gray-700"${_scopeId}> New subscribers </span></div></div><div class="card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg"${_scopeId}><img alt="" class="dark:hidden w-7 mt-4 ms-5" src="/static/media/brand-logos/tiktok.svg"${_scopeId}><img alt="" class="light:hidden w-7 mt-4 ms-5" src="/static/media/brand-logos/tiktok-dark.svg"${_scopeId}><div class="flex flex-col gap-1 pb-4 px-5"${_scopeId}><span class="text-3xl font-semibold text-gray-900"${_scopeId}> 2.5k </span><span class="text-2sm font-normal text-gray-700"${_scopeId}> Stream audience </span></div></div></div></div><div class="lg:col-span-2"${_scopeId}><div class="card h-full h-full"${_scopeId}><div class="card-body p-10 bg-[length:80%] rtl:[background-position:-70%_25%] [background-position:175%_25%] bg-no-repeat entry-callout-bg"${_scopeId}><div class="flex flex-col justify-center gap-4"${_scopeId}><div class="flex -space-x-2"${_scopeId}><div class="flex"${_scopeId}><img class="hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10" src="/static/media/avatars/300-4.png"${_scopeId}></div><div class="flex"${_scopeId}><img class="hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10" src="/static/media/avatars/300-1.png"${_scopeId}></div><div class="flex"${_scopeId}><img class="hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10" src="/static/media/avatars/300-2.png"${_scopeId}></div><div class="flex"${_scopeId}><span class="hover:z-5 relative inline-flex items-center justify-center shrink-0 rounded-full ring-1 font-semibold leading-none text-3xs size-10 text-success-inverse text-xs ring-success-light bg-success"${_scopeId}> S </span></div></div><h2 class="text-1.5xl font-semibold text-gray-900"${_scopeId}> Connect Today &amp; Join <br${_scopeId}> the <a class="link" href="#"${_scopeId}> KeenThemes Network </a></h2><p class="text-sm font-normal text-gray-700 leading-5.5"${_scopeId}> Enhance your projects with premium themes and <br${_scopeId}> templates. Join the KeenThemes community today <br${_scopeId}> for top-quality designs and resources. </p></div></div><div class="card-footer justify-center"${_scopeId}><a class="btn btn-link" href="/metronic/tailwind/demo1/account/home/get-started"${_scopeId}> Get Started </a></div></div></div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "grid gap-5 lg:gap-7.5" }, [
                createVNode(_sfc_main$2m),
                createVNode("div", { class: "grid lg:grid-cols-3 gap-y-5 lg:gap-7.5 items-stretch" }, [
                  createVNode("div", { class: "lg:col-span-1" }, [
                    createVNode("div", { class: "grid grid-cols-2 gap-5 lg:gap-7.5 h-full items-stretch" }, [
                      createVNode("div", { class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, [
                        createVNode("img", {
                          alt: "",
                          class: "w-7 mt-4 ms-5",
                          src: "/static/media/brand-logos/linkedin-2.svg"
                        }),
                        createVNode("div", { class: "flex flex-col gap-1 pb-4 px-5" }, [
                          createVNode("span", { class: "text-3xl font-semibold text-gray-900" }, " 9.3k "),
                          createVNode("span", { class: "text-2sm font-normal text-gray-700" }, " Amazing mates ")
                        ])
                      ]),
                      createVNode("div", { class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, [
                        createVNode("img", {
                          alt: "",
                          class: "w-7 mt-4 ms-5",
                          src: "/static/media/brand-logos/youtube-2.svg"
                        }),
                        createVNode("div", { class: "flex flex-col gap-1 pb-4 px-5" }, [
                          createVNode("span", { class: "text-3xl font-semibold text-gray-900" }, " 24k "),
                          createVNode("span", { class: "text-2sm font-normal text-gray-700" }, " Lessons Views ")
                        ])
                      ]),
                      createVNode("div", { class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, [
                        createVNode("img", {
                          alt: "",
                          class: "w-7 mt-4 ms-5",
                          src: "/static/media/brand-logos/instagram-03.svg"
                        }),
                        createVNode("div", { class: "flex flex-col gap-1 pb-4 px-5" }, [
                          createVNode("span", { class: "text-3xl font-semibold text-gray-900" }, " 608 "),
                          createVNode("span", { class: "text-2sm font-normal text-gray-700" }, " New subscribers ")
                        ])
                      ]),
                      createVNode("div", { class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, [
                        createVNode("img", {
                          alt: "",
                          class: "dark:hidden w-7 mt-4 ms-5",
                          src: "/static/media/brand-logos/tiktok.svg"
                        }),
                        createVNode("img", {
                          alt: "",
                          class: "light:hidden w-7 mt-4 ms-5",
                          src: "/static/media/brand-logos/tiktok-dark.svg"
                        }),
                        createVNode("div", { class: "flex flex-col gap-1 pb-4 px-5" }, [
                          createVNode("span", { class: "text-3xl font-semibold text-gray-900" }, " 2.5k "),
                          createVNode("span", { class: "text-2sm font-normal text-gray-700" }, " Stream audience ")
                        ])
                      ])
                    ])
                  ]),
                  createVNode("div", { class: "lg:col-span-2" }, [
                    createVNode("div", { class: "card h-full h-full" }, [
                      createVNode("div", { class: "card-body p-10 bg-[length:80%] rtl:[background-position:-70%_25%] [background-position:175%_25%] bg-no-repeat entry-callout-bg" }, [
                        createVNode("div", { class: "flex flex-col justify-center gap-4" }, [
                          createVNode("div", { class: "flex -space-x-2" }, [
                            createVNode("div", { class: "flex" }, [
                              createVNode("img", {
                                class: "hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10",
                                src: "/static/media/avatars/300-4.png"
                              })
                            ]),
                            createVNode("div", { class: "flex" }, [
                              createVNode("img", {
                                class: "hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10",
                                src: "/static/media/avatars/300-1.png"
                              })
                            ]),
                            createVNode("div", { class: "flex" }, [
                              createVNode("img", {
                                class: "hover:z-5 relative shrink-0 rounded-full ring-1 ring-light-light size-10",
                                src: "/static/media/avatars/300-2.png"
                              })
                            ]),
                            createVNode("div", { class: "flex" }, [
                              createVNode("span", { class: "hover:z-5 relative inline-flex items-center justify-center shrink-0 rounded-full ring-1 font-semibold leading-none text-3xs size-10 text-success-inverse text-xs ring-success-light bg-success" }, " S ")
                            ])
                          ]),
                          createVNode("h2", { class: "text-1.5xl font-semibold text-gray-900" }, [
                            createTextVNode(" Connect Today & Join "),
                            createVNode("br"),
                            createTextVNode(" the "),
                            createVNode("a", {
                              class: "link",
                              href: "#"
                            }, " KeenThemes Network ")
                          ]),
                          createVNode("p", { class: "text-sm font-normal text-gray-700 leading-5.5" }, [
                            createTextVNode(" Enhance your projects with premium themes and "),
                            createVNode("br"),
                            createTextVNode(" templates. Join the KeenThemes community today "),
                            createVNode("br"),
                            createTextVNode(" for top-quality designs and resources. ")
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "card-footer justify-center" }, [
                        createVNode("a", {
                          class: "btn btn-link",
                          href: "/metronic/tailwind/demo1/account/home/get-started"
                        }, " Get Started ")
                      ])
                    ])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2l = _sfc_main$2l.setup;
_sfc_main$2l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Dashboard.vue");
  return _sfc_setup$2l ? _sfc_setup$2l(props, ctx) : void 0;
};
const __vite_glob_0_8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2l
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2k = {};
function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs) {
}
const _sfc_setup$2k = _sfc_main$2k.setup;
_sfc_main$2k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Emploi.vue");
  return _sfc_setup$2k ? _sfc_setup$2k(props, ctx) : void 0;
};
const Emploi = /* @__PURE__ */ _export_sfc(_sfc_main$2k, [["ssrRender", _sfc_ssrRender$j]]);
const __vite_glob_0_9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Emploi
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2j = {};
function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs) {
}
const _sfc_setup$2j = _sfc_main$2j.setup;
_sfc_main$2j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Entreprendre.vue");
  return _sfc_setup$2j ? _sfc_setup$2j(props, ctx) : void 0;
};
const Entreprendre = /* @__PURE__ */ _export_sfc(_sfc_main$2j, [["ssrRender", _sfc_ssrRender$i]]);
const __vite_glob_0_10 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Entreprendre
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2i = {
  __name: "NotAvailable",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      default: "Page en maintenance"
    },
    description: {
      type: String,
      default: "Cette page est en cours de maintenance et sera disponible très bientôt."
    }
  },
  setup(__props) {
    useViewport();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["relative min-h-[40rem] lg:min-h-0 bg-surface-0 dark:bg-surface-900 flex lg:flex-row flex-col", ["bg-[url(/images/three-young.jpg)] bg-no-repeat md:bg-none"]]
      }, _attrs))}><div class="flex lg:flex lg:flex-row flex-col justify-center md:justify-normal h-full flex-1 ba"><div class="relative flex-1 z-20 flex items-center justify-center"><div class="flex items-center justify-center h-full"><div class="w-full max-w-2xl px-6 py-12 lg:p-12 xl:p-16 text-center lg:text-left"><h1 class="text-4xl xl:text-5xl font-bold text-surface-0 lg:text-surface-900 dark:text-surface-0 mb-6 !leading-tight"><span class="block text-primary">Oups... Indisponible !</span><span class="block">${ssrInterpolate(__props.title)}</span></h1><p class="text-surface-0/90 lg:text-surface-700 dark:text-surface-200 text-xl leading-normal mb-8 max-w-xl lg:max-w-none">${ssrInterpolate(__props.description)}</p><div class="flex items-center gap-4 justify-center lg:justify-start">`);
      _push(ssrRenderComponent(_component_Button, {
        label: "Accueil",
        type: "button",
        onClick: ($event) => _ctx.$inertia.visit("/")
      }, null, _parent));
      _push(ssrRenderComponent(_component_Button, {
        label: "Retour",
        type: "button",
        onclick: "goBack()",
        outlined: ""
      }, null, _parent));
      _push(`</div></div></div></div><div class="absolute lg:relative inset-0 lg:inset-auto flex-1"><div class="absolute lg:hidden inset-0 bg-surface-900/60 dark:bg-surface-900/80 z-10"></div><img src="/images/three-young.jpg" alt="image de trois jeunes" class="h-full w-full object-cover xl:[clip-path:polygon(12%_0,100%_0%,100%_100%,0_100%)] hidden lg:block"></div></div></div>`);
    };
  }
};
const _sfc_setup$2i = _sfc_main$2i.setup;
_sfc_main$2i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/NotAvailable.vue");
  return _sfc_setup$2i ? _sfc_setup$2i(props, ctx) : void 0;
};
const _sfc_main$2h = {
  __name: "Maintenance",
  __ssrInlineRender: true,
  setup(__props) {
    const show = ref(false);
    onMounted(() => {
      show.value = true;
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      _push(ssrRenderComponent(_component_Dialog, mergeProps({
        visible: show.value,
        "onUpdate:visible": ($event) => show.value = $event,
        modal: "",
        position: "top",
        closable: false,
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, () => {
              _push2(ssrRenderComponent(_sfc_main$2i, null, null, _parent2, _scopeId));
            }, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default", {}, () => [
                createVNode(_sfc_main$2i)
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$2h = _sfc_main$2h.setup;
_sfc_main$2h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/Maintenance.vue");
  return _sfc_setup$2h ? _sfc_setup$2h(props, ctx) : void 0;
};
const _sfc_main$2g = /* @__PURE__ */ defineComponent({
  __name: "Formation",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Formations" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2h, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2h)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2g = _sfc_main$2g.setup;
_sfc_main$2g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Formation.vue");
  return _sfc_setup$2g ? _sfc_setup$2g(props, ctx) : void 0;
};
const __vite_glob_0_11 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2g
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2f = {
  __name: "CvForm",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      name: "",
      email: "",
      phone: "",
      objectif: "",
      experience: "",
      formation: "",
      skills: ""
    });
    const generatePDF = () => {
      const doc = new jsPDF();
      doc.text(`Nom: ${form.name}`, 10, 10);
      doc.text(`Email: ${form.email}`, 10, 20);
      doc.text(`Téléphone: ${form.phone}`, 10, 30);
      doc.text(`Objectif: ${form.objectif}`, 10, 40);
      doc.text(`Expérience: ${form.experience}`, 10, 50);
      doc.text(`Formation: ${form.formation}`, 10, 60);
      doc.text(`Compétences: ${form.skills}`, 10, 70);
      doc.save("CV.pdf");
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_Textarea = __unplugin_components_2$3;
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "cv-container" }, _attrs))} data-v-56d5e084><div class="form-section" data-v-56d5e084><h2 data-v-56d5e084>Créer ton CV</h2><div class="p-fluid" data-v-56d5e084>`);
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              id: "name",
              modelValue: unref(form).name,
              "onUpdate:modelValue": ($event) => unref(form).name = $event
            }, null, _parent2, _scopeId));
            _push2(`<label for="name" data-v-56d5e084${_scopeId}>Nom &amp; Prénom</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                id: "name",
                modelValue: unref(form).name,
                "onUpdate:modelValue": ($event) => unref(form).name = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "name" }, "Nom & Prénom")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event
            }, null, _parent2, _scopeId));
            _push2(`<label for="email" data-v-56d5e084${_scopeId}>Email</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                id: "email",
                modelValue: unref(form).email,
                "onUpdate:modelValue": ($event) => unref(form).email = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "email" }, "Email")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              id: "phone",
              modelValue: unref(form).phone,
              "onUpdate:modelValue": ($event) => unref(form).phone = $event
            }, null, _parent2, _scopeId));
            _push2(`<label for="phone" data-v-56d5e084${_scopeId}>Téléphone</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                id: "phone",
                modelValue: unref(form).phone,
                "onUpdate:modelValue": ($event) => unref(form).phone = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "phone" }, "Téléphone")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              id: "objectif",
              modelValue: unref(form).objectif,
              "onUpdate:modelValue": ($event) => unref(form).objectif = $event,
              rows: "3"
            }, null, _parent2, _scopeId));
            _push2(`<label for="objectif" data-v-56d5e084${_scopeId}>Objectif Professionnel</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                id: "objectif",
                modelValue: unref(form).objectif,
                "onUpdate:modelValue": ($event) => unref(form).objectif = $event,
                rows: "3"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "objectif" }, "Objectif Professionnel")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              id: "experience",
              modelValue: unref(form).experience,
              "onUpdate:modelValue": ($event) => unref(form).experience = $event,
              rows: "4"
            }, null, _parent2, _scopeId));
            _push2(`<label for="experience" data-v-56d5e084${_scopeId}>Expérience Professionnelle</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                id: "experience",
                modelValue: unref(form).experience,
                "onUpdate:modelValue": ($event) => unref(form).experience = $event,
                rows: "4"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "experience" }, "Expérience Professionnelle")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              id: "formation",
              modelValue: unref(form).formation,
              "onUpdate:modelValue": ($event) => unref(form).formation = $event,
              rows: "3"
            }, null, _parent2, _scopeId));
            _push2(`<label for="formation" data-v-56d5e084${_scopeId}>Formation</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                id: "formation",
                modelValue: unref(form).formation,
                "onUpdate:modelValue": ($event) => unref(form).formation = $event,
                rows: "3"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "formation" }, "Formation")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              id: "skills",
              modelValue: unref(form).skills,
              "onUpdate:modelValue": ($event) => unref(form).skills = $event,
              rows: "3"
            }, null, _parent2, _scopeId));
            _push2(`<label for="skills" data-v-56d5e084${_scopeId}>Compétences</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                id: "skills",
                modelValue: unref(form).skills,
                "onUpdate:modelValue": ($event) => unref(form).skills = $event,
                rows: "3"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "skills" }, "Compétences")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Button, {
        label: "Générer CV PDF",
        icon: "pi pi-file-pdf",
        onClick: generatePDF
      }, null, _parent));
      _push(`</div></div><div class="preview-section" data-v-56d5e084><h2 data-v-56d5e084>Aperçu</h2><div class="cv-preview" data-v-56d5e084><h3 data-v-56d5e084>${ssrInterpolate(unref(form).name)}</h3><p data-v-56d5e084><strong data-v-56d5e084>Email :</strong> ${ssrInterpolate(unref(form).email)}</p><p data-v-56d5e084><strong data-v-56d5e084>Téléphone :</strong> ${ssrInterpolate(unref(form).phone)}</p><p data-v-56d5e084><strong data-v-56d5e084>Objectif :</strong> ${ssrInterpolate(unref(form).objectif)}</p><p data-v-56d5e084><strong data-v-56d5e084>Expérience :</strong> ${ssrInterpolate(unref(form).experience)}</p><p data-v-56d5e084><strong data-v-56d5e084>Formation :</strong> ${ssrInterpolate(unref(form).formation)}</p><p data-v-56d5e084><strong data-v-56d5e084>Compétences :</strong> ${ssrInterpolate(unref(form).skills)}</p></div></div></div>`);
    };
  }
};
const _sfc_setup$2f = _sfc_main$2f.setup;
_sfc_main$2f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/App/Partials/CvForm.vue");
  return _sfc_setup$2f ? _sfc_setup$2f(props, ctx) : void 0;
};
const CvForm = /* @__PURE__ */ _export_sfc(_sfc_main$2f, [["__scopeId", "data-v-56d5e084"]]);
const __vite_glob_0_12 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CvForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2e = {};
function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs) {
  const _component_Head = resolveComponent("Head");
  const _component_AuthLayout = resolveComponent("AuthLayout");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "2FA" }, null, _parent));
  _push(ssrRenderComponent(_component_AuthLayout, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="card max-w-[380px] w-full" id="2fa_form"${_scopeId}><form action="#" class="card-body flex flex-col gap-5 p-10" method="post"${_scopeId}><img alt="image" class="dark:hidden h-20 mb-2" src="/static/metronic/tailwind/dist/assets/media/illustrations/34.svg"${_scopeId}><img alt="image" class="light:hidden h-20 mb-2" src="/static/metronic/tailwind/dist/assets/media/illustrations/34-dark.svg"${_scopeId}><div class="text-center mb-2"${_scopeId}><h3 class="text-lg font-medium text-gray-900 mb-5"${_scopeId}> Verify your phone </h3><div class="flex flex-col"${_scopeId}><span class="text-2sm text-gray-700 mb-1.5"${_scopeId}> Enter the verification code we sent to </span><a class="text-sm font-medium text-gray-900" href="#"${_scopeId}> ****** 7859 </a></div></div><div class="flex flex-wrap justify-center gap-2.5"${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_0" placeholder="" type="text" value=""${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_1" placeholder="" type="text" value=""${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_2" placeholder="" type="text" value=""${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_3" placeholder="" type="text" value=""${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_4" placeholder="" type="text" value=""${_scopeId}><input class="input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center" maxlength="1" name="code_5" placeholder="" type="text" value=""${_scopeId}></div><div class="flex items-center justify-center mb-2"${_scopeId}><span class="text-xs text-gray-700 me-1.5"${_scopeId}> Didn’t receive a code? (37s) </span><a class="text-xs link" href="/metronic/tailwind/demo4/authentication/branded/sign-in/"${_scopeId}> Resend </a></div><button class="btn btn-primary flex justify-center grow"${_scopeId}> Continue </button></form></div>`);
      } else {
        return [
          createVNode("div", {
            class: "card max-w-[380px] w-full",
            id: "2fa_form"
          }, [
            createVNode("form", {
              action: "#",
              class: "card-body flex flex-col gap-5 p-10",
              method: "post"
            }, [
              createVNode("img", {
                alt: "image",
                class: "dark:hidden h-20 mb-2",
                src: "/static/metronic/tailwind/dist/assets/media/illustrations/34.svg"
              }),
              createVNode("img", {
                alt: "image",
                class: "light:hidden h-20 mb-2",
                src: "/static/metronic/tailwind/dist/assets/media/illustrations/34-dark.svg"
              }),
              createVNode("div", { class: "text-center mb-2" }, [
                createVNode("h3", { class: "text-lg font-medium text-gray-900 mb-5" }, " Verify your phone "),
                createVNode("div", { class: "flex flex-col" }, [
                  createVNode("span", { class: "text-2sm text-gray-700 mb-1.5" }, " Enter the verification code we sent to "),
                  createVNode("a", {
                    class: "text-sm font-medium text-gray-900",
                    href: "#"
                  }, " ****** 7859 ")
                ])
              ]),
              createVNode("div", { class: "flex flex-wrap justify-center gap-2.5" }, [
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_0",
                  placeholder: "",
                  type: "text",
                  value: ""
                }),
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_1",
                  placeholder: "",
                  type: "text",
                  value: ""
                }),
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_2",
                  placeholder: "",
                  type: "text",
                  value: ""
                }),
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_3",
                  placeholder: "",
                  type: "text",
                  value: ""
                }),
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_4",
                  placeholder: "",
                  type: "text",
                  value: ""
                }),
                createVNode("input", {
                  class: "input focus:border-primary-clarity focus:ring focus:ring-primary-clarity size-10 shrink-0 px-0 text-center",
                  maxlength: "1",
                  name: "code_5",
                  placeholder: "",
                  type: "text",
                  value: ""
                })
              ]),
              createVNode("div", { class: "flex items-center justify-center mb-2" }, [
                createVNode("span", { class: "text-xs text-gray-700 me-1.5" }, " Didn’t receive a code? (37s) "),
                createVNode("a", {
                  class: "text-xs link",
                  href: "/metronic/tailwind/demo4/authentication/branded/sign-in/"
                }, " Resend ")
              ]),
              createVNode("button", { class: "btn btn-primary flex justify-center grow" }, " Continue ")
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$2e = _sfc_main$2e.setup;
_sfc_main$2e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/2Fa.vue");
  return _sfc_setup$2e ? _sfc_setup$2e(props, ctx) : void 0;
};
const _2Fa = /* @__PURE__ */ _export_sfc(_sfc_main$2e, [["ssrRender", _sfc_ssrRender$h]]);
const __vite_glob_0_14 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _2Fa
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2d = {
  __name: "ForgotPassword",
  __ssrInlineRender: true,
  props: {
    status: String
  },
  setup(__props) {
    const form = useForm({
      email: ""
    });
    const submit = () => {
      form.post(route("password.email"));
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_AuthLayout = resolveComponent("AuthLayout");
      const _component_Link = resolveComponent("Link");
      const _component_InputError = resolveComponent("InputError");
      const _component_Message = __unplugin_components_0;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Mot de passe oublié" }, null, _parent));
      _push(ssrRenderComponent(_component_AuthLayout, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="card max-w-[370px] w-full"${_scopeId}><div class="card-header gap-1 border-0"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              href: "/",
              class: "btn btn-sm btn-icon btn-light"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<i class="ki-filled ki-arrow-left"${_scopeId2}></i>`);
                } else {
                  return [
                    createVNode("i", { class: "ki-filled ki-arrow-left" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<h3 class="text-lg font-medium text-gray-900 capitalize flex-grow text-center"${_scopeId}> Mot de passe oublié </h3></div><form class="card-body flex flex-col gap-5 p-10 pt-2" id="reset_password_enter_email_form"${_scopeId}><div class="text-center"${_scopeId}><span class="text-2sm text-gray-700"${_scopeId}> Tu as oublié ton mot de passe ? <br${_scopeId}> Pas de soucis. Entre ton email et nous allons t&#39;envoyer un lien de reinitialisation. </span></div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Email du compte </label><input class="input" placeholder="Ecris ton email" type="email"${ssrRenderAttr("value", unref(form).email)}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            if (__props.status) {
              _push2(ssrRenderComponent(_component_Message, {
                closable: "",
                severity: "success"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${ssrInterpolate(__props.status)}`);
                  } else {
                    return [
                      createTextVNode(toDisplayString(__props.status), 1)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(_component_Button, {
              label: "Continuer",
              loading: unref(form).processing,
              icon: "ki-filled ki-black-right",
              type: "submit",
              unstyled: "",
              class: "btn btn-primary flex justify-center grow"
            }, null, _parent2, _scopeId));
            _push2(`</form></div>`);
          } else {
            return [
              createVNode("div", { class: "card max-w-[370px] w-full" }, [
                createVNode("div", { class: "card-header gap-1 border-0" }, [
                  createVNode(_component_Link, {
                    href: "/",
                    class: "btn btn-sm btn-icon btn-light"
                  }, {
                    default: withCtx(() => [
                      createVNode("i", { class: "ki-filled ki-arrow-left" })
                    ]),
                    _: 1
                  }),
                  createVNode("h3", { class: "text-lg font-medium text-gray-900 capitalize flex-grow text-center" }, " Mot de passe oublié ")
                ]),
                createVNode("form", {
                  onSubmit: withModifiers(submit, ["prevent"]),
                  class: "card-body flex flex-col gap-5 p-10 pt-2",
                  id: "reset_password_enter_email_form"
                }, [
                  createVNode("div", { class: "text-center" }, [
                    createVNode("span", { class: "text-2sm text-gray-700" }, [
                      createTextVNode(" Tu as oublié ton mot de passe ? "),
                      createVNode("br"),
                      createTextVNode(" Pas de soucis. Entre ton email et nous allons t'envoyer un lien de reinitialisation. ")
                    ])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label font-normal text-gray-900" }, " Email du compte "),
                    withDirectives(createVNode("input", {
                      class: "input",
                      placeholder: "Ecris ton email",
                      type: "email",
                      "onUpdate:modelValue": ($event) => unref(form).email = $event
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, unref(form).email]
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.email
                    }, null, 8, ["message"])
                  ]),
                  __props.status ? (openBlock(), createBlock(_component_Message, {
                    key: 0,
                    closable: "",
                    severity: "success"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(toDisplayString(__props.status), 1)
                    ]),
                    _: 1
                  })) : createCommentVNode("", true),
                  createVNode(_component_Button, {
                    label: "Continuer",
                    loading: unref(form).processing,
                    icon: "ki-filled ki-black-right",
                    type: "submit",
                    unstyled: "",
                    class: "btn btn-primary flex justify-center grow"
                  }, null, 8, ["loading"])
                ], 32)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$2d = _sfc_main$2d.setup;
_sfc_main$2d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ForgotPassword.vue");
  return _sfc_setup$2d ? _sfc_setup$2d(props, ctx) : void 0;
};
const __vite_glob_0_15 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2d
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2c = {};
function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100" }, _attrs))}><div>`);
  ssrRenderSlot(_ctx.$slots, "logo", {}, null, _push, _parent);
  _push(`</div><div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg">`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$2c = _sfc_main$2c.setup;
_sfc_main$2c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/AuthenticationCard.vue");
  return _sfc_setup$2c ? _sfc_setup$2c(props, ctx) : void 0;
};
const AuthenticationCard = /* @__PURE__ */ _export_sfc(_sfc_main$2c, [["ssrRender", _sfc_ssrRender$g]]);
const _sfc_main$2b = {
  __name: "AuthenticationCardLogo",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Link), mergeProps({ href: "/" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg class="size-16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"${_scopeId}><path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"${_scopeId}></path><path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"${_scopeId}></path></svg>`);
          } else {
            return [
              (openBlock(), createBlock("svg", {
                class: "size-16",
                viewBox: "0 0 48 48",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              }, [
                createVNode("path", {
                  d: "M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z",
                  fill: "#6875F5"
                }),
                createVNode("path", {
                  d: "M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z",
                  fill: "#6875F5"
                })
              ]))
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$2b = _sfc_main$2b.setup;
_sfc_main$2b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/AuthenticationCardLogo.vue");
  return _sfc_setup$2b ? _sfc_setup$2b(props, ctx) : void 0;
};
const _sfc_main$2a = {
  __name: "ConfirmPassword",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      password: ""
    });
    const passwordInput = ref(null);
    const submit = () => {
      form.post(route("password.confirm"), {
        onFinish: () => {
          form.reset();
          passwordInput.value.focus();
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Secure Area" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> This is a secure area of the application. Please confirm your password before continuing. </div><form${_scopeId}><div${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              ref_key: "passwordInput",
              ref: passwordInput,
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "current-password",
              autofocus: ""
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex justify-end mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-4", { "opacity-25": unref(form).processing }],
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Confirm `);
                } else {
                  return [
                    createTextVNode(" Confirm ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " This is a secure area of the application. Please confirm your password before continuing. "),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", null, [
                  createVNode(_sfc_main$2E, {
                    for: "password",
                    value: "Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password",
                    ref_key: "passwordInput",
                    ref: passwordInput,
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "current-password",
                    autofocus: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "flex justify-end mt-4" }, [
                  createVNode(_sfc_main$2D, {
                    class: ["ms-4", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Confirm ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$2a = _sfc_main$2a.setup;
_sfc_main$2a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/ConfirmPassword.vue");
  return _sfc_setup$2a ? _sfc_setup$2a(props, ctx) : void 0;
};
const __vite_glob_0_16 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$2a
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$29 = {
  __name: "ForgotPassword",
  __ssrInlineRender: true,
  props: {
    status: String
  },
  setup(__props) {
    const form = useForm({
      email: ""
    });
    const submit = () => {
      form.post(route("password.email"));
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Forgot Password" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. </div>`);
            if (__props.status) {
              _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}>${ssrInterpolate(__props.status)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<form${_scopeId}><div${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autofocus: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Email Password Reset Link `);
                } else {
                  return [
                    createTextVNode(" Email Password Reset Link ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. "),
              __props.status ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mb-4 font-medium text-sm text-green-600"
              }, toDisplayString(__props.status), 1)) : createCommentVNode("", true),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", null, [
                  createVNode(_sfc_main$2E, {
                    for: "email",
                    value: "Email"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "email",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    type: "email",
                    class: "mt-1 block w-full",
                    required: "",
                    autofocus: "",
                    autocomplete: "username"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.email
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  createVNode(_sfc_main$2D, {
                    class: { "opacity-25": unref(form).processing },
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Email Password Reset Link ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$29 = _sfc_main$29.setup;
_sfc_main$29.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/ForgotPassword.vue");
  return _sfc_setup$29 ? _sfc_setup$29(props, ctx) : void 0;
};
const __vite_glob_0_17 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$29
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$28 = {
  __name: "Login",
  __ssrInlineRender: true,
  props: {
    canResetPassword: Boolean,
    status: String
  },
  setup(__props) {
    const form = useForm({
      email: "",
      password: "",
      remember: false
    });
    const submit = () => {
      form.transform((data) => ({
        ...data,
        remember: form.remember ? "on" : ""
      })).post(route("login"), {
        onFinish: () => form.reset("password")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Log in" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (__props.status) {
              _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}>${ssrInterpolate(__props.status)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<form${_scopeId}><div${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autofocus: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "current-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="block mt-4"${_scopeId}><label class="flex items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2L, {
              checked: unref(form).remember,
              "onUpdate:checked": ($event) => unref(form).remember = $event,
              name: "remember"
            }, null, _parent2, _scopeId));
            _push2(`<span class="ms-2 text-sm text-gray-600"${_scopeId}>Remember me</span></label></div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
            if (__props.canResetPassword) {
              _push2(ssrRenderComponent(unref(Link), {
                href: _ctx.route("password.request"),
                class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Forgot your password? `);
                  } else {
                    return [
                      createTextVNode(" Forgot your password? ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-4", { "opacity-25": unref(form).processing }],
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log in `);
                } else {
                  return [
                    createTextVNode(" Log in ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              __props.status ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mb-4 font-medium text-sm text-green-600"
              }, toDisplayString(__props.status), 1)) : createCommentVNode("", true),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", null, [
                  createVNode(_sfc_main$2E, {
                    for: "email",
                    value: "Email"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "email",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    type: "email",
                    class: "mt-1 block w-full",
                    required: "",
                    autofocus: "",
                    autocomplete: "username"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.email
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "password",
                    value: "Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password",
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "current-password"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "block mt-4" }, [
                  createVNode("label", { class: "flex items-center" }, [
                    createVNode(_sfc_main$2L, {
                      checked: unref(form).remember,
                      "onUpdate:checked": ($event) => unref(form).remember = $event,
                      name: "remember"
                    }, null, 8, ["checked", "onUpdate:checked"]),
                    createVNode("span", { class: "ms-2 text-sm text-gray-600" }, "Remember me")
                  ])
                ]),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  __props.canResetPassword ? (openBlock(), createBlock(unref(Link), {
                    key: 0,
                    href: _ctx.route("password.request"),
                    class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Forgot your password? ")
                    ]),
                    _: 1
                  }, 8, ["href"])) : createCommentVNode("", true),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-4", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Log in ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$28 = _sfc_main$28.setup;
_sfc_main$28.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/Login.vue");
  return _sfc_setup$28 ? _sfc_setup$28(props, ctx) : void 0;
};
const __vite_glob_0_18 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$28
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$27 = {
  __name: "Register",
  __ssrInlineRender: true,
  setup(__props) {
    const form = useForm({
      telephone: "",
      email: "",
      password: "",
      password_confirmation: "",
      terms: false
    });
    const submit = () => {
      form.post(route("register"), {
        onFinish: () => form.reset("password", "password_confirmation")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Register" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<form${_scopeId}><div${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autofocus: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "phone",
              value: "Téléphone"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "phone",
              modelValue: unref(form).telephone,
              "onUpdate:modelValue": ($event) => unref(form).telephone = $event,
              type: "text",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "phone"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.telephone
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password_confirmation",
              value: "Confirm Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password_confirmation",
              modelValue: unref(form).password_confirmation,
              "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password_confirmation
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            if (_ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature) {
              _push2(`<div class="mt-4"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, { for: "terms" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex items-center"${_scopeId2}>`);
                    _push3(ssrRenderComponent(_sfc_main$2L, {
                      id: "terms",
                      checked: unref(form).terms,
                      "onUpdate:checked": ($event) => unref(form).terms = $event,
                      name: "terms",
                      required: ""
                    }, null, _parent3, _scopeId2));
                    _push3(`<div class="ms-2"${_scopeId2}> I agree to the <a target="_blank"${ssrRenderAttr("href", _ctx.route("terms.show"))} class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId2}>Terms of Service</a> and <a target="_blank"${ssrRenderAttr("href", _ctx.route("policy.show"))} class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId2}>Privacy Policy</a></div></div>`);
                    _push3(ssrRenderComponent(_sfc_main$2F, {
                      class: "mt-2",
                      message: unref(form).errors.terms
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode("div", { class: "flex items-center" }, [
                        createVNode(_sfc_main$2L, {
                          id: "terms",
                          checked: unref(form).terms,
                          "onUpdate:checked": ($event) => unref(form).terms = $event,
                          name: "terms",
                          required: ""
                        }, null, 8, ["checked", "onUpdate:checked"]),
                        createVNode("div", { class: "ms-2" }, [
                          createTextVNode(" I agree to the "),
                          createVNode("a", {
                            target: "_blank",
                            href: _ctx.route("terms.show"),
                            class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                          }, "Terms of Service", 8, ["href"]),
                          createTextVNode(" and "),
                          createVNode("a", {
                            target: "_blank",
                            href: _ctx.route("policy.show"),
                            class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                          }, "Privacy Policy", 8, ["href"])
                        ])
                      ]),
                      createVNode(_sfc_main$2F, {
                        class: "mt-2",
                        message: unref(form).errors.terms
                      }, null, 8, ["message"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(unref(Link), {
              href: _ctx.route("login"),
              class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Already registered? `);
                } else {
                  return [
                    createTextVNode(" Already registered? ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-4", { "opacity-25": unref(form).processing }],
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Register `);
                } else {
                  return [
                    createTextVNode(" Register ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", null, [
                  createVNode(_sfc_main$2E, {
                    for: "email",
                    value: "Email"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "email",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    type: "email",
                    class: "mt-1 block w-full",
                    required: "",
                    autofocus: "",
                    autocomplete: "username"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.email
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "phone",
                    value: "Téléphone"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "phone",
                    modelValue: unref(form).telephone,
                    "onUpdate:modelValue": ($event) => unref(form).telephone = $event,
                    type: "text",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "phone"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.telephone
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "password",
                    value: "Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password",
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "new-password"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "password_confirmation",
                    value: "Confirm Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password_confirmation",
                    modelValue: unref(form).password_confirmation,
                    "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "new-password"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password_confirmation
                  }, null, 8, ["message"])
                ]),
                _ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "mt-4"
                }, [
                  createVNode(_sfc_main$2E, { for: "terms" }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "flex items-center" }, [
                        createVNode(_sfc_main$2L, {
                          id: "terms",
                          checked: unref(form).terms,
                          "onUpdate:checked": ($event) => unref(form).terms = $event,
                          name: "terms",
                          required: ""
                        }, null, 8, ["checked", "onUpdate:checked"]),
                        createVNode("div", { class: "ms-2" }, [
                          createTextVNode(" I agree to the "),
                          createVNode("a", {
                            target: "_blank",
                            href: _ctx.route("terms.show"),
                            class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                          }, "Terms of Service", 8, ["href"]),
                          createTextVNode(" and "),
                          createVNode("a", {
                            target: "_blank",
                            href: _ctx.route("policy.show"),
                            class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                          }, "Privacy Policy", 8, ["href"])
                        ])
                      ]),
                      createVNode(_sfc_main$2F, {
                        class: "mt-2",
                        message: unref(form).errors.terms
                      }, null, 8, ["message"])
                    ]),
                    _: 1
                  })
                ])) : createCommentVNode("", true),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  createVNode(unref(Link), {
                    href: _ctx.route("login"),
                    class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Already registered? ")
                    ]),
                    _: 1
                  }, 8, ["href"]),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-4", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Register ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$27 = _sfc_main$27.setup;
_sfc_main$27.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/Register.vue");
  return _sfc_setup$27 ? _sfc_setup$27(props, ctx) : void 0;
};
const __vite_glob_0_19 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$27
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$26 = {
  __name: "ResetPassword",
  __ssrInlineRender: true,
  props: {
    email: String,
    token: String
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      token: props.token,
      email: props.email,
      password: "",
      password_confirmation: ""
    });
    const submit = () => {
      form.post(route("password.update"), {
        onFinish: () => form.reset("password", "password_confirmation")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Reset Password" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<form${_scopeId}><div${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autofocus: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password_confirmation",
              value: "Confirm Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password_confirmation",
              modelValue: unref(form).password_confirmation,
              "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              class: "mt-2",
              message: unref(form).errors.password_confirmation
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Reset Password `);
                } else {
                  return [
                    createTextVNode(" Reset Password ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", null, [
                  createVNode(_sfc_main$2E, {
                    for: "email",
                    value: "Email"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "email",
                    modelValue: unref(form).email,
                    "onUpdate:modelValue": ($event) => unref(form).email = $event,
                    type: "email",
                    class: "mt-1 block w-full",
                    required: "",
                    autofocus: "",
                    autocomplete: "username"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.email
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "password",
                    value: "Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password",
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "new-password"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_sfc_main$2E, {
                    for: "password_confirmation",
                    value: "Confirm Password"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "password_confirmation",
                    modelValue: unref(form).password_confirmation,
                    "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                    type: "password",
                    class: "mt-1 block w-full",
                    required: "",
                    autocomplete: "new-password"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.password_confirmation
                  }, null, 8, ["message"])
                ]),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  createVNode(_sfc_main$2D, {
                    class: { "opacity-25": unref(form).processing },
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Reset Password ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$26 = _sfc_main$26.setup;
_sfc_main$26.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/ResetPassword.vue");
  return _sfc_setup$26 ? _sfc_setup$26(props, ctx) : void 0;
};
const __vite_glob_0_20 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$26
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$25 = {
  __name: "TwoFactorChallenge",
  __ssrInlineRender: true,
  setup(__props) {
    const recovery = ref(false);
    const form = useForm({
      code: "",
      recovery_code: ""
    });
    const recoveryCodeInput = ref(null);
    const codeInput = ref(null);
    const toggleRecovery = async () => {
      recovery.value ^= true;
      await nextTick();
      if (recovery.value) {
        recoveryCodeInput.value.focus();
        form.code = "";
      } else {
        codeInput.value.focus();
        form.recovery_code = "";
      }
    };
    const submit = () => {
      form.post(route("two-factor.login"));
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Two-factor Confirmation" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<!--[--> Please confirm access to your account by entering the authentication code provided by your authenticator application. <!--]-->`);
            } else {
              _push2(`<!--[--> Please confirm access to your account by entering one of your emergency recovery codes. <!--]-->`);
            }
            _push2(`</div><form${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "code",
                value: "Code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2A, {
                id: "code",
                ref_key: "codeInput",
                ref: codeInput,
                modelValue: unref(form).code,
                "onUpdate:modelValue": ($event) => unref(form).code = $event,
                type: "text",
                inputmode: "numeric",
                class: "mt-1 block w-full",
                autofocus: "",
                autocomplete: "one-time-code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2F, {
                class: "mt-2",
                message: unref(form).errors.code
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "recovery_code",
                value: "Recovery Code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2A, {
                id: "recovery_code",
                ref_key: "recoveryCodeInput",
                ref: recoveryCodeInput,
                modelValue: unref(form).recovery_code,
                "onUpdate:modelValue": ($event) => unref(form).recovery_code = $event,
                type: "text",
                class: "mt-1 block w-full",
                autocomplete: "one-time-code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2F, {
                class: "mt-2",
                message: unref(form).errors.recovery_code
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            }
            _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}><button type="button" class="text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer"${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<!--[--> Use a recovery code <!--]-->`);
            } else {
              _push2(`<!--[--> Use an authentication code <!--]-->`);
            }
            _push2(`</button>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-4", { "opacity-25": unref(form).processing }],
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log in `);
                } else {
                  return [
                    createTextVNode(" Log in ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("div", { class: "mb-4 text-sm text-gray-600" }, [
                !recovery.value ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  createTextVNode(" Please confirm access to your account by entering the authentication code provided by your authenticator application. ")
                ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
                  createTextVNode(" Please confirm access to your account by entering one of your emergency recovery codes. ")
                ], 64))
              ]),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                !recovery.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_sfc_main$2E, {
                    for: "code",
                    value: "Code"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "code",
                    ref_key: "codeInput",
                    ref: codeInput,
                    modelValue: unref(form).code,
                    "onUpdate:modelValue": ($event) => unref(form).code = $event,
                    type: "text",
                    inputmode: "numeric",
                    class: "mt-1 block w-full",
                    autofocus: "",
                    autocomplete: "one-time-code"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.code
                  }, null, 8, ["message"])
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode(_sfc_main$2E, {
                    for: "recovery_code",
                    value: "Recovery Code"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "recovery_code",
                    ref_key: "recoveryCodeInput",
                    ref: recoveryCodeInput,
                    modelValue: unref(form).recovery_code,
                    "onUpdate:modelValue": ($event) => unref(form).recovery_code = $event,
                    type: "text",
                    class: "mt-1 block w-full",
                    autocomplete: "one-time-code"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.recovery_code
                  }, null, 8, ["message"])
                ])),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  createVNode("button", {
                    type: "button",
                    class: "text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer",
                    onClick: withModifiers(toggleRecovery, ["prevent"])
                  }, [
                    !recovery.value ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                      createTextVNode(" Use a recovery code ")
                    ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
                      createTextVNode(" Use an authentication code ")
                    ], 64))
                  ]),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-4", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Log in ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$25 = _sfc_main$25.setup;
_sfc_main$25.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/TwoFactorChallenge.vue");
  return _sfc_setup$25 ? _sfc_setup$25(props, ctx) : void 0;
};
const __vite_glob_0_21 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$25
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$24 = {
  __name: "VerifyEmail",
  __ssrInlineRender: true,
  props: {
    status: String
  },
  setup(__props) {
    const props = __props;
    const form = useForm({});
    const submit = () => {
      form.post(route("verification.send"));
    };
    const verificationLinkSent = computed(() => props.status === "verification-link-sent");
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Email Verification" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Before continuing, could you verify your email address by clicking on the link we just emailed to you? If you didn&#39;t receive the email, we will gladly send you another. </div>`);
            if (verificationLinkSent.value) {
              _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}> A new verification link has been sent to the email address you provided in your profile settings. </div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<form${_scopeId}><div class="mt-4 flex items-center justify-between"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Resend Verification Email `);
                } else {
                  return [
                    createTextVNode(" Resend Verification Email ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div${_scopeId}>`);
            _push2(ssrRenderComponent(unref(Link), {
              href: _ctx.route("profile.show"),
              class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Edit Profile`);
                } else {
                  return [
                    createTextVNode(" Edit Profile")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(unref(Link), {
              href: _ctx.route("logout"),
              method: "post",
              as: "button",
              class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ms-2"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out `);
                } else {
                  return [
                    createTextVNode(" Log Out ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div></form>`);
          } else {
            return [
              createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Before continuing, could you verify your email address by clicking on the link we just emailed to you? If you didn't receive the email, we will gladly send you another. "),
              verificationLinkSent.value ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mb-4 font-medium text-sm text-green-600"
              }, " A new verification link has been sent to the email address you provided in your profile settings. ")) : createCommentVNode("", true),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                createVNode("div", { class: "mt-4 flex items-center justify-between" }, [
                  createVNode(_sfc_main$2D, {
                    class: { "opacity-25": unref(form).processing },
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Resend Verification Email ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"]),
                  createVNode("div", null, [
                    createVNode(unref(Link), {
                      href: _ctx.route("profile.show"),
                      class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Edit Profile")
                      ]),
                      _: 1
                    }, 8, ["href"]),
                    createVNode(unref(Link), {
                      href: _ctx.route("logout"),
                      method: "post",
                      as: "button",
                      class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ms-2"
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Log Out ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$24 = _sfc_main$24.setup;
_sfc_main$24.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Jetstream/VerifyEmail.vue");
  return _sfc_setup$24 ? _sfc_setup$24(props, ctx) : void 0;
};
const __vite_glob_0_22 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$24
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$23 = {};
function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs) {
  _push(`<!--[--><div class="grid grid-cols-2 gap-2.5"><a class="btn btn-light btn-sm justify-center" href="#"><img alt="" class="size-3.5 shrink-0" src="/static/media/brand-logos/google.svg"> Google </a><a class="btn btn-light btn-sm justify-center" href="#"><img alt="" class="size-3.5 shrink-0 dark:hidden" src="/static/media/brand-logos/apple-black.svg"><img alt="" class="size-3.5 shrink-0 light:hidden" src="/static/media/brand-logos/apple-white.svg"> Icloud </a></div><div class="flex items-center gap-2"><span class="border-t border-gray-200 w-full"></span><span class="text-2xs text-gray-500 font-medium uppercase"> Ou </span><span class="border-t border-gray-200 w-full"></span></div><!--]-->`);
}
const _sfc_setup$23 = _sfc_main$23.setup;
_sfc_main$23.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/SocialAuth.vue");
  return _sfc_setup$23 ? _sfc_setup$23(props, ctx) : void 0;
};
const SocialAuth = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["ssrRender", _sfc_ssrRender$f]]);
const _sfc_main$22 = {
  __name: "Login",
  __ssrInlineRender: true,
  props: {
    canResetPassword: Boolean,
    defaultEmail: String,
    status: String
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      email: props.defaultEmail || "",
      password: props.defaultEmail ? "password" : "",
      remember: false
    });
    const submit = () => {
      form.transform((data) => ({
        ...data,
        remember: form.remember ? "on" : ""
      })).post(route("login"), {
        onStart: () => form.clearErrors(),
        onSuccess: () => {
        },
        onFinish: () => form.reset("password")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_AuthLayout = resolveComponent("AuthLayout");
      const _component_InputError = resolveComponent("InputError");
      const _component_Link = resolveComponent("Link");
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Connexion" }, null, _parent));
      _push(ssrRenderComponent(_component_AuthLayout, { branded: true }, {
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="card max-w-[370px] w-full"${_scopeId}><form class="card-body flex flex-col gap-5 p-10" id="sign_in_form"${_scopeId}><div class="text-center mb-2.5"${_scopeId}><h3 class="text-lg font-medium text-gray-900 leading-none"${_scopeId}> Connexion </h3></div>`);
            if (_ctx.$page.props.socialAuth) {
              _push2(ssrRenderComponent(SocialAuth, null, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex flex-col gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Email </label><input class="input" placeholder="Entre ton email" type="text"${ssrRenderAttr("value", unref(form).email)}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><div class="flex items-center justify-between gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Mot de Passe </label>`);
            if (__props.canResetPassword) {
              _push2(ssrRenderComponent(_component_Link, {
                class: "text-2sm link shrink-0",
                href: _ctx.route("password.request")
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Mot de Passe oublié? `);
                  } else {
                    return [
                      createTextVNode(" Mot de Passe oublié? ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="input" data-toggle-password="true" data-toggle-password-permanent="true"${_scopeId}><input name="user_password" placeholder="Entre ton mot de passe" type="password"${ssrRenderAttr("value", unref(form).password)}${_scopeId}><button class="btn btn-icon" data-toggle-password-trigger="true" type="button"${_scopeId}><i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden"${_scopeId}></i><i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block"${_scopeId}></i></button></div>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><label class="checkbox-group"${_scopeId}><input class="checkbox checkbox-sm" name="remember" type="checkbox"${ssrIncludeBooleanAttr(Array.isArray(unref(form).remember) ? ssrLooseContain(unref(form).remember, null) : unref(form).remember) ? " checked" : ""} y${_scopeId}><span class="checkbox-label"${_scopeId}> Se souvenir de moi </span></label>`);
            _push2(ssrRenderComponent(_component_Button, {
              type: "submit",
              label: "Se connecter",
              loading: unref(form).processing,
              unstyled: "",
              class: "btn btn-primary flex justify-center grow"
            }, null, _parent2, _scopeId));
            if (_ctx.route().has("register")) {
              _push2(`<div class="flex items-center justify-center font-medium"${_scopeId}><span class="text-2sm text-gray-700 me-1.5"${_scopeId}> Besoin d&#39;un compte? </span>`);
              _push2(ssrRenderComponent(_component_Link, {
                class: "text-2sm link underline",
                href: _ctx.route("register")
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Inscris-toi `);
                  } else {
                    return [
                      createTextVNode(" Inscris-toi ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</form></div>`);
          } else {
            return [
              createVNode("div", { class: "card max-w-[370px] w-full" }, [
                createVNode("form", {
                  onSubmit: withModifiers(submit, ["prevent"]),
                  class: "card-body flex flex-col gap-5 p-10",
                  id: "sign_in_form"
                }, [
                  createVNode("div", { class: "text-center mb-2.5" }, [
                    createVNode("h3", { class: "text-lg font-medium text-gray-900 leading-none" }, " Connexion ")
                  ]),
                  _ctx.$page.props.socialAuth ? (openBlock(), createBlock(SocialAuth, { key: 0 })) : createCommentVNode("", true),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label font-normal text-gray-900" }, " Email "),
                    withDirectives(createVNode("input", {
                      class: "input",
                      placeholder: "Entre ton email",
                      type: "text",
                      "onUpdate:modelValue": ($event) => unref(form).email = $event
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, unref(form).email]
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.email
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("div", { class: "flex items-center justify-between gap-1" }, [
                      createVNode("label", { class: "form-label font-normal text-gray-900" }, " Mot de Passe "),
                      __props.canResetPassword ? (openBlock(), createBlock(_component_Link, {
                        key: 0,
                        class: "text-2sm link shrink-0",
                        href: _ctx.route("password.request")
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Mot de Passe oublié? ")
                        ]),
                        _: 1
                      }, 8, ["href"])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", {
                      class: "input",
                      "data-toggle-password": "true",
                      "data-toggle-password-permanent": "true"
                    }, [
                      withDirectives(createVNode("input", {
                        name: "user_password",
                        placeholder: "Entre ton mot de passe",
                        type: "password",
                        "onUpdate:modelValue": ($event) => unref(form).password = $event
                      }, null, 8, ["onUpdate:modelValue"]), [
                        [vModelText, unref(form).password]
                      ]),
                      createVNode("button", {
                        class: "btn btn-icon",
                        "data-toggle-password-trigger": "true",
                        type: "button"
                      }, [
                        createVNode("i", { class: "ki-filled ki-eye text-gray-500 toggle-password-active:hidden" }),
                        createVNode("i", { class: "ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block" })
                      ])
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.password
                    }, null, 8, ["message"])
                  ]),
                  createVNode("label", { class: "checkbox-group" }, [
                    withDirectives(createVNode("input", {
                      class: "checkbox checkbox-sm",
                      name: "remember",
                      type: "checkbox",
                      "onUpdate:modelValue": ($event) => unref(form).remember = $event,
                      y: ""
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelCheckbox, unref(form).remember]
                    ]),
                    createVNode("span", { class: "checkbox-label" }, " Se souvenir de moi ")
                  ]),
                  createVNode(_component_Button, {
                    type: "submit",
                    label: "Se connecter",
                    loading: unref(form).processing,
                    unstyled: "",
                    class: "btn btn-primary flex justify-center grow"
                  }, null, 8, ["loading"]),
                  _ctx.route().has("register") ? (openBlock(), createBlock("div", {
                    key: 1,
                    class: "flex items-center justify-center font-medium"
                  }, [
                    createVNode("span", { class: "text-2sm text-gray-700 me-1.5" }, " Besoin d'un compte? "),
                    createVNode(_component_Link, {
                      class: "text-2sm link underline",
                      href: _ctx.route("register")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Inscris-toi ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])) : createCommentVNode("", true)
                ], 32)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$22 = _sfc_main$22.setup;
_sfc_main$22.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Login.vue");
  return _sfc_setup$22 ? _sfc_setup$22(props, ctx) : void 0;
};
const __vite_glob_0_23 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$22
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$21 = {};
function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs) {
  const _component_Head = resolveComponent("Head");
  const _component_AuthLayout = resolveComponent("AuthLayout");
  const _component_Link = resolveComponent("Link");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Mot de passe modifié" }, null, _parent));
  _push(ssrRenderComponent(_component_AuthLayout, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="card max-w-[440px] w-full"${_scopeId}><div class="card-body p-10"${_scopeId}><div class="flex justify-center mb-5"${_scopeId}><img alt="image" class="dark:hidden max-h-[180px]" src="/static/metronic/tailwind/dist/assets/media/illustrations/32.svg"${_scopeId}><img alt="image" class="light:hidden max-h-[180px]" src="/static/metronic/tailwind/dist/assets/media/illustrations/32-dark.svg"${_scopeId}></div><h3 class="text-lg font-medium text-gray-900 text-center mb-4"${_scopeId}> Mot de passe modifié </h3><div class="text-2sm text-center text-gray-700 mb-7.5"${_scopeId}> Ton mot de passe a été mis à jour avec succès. <br${_scopeId}> La sécurité de ton compte est notre priorité. </div><div class="flex justify-center"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          class: "btn btn-primary",
          href: "/"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Continuer `);
            } else {
              return [
                createTextVNode(" Continuer ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "card max-w-[440px] w-full" }, [
            createVNode("div", { class: "card-body p-10" }, [
              createVNode("div", { class: "flex justify-center mb-5" }, [
                createVNode("img", {
                  alt: "image",
                  class: "dark:hidden max-h-[180px]",
                  src: "/static/metronic/tailwind/dist/assets/media/illustrations/32.svg"
                }),
                createVNode("img", {
                  alt: "image",
                  class: "light:hidden max-h-[180px]",
                  src: "/static/metronic/tailwind/dist/assets/media/illustrations/32-dark.svg"
                })
              ]),
              createVNode("h3", { class: "text-lg font-medium text-gray-900 text-center mb-4" }, " Mot de passe modifié "),
              createVNode("div", { class: "text-2sm text-center text-gray-700 mb-7.5" }, [
                createTextVNode(" Ton mot de passe a été mis à jour avec succès. "),
                createVNode("br"),
                createTextVNode(" La sécurité de ton compte est notre priorité. ")
              ]),
              createVNode("div", { class: "flex justify-center" }, [
                createVNode(_component_Link, {
                  class: "btn btn-primary",
                  href: "/"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Continuer ")
                  ]),
                  _: 1
                })
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$21 = _sfc_main$21.setup;
_sfc_main$21.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/PasswordChanged.vue");
  return _sfc_setup$21 ? _sfc_setup$21(props, ctx) : void 0;
};
const PasswordChanged = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["ssrRender", _sfc_ssrRender$e]]);
const __vite_glob_0_24 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PasswordChanged
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$20 = {
  __name: "Register",
  __ssrInlineRender: true,
  props: {
    invitationError: String,
    invitation: Object
  },
  setup(__props) {
    var _a, _b;
    const props = __props;
    const form = useForm({
      email: ((_a = props.invitation) == null ? void 0 : _a.email) || null,
      phone: null,
      password: "",
      password_confirmation: "",
      terms: false,
      invitation_id: ((_b = props.invitation) == null ? void 0 : _b.id) || null
    });
    const submit = () => {
      form.post(route("register"), {
        onStart: () => form.clearErrors(),
        onFinish: () => form.reset("password", "password_confirmation")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_AuthLayout = resolveComponent("AuthLayout");
      const _component_InputError = resolveComponent("InputError");
      const _component_Button = __unplugin_components_0$1;
      const _component_Link = resolveComponent("Link");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Inscription" }, null, _parent));
      _push(ssrRenderComponent(_component_AuthLayout, { branded: true }, {
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="card max-w-[370px] w-full"${_scopeId}><form class="card-body flex flex-col gap-5 p-10" id="sign_up_form"${_scopeId}><div class="text-center mb-2.5"${_scopeId}><h3 class="text-lg font-medium text-gray-900 leading-none"${_scopeId}> Inscription </h3></div>`);
            if (_ctx.$page.props.socialAuth) {
              _push2(ssrRenderComponent(SocialAuth, null, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex flex-col gap-1"${_scopeId}><label class="form-label text-gray-900"${_scopeId}> Email </label><input class="input" name="user_email" placeholder="Ecris ton email" type="email" autofocus${ssrRenderAttr("value", unref(form).email)}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label text-gray-900"${_scopeId}> Numéro de téléphone </label><input class="input" name="user_phone" placeholder="Ecris ton numéro de téléphone" type="text"${ssrRenderAttr("value", unref(form).phone)}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.phone
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Mot de passe </label><div class="input" data-toggle-password="true" data-toggle-password-permanent="true"${_scopeId}><input name="user_password" placeholder="Crée ton mot de passe" type="password"${ssrRenderAttr("value", unref(form).password)}${_scopeId}><button class="btn btn-icon" data-toggle-password-trigger="true" type="button"${_scopeId}><i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden"${_scopeId}></i><i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block"${_scopeId}></i></button></div>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Confirmation de mot de passe </label><div class="input" data-toggle-password="true" data-toggle-password-permanent="true"${_scopeId}><input name="user_password" placeholder="Ecris à nouveau le mot de passe" type="password"${ssrRenderAttr("value", unref(form).password_confirmation)}${_scopeId}><button class="btn btn-icon" data-toggle-password-trigger="true" type="button"${_scopeId}><i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden"${_scopeId}></i><i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block"${_scopeId}></i></button></div>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.password_confirmation
            }, null, _parent2, _scopeId));
            _push2(`</div><label class="checkbox-group"${_scopeId}><input class="checkbox checkbox-sm" name="terms" type="checkbox"${ssrIncludeBooleanAttr(Array.isArray(unref(form).terms) ? ssrLooseContain(unref(form).terms, null) : unref(form).terms) ? " checked" : ""} required${_scopeId}><span class="checkbox-label"${_scopeId}> J&#39;accepte les <a class="text-2sm link" target="_blank"${ssrRenderAttr("href", _ctx.$page.props.config.tcs_url ?? "#")}${_scopeId}> Conditions d&#39;utilisation </a></span></label>`);
            _push2(ssrRenderComponent(_component_Button, {
              type: "submit",
              label: "S'inscrire",
              loading: unref(form).processing,
              unstyled: "",
              class: "btn btn-primary flex justify-center grow"
            }, null, _parent2, _scopeId));
            _push2(`<div class="flex items-center justify-center"${_scopeId}><span class="text-2sm text-gray-700 me-1.5"${_scopeId}> Tu as déjà un compte ? </span>`);
            _push2(ssrRenderComponent(_component_Link, {
              class: "text-2sm link underline",
              href: _ctx.route("login")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Connecte-toi `);
                } else {
                  return [
                    createTextVNode(" Connecte-toi ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form></div>`);
          } else {
            return [
              createVNode("div", { class: "card max-w-[370px] w-full" }, [
                createVNode("form", {
                  onSubmit: withModifiers(submit, ["prevent"]),
                  class: "card-body flex flex-col gap-5 p-10",
                  id: "sign_up_form"
                }, [
                  createVNode("div", { class: "text-center mb-2.5" }, [
                    createVNode("h3", { class: "text-lg font-medium text-gray-900 leading-none" }, " Inscription ")
                  ]),
                  _ctx.$page.props.socialAuth ? (openBlock(), createBlock(SocialAuth, { key: 0 })) : createCommentVNode("", true),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label text-gray-900" }, " Email "),
                    withDirectives(createVNode("input", {
                      class: "input",
                      name: "user_email",
                      placeholder: "Ecris ton email",
                      type: "email",
                      autofocus: "",
                      "onUpdate:modelValue": ($event) => unref(form).email = $event
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, unref(form).email]
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.email
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label text-gray-900" }, " Numéro de téléphone "),
                    withDirectives(createVNode("input", {
                      class: "input",
                      name: "user_phone",
                      placeholder: "Ecris ton numéro de téléphone",
                      type: "text",
                      "onUpdate:modelValue": ($event) => unref(form).phone = $event
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, unref(form).phone]
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.phone
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label font-normal text-gray-900" }, " Mot de passe "),
                    createVNode("div", {
                      class: "input",
                      "data-toggle-password": "true",
                      "data-toggle-password-permanent": "true"
                    }, [
                      withDirectives(createVNode("input", {
                        name: "user_password",
                        placeholder: "Crée ton mot de passe",
                        type: "password",
                        "onUpdate:modelValue": ($event) => unref(form).password = $event
                      }, null, 8, ["onUpdate:modelValue"]), [
                        [vModelText, unref(form).password]
                      ]),
                      createVNode("button", {
                        class: "btn btn-icon",
                        "data-toggle-password-trigger": "true",
                        type: "button"
                      }, [
                        createVNode("i", { class: "ki-filled ki-eye text-gray-500 toggle-password-active:hidden" }),
                        createVNode("i", { class: "ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block" })
                      ])
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.password
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label font-normal text-gray-900" }, " Confirmation de mot de passe "),
                    createVNode("div", {
                      class: "input",
                      "data-toggle-password": "true",
                      "data-toggle-password-permanent": "true"
                    }, [
                      withDirectives(createVNode("input", {
                        name: "user_password",
                        placeholder: "Ecris à nouveau le mot de passe",
                        type: "password",
                        "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event
                      }, null, 8, ["onUpdate:modelValue"]), [
                        [vModelText, unref(form).password_confirmation]
                      ]),
                      createVNode("button", {
                        class: "btn btn-icon",
                        "data-toggle-password-trigger": "true",
                        type: "button"
                      }, [
                        createVNode("i", { class: "ki-filled ki-eye text-gray-500 toggle-password-active:hidden" }),
                        createVNode("i", { class: "ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block" })
                      ])
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.password_confirmation
                    }, null, 8, ["message"])
                  ]),
                  createVNode("label", { class: "checkbox-group" }, [
                    withDirectives(createVNode("input", {
                      class: "checkbox checkbox-sm",
                      name: "terms",
                      type: "checkbox",
                      "onUpdate:modelValue": ($event) => unref(form).terms = $event,
                      required: ""
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelCheckbox, unref(form).terms]
                    ]),
                    createVNode("span", { class: "checkbox-label" }, [
                      createTextVNode(" J'accepte les "),
                      createVNode("a", {
                        class: "text-2sm link",
                        target: "_blank",
                        href: _ctx.$page.props.config.tcs_url ?? "#"
                      }, " Conditions d'utilisation ", 8, ["href"])
                    ])
                  ]),
                  createVNode(_component_Button, {
                    type: "submit",
                    label: "S'inscrire",
                    loading: unref(form).processing,
                    unstyled: "",
                    class: "btn btn-primary flex justify-center grow"
                  }, null, 8, ["loading"]),
                  createVNode("div", { class: "flex items-center justify-center" }, [
                    createVNode("span", { class: "text-2sm text-gray-700 me-1.5" }, " Tu as déjà un compte ? "),
                    createVNode(_component_Link, {
                      class: "text-2sm link underline",
                      href: _ctx.route("login")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Connecte-toi ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ], 32)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$20 = _sfc_main$20.setup;
_sfc_main$20.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Register.vue");
  return _sfc_setup$20 ? _sfc_setup$20(props, ctx) : void 0;
};
const __vite_glob_0_25 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$20
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1$ = {
  __name: "ResetPassword",
  __ssrInlineRender: true,
  props: {
    email: String,
    token: String
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      token: props.token,
      email: props.email,
      password: "",
      password_confirmation: ""
    });
    const submit = () => {
      form.post(route("password.update"), {
        onFinish: () => form.reset("password", "password_confirmation")
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_AuthLayout = resolveComponent("AuthLayout");
      const _component_InputError = resolveComponent("InputError");
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Réinitialisation de mot de passe" }, null, _parent));
      _push(ssrRenderComponent(_component_AuthLayout, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="card max-w-[370px] w-full"${_scopeId}><form class="card-body flex flex-col gap-5 p-10" id="reset_password_change_password_form"${_scopeId}><div class="text-center"${_scopeId}><h3 class="text-lg font-medium text-gray-900"${_scopeId}> Réinitialisation de mot de passe </h3><span class="text-2sm text-gray-700"${_scopeId}> Créez votre nouveau mot de passe </span></div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label text-gray-900"${_scopeId}> Email </label><input class="input" placeholder="Ecris ton email actuel" type="email"${ssrRenderAttr("value", unref(form).email)}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.email
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label text-gray-900"${_scopeId}> Nouveau mot de passe </label><label class="input" data-toggle-password="true"${_scopeId}><input name="user_new_password" placeholder="Ecris le nouveau mot de passe" type="password"${ssrRenderAttr("value", unref(form).password)}${_scopeId}><div class="btn btn-icon" data-toggle-password-trigger="true"${_scopeId}><i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden"${_scopeId}></i><i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block"${_scopeId}></i></div></label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.password
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col gap-1"${_scopeId}><label class="form-label font-normal text-gray-900"${_scopeId}> Confirmation du mot de passe </label><label class="input" data-toggle-password="true"${_scopeId}><input name="user_confirm_password" placeholder="Confirme le nouveau mot de passe" type="password"${ssrRenderAttr("value", unref(form).password_confirmation)}${_scopeId}><div class="btn btn-icon" data-toggle-password-trigger="true"${_scopeId}><i class="ki-filled ki-eye text-gray-500 toggle-password-active:hidden"${_scopeId}></i><i class="ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block"${_scopeId}></i></div></label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors.password_confirmation
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_component_Button, {
              label: "Sauvegarder",
              type: "submit",
              loading: unref(form).processing,
              unstyled: "",
              class: "btn btn-primary flex justify-center grow"
            }, null, _parent2, _scopeId));
            _push2(`</form></div>`);
          } else {
            return [
              createVNode("div", { class: "card max-w-[370px] w-full" }, [
                createVNode("form", {
                  onSubmit: withModifiers(submit, ["prevent"]),
                  class: "card-body flex flex-col gap-5 p-10",
                  id: "reset_password_change_password_form"
                }, [
                  createVNode("div", { class: "text-center" }, [
                    createVNode("h3", { class: "text-lg font-medium text-gray-900" }, " Réinitialisation de mot de passe "),
                    createVNode("span", { class: "text-2sm text-gray-700" }, " Créez votre nouveau mot de passe ")
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label text-gray-900" }, " Email "),
                    withDirectives(createVNode("input", {
                      class: "input",
                      placeholder: "Ecris ton email actuel",
                      type: "email",
                      "onUpdate:modelValue": ($event) => unref(form).email = $event
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, unref(form).email]
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.email
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label text-gray-900" }, " Nouveau mot de passe "),
                    createVNode("label", {
                      class: "input",
                      "data-toggle-password": "true"
                    }, [
                      withDirectives(createVNode("input", {
                        name: "user_new_password",
                        placeholder: "Ecris le nouveau mot de passe",
                        type: "password",
                        "onUpdate:modelValue": ($event) => unref(form).password = $event
                      }, null, 8, ["onUpdate:modelValue"]), [
                        [vModelText, unref(form).password]
                      ]),
                      createVNode("div", {
                        class: "btn btn-icon",
                        "data-toggle-password-trigger": "true"
                      }, [
                        createVNode("i", { class: "ki-filled ki-eye text-gray-500 toggle-password-active:hidden" }),
                        createVNode("i", { class: "ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block" })
                      ])
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.password
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("label", { class: "form-label font-normal text-gray-900" }, " Confirmation du mot de passe "),
                    createVNode("label", {
                      class: "input",
                      "data-toggle-password": "true"
                    }, [
                      withDirectives(createVNode("input", {
                        name: "user_confirm_password",
                        placeholder: "Confirme le nouveau mot de passe",
                        type: "password",
                        "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event
                      }, null, 8, ["onUpdate:modelValue"]), [
                        [vModelText, unref(form).password_confirmation]
                      ]),
                      createVNode("div", {
                        class: "btn btn-icon",
                        "data-toggle-password-trigger": "true"
                      }, [
                        createVNode("i", { class: "ki-filled ki-eye text-gray-500 toggle-password-active:hidden" }),
                        createVNode("i", { class: "ki-filled ki-eye-slash text-gray-500 hidden toggle-password-active:block" })
                      ])
                    ]),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.password_confirmation
                    }, null, 8, ["message"])
                  ]),
                  createVNode(_component_Button, {
                    label: "Sauvegarder",
                    type: "submit",
                    loading: unref(form).processing,
                    unstyled: "",
                    class: "btn btn-primary flex justify-center grow"
                  }, null, 8, ["loading"])
                ], 32)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1$ = _sfc_main$1$.setup;
_sfc_main$1$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ResetPassword.vue");
  return _sfc_setup$1$ ? _sfc_setup$1$(props, ctx) : void 0;
};
const __vite_glob_0_26 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1$
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1_ = {
  __name: "TwoFactorChallenge",
  __ssrInlineRender: true,
  setup(__props) {
    const recovery = ref(false);
    const form = useForm({
      code: "",
      recovery_code: ""
    });
    const recoveryCodeInput = ref(null);
    const codeInput = ref(null);
    const toggleRecovery = async () => {
      recovery.value ^= true;
      await nextTick();
      if (recovery.value) {
        recoveryCodeInput.value.focus();
        form.code = "";
      } else {
        codeInput.value.focus();
        form.recovery_code = "";
      }
    };
    const submit = () => {
      form.post(route("two-factor.login"));
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Two-factor Confirmation" }, null, _parent));
      _push(ssrRenderComponent(AuthenticationCard, null, {
        logo: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2b, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2b)
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<!--[--> Please confirm access to your account by entering the authentication code provided by your authenticator application. <!--]-->`);
            } else {
              _push2(`<!--[--> Please confirm access to your account by entering one of your emergency recovery codes. <!--]-->`);
            }
            _push2(`</div><form${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "code",
                value: "Code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2A, {
                id: "code",
                ref_key: "codeInput",
                ref: codeInput,
                modelValue: unref(form).code,
                "onUpdate:modelValue": ($event) => unref(form).code = $event,
                type: "text",
                inputmode: "numeric",
                class: "mt-1 block w-full",
                autofocus: "",
                autocomplete: "one-time-code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2F, {
                class: "mt-2",
                message: unref(form).errors.code
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "recovery_code",
                value: "Recovery Code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2A, {
                id: "recovery_code",
                ref_key: "recoveryCodeInput",
                ref: recoveryCodeInput,
                modelValue: unref(form).recovery_code,
                "onUpdate:modelValue": ($event) => unref(form).recovery_code = $event,
                type: "text",
                class: "mt-1 block w-full",
                autocomplete: "one-time-code"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$2F, {
                class: "mt-2",
                message: unref(form).errors.recovery_code
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            }
            _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}><button type="button" class="text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer"${_scopeId}>`);
            if (!recovery.value) {
              _push2(`<!--[--> Use a recovery code <!--]-->`);
            } else {
              _push2(`<!--[--> Use an authentication code <!--]-->`);
            }
            _push2(`</button>`);
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-4", { "opacity-25": unref(form).processing }],
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log in `);
                } else {
                  return [
                    createTextVNode(" Log in ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></form>`);
          } else {
            return [
              createVNode("div", { class: "mb-4 text-sm text-gray-600" }, [
                !recovery.value ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  createTextVNode(" Please confirm access to your account by entering the authentication code provided by your authenticator application. ")
                ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
                  createTextVNode(" Please confirm access to your account by entering one of your emergency recovery codes. ")
                ], 64))
              ]),
              createVNode("form", {
                onSubmit: withModifiers(submit, ["prevent"])
              }, [
                !recovery.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_sfc_main$2E, {
                    for: "code",
                    value: "Code"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "code",
                    ref_key: "codeInput",
                    ref: codeInput,
                    modelValue: unref(form).code,
                    "onUpdate:modelValue": ($event) => unref(form).code = $event,
                    type: "text",
                    inputmode: "numeric",
                    class: "mt-1 block w-full",
                    autofocus: "",
                    autocomplete: "one-time-code"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.code
                  }, null, 8, ["message"])
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode(_sfc_main$2E, {
                    for: "recovery_code",
                    value: "Recovery Code"
                  }),
                  createVNode(_sfc_main$2A, {
                    id: "recovery_code",
                    ref_key: "recoveryCodeInput",
                    ref: recoveryCodeInput,
                    modelValue: unref(form).recovery_code,
                    "onUpdate:modelValue": ($event) => unref(form).recovery_code = $event,
                    type: "text",
                    class: "mt-1 block w-full",
                    autocomplete: "one-time-code"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_sfc_main$2F, {
                    class: "mt-2",
                    message: unref(form).errors.recovery_code
                  }, null, 8, ["message"])
                ])),
                createVNode("div", { class: "flex items-center justify-end mt-4" }, [
                  createVNode("button", {
                    type: "button",
                    class: "text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer",
                    onClick: withModifiers(toggleRecovery, ["prevent"])
                  }, [
                    !recovery.value ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                      createTextVNode(" Use a recovery code ")
                    ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
                      createTextVNode(" Use an authentication code ")
                    ], 64))
                  ]),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-4", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Log in ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ])
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1_ = _sfc_main$1_.setup;
_sfc_main$1_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/TwoFactorChallenge.vue");
  return _sfc_setup$1_ ? _sfc_setup$1_(props, ctx) : void 0;
};
const __vite_glob_0_27 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1_
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1Z = {
  __name: "VerifyEmail",
  __ssrInlineRender: true,
  props: {
    status: String
  },
  setup(__props) {
    const props = __props;
    const editEmail = ref(false);
    const form = useForm({});
    const submit = () => {
      form.post(route("verification.send"));
    };
    const verificationLinkSent = computed(
      () => props.status === "verification-link-sent"
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_AuthLayout = resolveComponent("AuthLayout");
      const _component_Dialog = __unplugin_components_0$2;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Verification d'email" }, null, _parent));
      _push(ssrRenderComponent(_component_AuthLayout, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Dialog, {
              visible: editEmail.value,
              "onUpdate:visible": ($event) => editEmail.value = $event,
              style: { width: "50rem" },
              modal: "",
              breakpoints: unref(dialogBreakpoints)
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$2x, {
                    user: _ctx.$page.props.auth.user,
                    onUpdated: ($event) => editEmail.value = false
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$2x, {
                      user: _ctx.$page.props.auth.user,
                      onUpdated: ($event) => editEmail.value = false
                    }, null, 8, ["user", "onUpdated"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="card max-w-[440px] w-full"${_scopeId}><div action="#" class="card-body p-10" id="check_email_form" method="post"${_scopeId}><div class="flex justify-center py-10"${_scopeId}><img alt="image" class="dark:hidden max-h-[130px]" src="/static/media/illustrations/30.svg"${_scopeId}><img alt="image" class="light:hidden max-h-[130px]" src="/static/media/illustrations/30-dark.svg"${_scopeId}></div><h3 class="text-lg font-medium text-gray-900 text-center mb-3"${_scopeId}> Vérifiez votre boîte mail </h3><div class="text-2sm text-center text-gray-700 mb-7.5"${_scopeId}> Veuillez cliquer sur le lien envoyer à <a class="text-2sm text-gray-900 font-medium hover:text-primary-active" href="#"${_scopeId}>${ssrInterpolate(_ctx.$page.props.auth.user.email)}</a><br${_scopeId}> pour activer votre compte. Merci ! </div><div class="flex justify-center mb-5"${_scopeId}><button class="btn btn-primary flex justify-center"${_scopeId}> Utiliser un autre email </button></div><div class="flex items-center justify-center gap-1"${_scopeId}><span class="text-xs text-gray-700"${_scopeId}> Vous n&#39;avez pas reçu d&#39;email ? </span>`);
            _push2(ssrRenderComponent(_component_Button, {
              unstyled: "",
              label: "Renvoyer",
              loading: unref(form).processing,
              class: "text-xs font-medium link",
              onClick: submit
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            if (verificationLinkSent.value) {
              _push2(`<div class="mt-4 font-medium text-sm text-green-600 text-center"${_scopeId}> Un nouveau lien de verification a été envoyé à votre adresse email. </div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          } else {
            return [
              createVNode(_component_Dialog, {
                visible: editEmail.value,
                "onUpdate:visible": ($event) => editEmail.value = $event,
                style: { width: "50rem" },
                modal: "",
                breakpoints: unref(dialogBreakpoints)
              }, {
                default: withCtx(() => [
                  createVNode(_sfc_main$2x, {
                    user: _ctx.$page.props.auth.user,
                    onUpdated: ($event) => editEmail.value = false
                  }, null, 8, ["user", "onUpdated"])
                ]),
                _: 1
              }, 8, ["visible", "onUpdate:visible", "breakpoints"]),
              createVNode("div", { class: "card max-w-[440px] w-full" }, [
                createVNode("div", {
                  action: "#",
                  class: "card-body p-10",
                  id: "check_email_form",
                  method: "post"
                }, [
                  createVNode("div", { class: "flex justify-center py-10" }, [
                    createVNode("img", {
                      alt: "image",
                      class: "dark:hidden max-h-[130px]",
                      src: "/static/media/illustrations/30.svg"
                    }),
                    createVNode("img", {
                      alt: "image",
                      class: "light:hidden max-h-[130px]",
                      src: "/static/media/illustrations/30-dark.svg"
                    })
                  ]),
                  createVNode("h3", { class: "text-lg font-medium text-gray-900 text-center mb-3" }, " Vérifiez votre boîte mail "),
                  createVNode("div", { class: "text-2sm text-center text-gray-700 mb-7.5" }, [
                    createTextVNode(" Veuillez cliquer sur le lien envoyer à "),
                    createVNode("a", {
                      class: "text-2sm text-gray-900 font-medium hover:text-primary-active",
                      href: "#"
                    }, toDisplayString(_ctx.$page.props.auth.user.email), 1),
                    createVNode("br"),
                    createTextVNode(" pour activer votre compte. Merci ! ")
                  ]),
                  createVNode("div", { class: "flex justify-center mb-5" }, [
                    createVNode("button", {
                      class: "btn btn-primary flex justify-center",
                      onClick: ($event) => editEmail.value = true
                    }, " Utiliser un autre email ", 8, ["onClick"])
                  ]),
                  createVNode("div", { class: "flex items-center justify-center gap-1" }, [
                    createVNode("span", { class: "text-xs text-gray-700" }, " Vous n'avez pas reçu d'email ? "),
                    createVNode(_component_Button, {
                      unstyled: "",
                      label: "Renvoyer",
                      loading: unref(form).processing,
                      class: "text-xs font-medium link",
                      onClick: submit
                    }, null, 8, ["loading"])
                  ]),
                  verificationLinkSent.value ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "mt-4 font-medium text-sm text-green-600 text-center"
                  }, " Un nouveau lien de verification a été envoyé à votre adresse email. ")) : createCommentVNode("", true)
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1Z = _sfc_main$1Z.setup;
_sfc_main$1Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/VerifyEmail.vue");
  return _sfc_setup$1Z ? _sfc_setup$1Z(props, ctx) : void 0;
};
const __vite_glob_0_28 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1Z
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1Y = {};
function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs) {
  const _component_ErrorLayout = resolveComponent("ErrorLayout");
  _push(ssrRenderComponent(_component_ErrorLayout, _attrs, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center"${_scopeId}><div class="mb-16"${_scopeId}><img alt="image" class="dark:hidden max-h-[160px]" src="/images/non-autorise.png"${_scopeId}><img alt="image" class="light:hidden max-h-[160px]" src="/images/non-autorise.png"${_scopeId}></div><span class="badge badge-primary badge-outline mb-3"${_scopeId}> Erreur 403 </span><h3 class="text-2.5xl font-semibold text-gray-900 text-center mb-2"${_scopeId}> Non Autorisé </h3><div class="text-md text-center text-gray-700 mb-10"${_scopeId}> Vous n&#39;êtes pas autorisé à accéder à cette page. </div><a class="btn btn-primary flex justify-center" href="/"${_scopeId}> Aller à Accueil </a></div>`);
      } else {
        return [
          createVNode("div", { class: "flex flex-col items-center" }, [
            createVNode("div", { class: "mb-16" }, [
              createVNode("img", {
                alt: "image",
                class: "dark:hidden max-h-[160px]",
                src: "/images/non-autorise.png"
              }),
              createVNode("img", {
                alt: "image",
                class: "light:hidden max-h-[160px]",
                src: "/images/non-autorise.png"
              })
            ]),
            createVNode("span", { class: "badge badge-primary badge-outline mb-3" }, " Erreur 403 "),
            createVNode("h3", { class: "text-2.5xl font-semibold text-gray-900 text-center mb-2" }, " Non Autorisé "),
            createVNode("div", { class: "text-md text-center text-gray-700 mb-10" }, " Vous n'êtes pas autorisé à accéder à cette page. "),
            createVNode("a", {
              class: "btn btn-primary flex justify-center",
              href: "/"
            }, " Aller à Accueil ")
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1Y = _sfc_main$1Y.setup;
_sfc_main$1Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Error/403.vue");
  return _sfc_setup$1Y ? _sfc_setup$1Y(props, ctx) : void 0;
};
const _403 = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["ssrRender", _sfc_ssrRender$d]]);
const __vite_glob_0_29 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _403
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1X = {};
function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs) {
  const _component_ErrorLayout = resolveComponent("ErrorLayout");
  _push(ssrRenderComponent(_component_ErrorLayout, mergeProps({ title: "404 Error" }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center"${_scopeId}><div class="mb-10"${_scopeId}><img alt="image" class="dark:hidden max-h-[160px]" src="/static/media/illustrations/19.svg"${_scopeId}><img alt="image" class="light:hidden max-h-[160px]" src="/static/media/illustrations/19-dark.svg"${_scopeId}></div><span class="badge badge-primary badge-outline mb-3"${_scopeId}> Erreur 404 </span><h3 class="text-2.5xl font-semibold text-gray-900 text-center mb-2"${_scopeId}> Page non trouvée </h3><div class="text-md text-center text-gray-700 mb-10"${_scopeId}> La page demandée est absente. <br${_scopeId}> Veuillez vérifier l&#39;URL ou <a class="text-primary font-medium hover:text-primary-active" href="/"${_scopeId}> Retourner sur la page d&#39;accueil </a> . </div><div class="relative"${_scopeId}><form action="/"${_scopeId}><input class="input ps-8 max-w-64" placeholder="Rechercher une page" type="text" value=""${_scopeId}><button class="btn btn-clear btn-icon text-gray-500 btn-sm absolute start-0 top-2/4 -translate-y-2/4 ms-1"${_scopeId}><i class="ki-filled ki-magnifier"${_scopeId}></i></button></form></div></div>`);
      } else {
        return [
          createVNode("div", { class: "flex flex-col items-center" }, [
            createVNode("div", { class: "mb-10" }, [
              createVNode("img", {
                alt: "image",
                class: "dark:hidden max-h-[160px]",
                src: "/static/media/illustrations/19.svg"
              }),
              createVNode("img", {
                alt: "image",
                class: "light:hidden max-h-[160px]",
                src: "/static/media/illustrations/19-dark.svg"
              })
            ]),
            createVNode("span", { class: "badge badge-primary badge-outline mb-3" }, " Erreur 404 "),
            createVNode("h3", { class: "text-2.5xl font-semibold text-gray-900 text-center mb-2" }, " Page non trouvée "),
            createVNode("div", { class: "text-md text-center text-gray-700 mb-10" }, [
              createTextVNode(" La page demandée est absente. "),
              createVNode("br"),
              createTextVNode(" Veuillez vérifier l'URL ou "),
              createVNode("a", {
                class: "text-primary font-medium hover:text-primary-active",
                href: "/"
              }, " Retourner sur la page d'accueil "),
              createTextVNode(" . ")
            ]),
            createVNode("div", { class: "relative" }, [
              createVNode("form", { action: "/" }, [
                createVNode("input", {
                  class: "input ps-8 max-w-64",
                  placeholder: "Rechercher une page",
                  type: "text",
                  value: ""
                }),
                createVNode("button", { class: "btn btn-clear btn-icon text-gray-500 btn-sm absolute start-0 top-2/4 -translate-y-2/4 ms-1" }, [
                  createVNode("i", { class: "ki-filled ki-magnifier" })
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1X = _sfc_main$1X.setup;
_sfc_main$1X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Error/404.vue");
  return _sfc_setup$1X ? _sfc_setup$1X(props, ctx) : void 0;
};
const _404 = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["ssrRender", _sfc_ssrRender$c]]);
const __vite_glob_0_30 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _404
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1W = {};
function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs) {
  const _component_ErrorLayout = resolveComponent("ErrorLayout");
  _push(ssrRenderComponent(_component_ErrorLayout, _attrs, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center"${_scopeId}><div class="mb-16"${_scopeId}><img alt="image" class="dark:hidden max-h-[160px]" src="/static/media/illustrations/expired.png"${_scopeId}><img alt="image" class="light:hidden max-h-[160px]" src="/static/media/illustrations/expired.png"${_scopeId}></div><span class="badge badge-primary badge-outline mb-3"${_scopeId}> Erreur 419 </span><h3 class="text-2.5xl font-semibold text-gray-900 text-center mb-2"${_scopeId}> Page Expirée </h3><div class="text-md text-center text-gray-700 mb-10"${_scopeId}> La page actuelle est expirée. Veuillez <a class="text-primary font-medium hover:text-primary-active" href="#" onclick="refreshPage()"${_scopeId}> Réactualiser </a></div><a class="btn btn-primary flex justify-center" href="/"${_scopeId}> Accueil </a></div>`);
      } else {
        return [
          createVNode("div", { class: "flex flex-col items-center" }, [
            createVNode("div", { class: "mb-16" }, [
              createVNode("img", {
                alt: "image",
                class: "dark:hidden max-h-[160px]",
                src: "/static/media/illustrations/expired.png"
              }),
              createVNode("img", {
                alt: "image",
                class: "light:hidden max-h-[160px]",
                src: "/static/media/illustrations/expired.png"
              })
            ]),
            createVNode("span", { class: "badge badge-primary badge-outline mb-3" }, " Erreur 419 "),
            createVNode("h3", { class: "text-2.5xl font-semibold text-gray-900 text-center mb-2" }, " Page Expirée "),
            createVNode("div", { class: "text-md text-center text-gray-700 mb-10" }, [
              createTextVNode(" La page actuelle est expirée. Veuillez "),
              createVNode("a", {
                class: "text-primary font-medium hover:text-primary-active",
                href: "#",
                onclick: "refreshPage()"
              }, " Réactualiser ")
            ]),
            createVNode("a", {
              class: "btn btn-primary flex justify-center",
              href: "/"
            }, " Accueil ")
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1W = _sfc_main$1W.setup;
_sfc_main$1W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Error/419.vue");
  return _sfc_setup$1W ? _sfc_setup$1W(props, ctx) : void 0;
};
const _419 = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["ssrRender", _sfc_ssrRender$b]]);
const __vite_glob_0_31 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _419
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1V = {};
function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs) {
  const _component_ErrorLayout = resolveComponent("ErrorLayout");
  _push(ssrRenderComponent(_component_ErrorLayout, _attrs, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex flex-col items-center"${_scopeId}><div class="mb-16"${_scopeId}><img alt="image" class="dark:hidden max-h-[160px]" src="/static/media/illustrations/20.svg"${_scopeId}><img alt="image" class="light:hidden max-h-[160px]" src="/static/media/illustrations/20-dark.svg"${_scopeId}></div><span class="badge badge-primary badge-outline mb-3"${_scopeId}> Erreur 500 </span><h3 class="text-2.5xl font-semibold text-gray-900 text-center mb-2"${_scopeId}> Erreur Interne Serveur </h3><div class="text-md text-center text-gray-700 mb-10"${_scopeId}> Une erreur interne du serveur s&#39;est produite. Veuillez réessayer ou <a class="text-primary font-medium hover:text-primary-active" href="#"${_scopeId}> Nous Contacter </a> pour assistance. </div><a class="btn btn-primary flex justify-center" href="/"${_scopeId}> Accueil </a></div>`);
      } else {
        return [
          createVNode("div", { class: "flex flex-col items-center" }, [
            createVNode("div", { class: "mb-16" }, [
              createVNode("img", {
                alt: "image",
                class: "dark:hidden max-h-[160px]",
                src: "/static/media/illustrations/20.svg"
              }),
              createVNode("img", {
                alt: "image",
                class: "light:hidden max-h-[160px]",
                src: "/static/media/illustrations/20-dark.svg"
              })
            ]),
            createVNode("span", { class: "badge badge-primary badge-outline mb-3" }, " Erreur 500 "),
            createVNode("h3", { class: "text-2.5xl font-semibold text-gray-900 text-center mb-2" }, " Erreur Interne Serveur "),
            createVNode("div", { class: "text-md text-center text-gray-700 mb-10" }, [
              createTextVNode(" Une erreur interne du serveur s'est produite. Veuillez réessayer ou "),
              createVNode("a", {
                class: "text-primary font-medium hover:text-primary-active",
                href: "#"
              }, " Nous Contacter "),
              createTextVNode(" pour assistance. ")
            ]),
            createVNode("a", {
              class: "btn btn-primary flex justify-center",
              href: "/"
            }, " Accueil ")
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1V = _sfc_main$1V.setup;
_sfc_main$1V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Error/500.vue");
  return _sfc_setup$1V ? _sfc_setup$1V(props, ctx) : void 0;
};
const _500 = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["ssrRender", _sfc_ssrRender$a]]);
const __vite_glob_0_32 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _500
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1U = {
  __name: "CreatePanel",
  __ssrInlineRender: true,
  props: {
    image: String,
    title: {
      type: String,
      default: "Panel de bord"
    },
    description: {
      type: String,
      default: "Créer et gérer."
    },
    btnText: {
      type: String,
      default: "Ajouter"
    },
    createComponent: [Object, Function]
    // Accepte un composant Vue
  },
  setup(__props) {
    const create = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card md:h-full" }, _attrs))}><div class="card-body flex flex-col place-content-center gap-5">`);
      if (__props.image) {
        _push(`<div class="flex justify-center"><img alt="image" class="max-h-[180px]"${ssrRenderAttr("src", __props.image)}></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="flex flex-col gap-4"><div class="flex flex-col gap-3 text-center"><h2 class="text-1.5xl font-semibold text-gray-900">${ssrInterpolate(__props.title)}</h2><p class="text-sm font-medium text-gray-700">${ssrInterpolate(__props.description)}</p></div><div class="flex justify-center"><button class="btn btn-primary">${ssrInterpolate(__props.btnText)}</button>`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: create.value,
        "onUpdate:visible": ($event) => create.value = $event,
        modal: "",
        header: "Nouvelle donnée de " + __props.title,
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(__props.createComponent), {
              onCreated: ($event) => create.value = false,
              onCanceled: ($event) => create.value = false
            }, null), _parent2, _scopeId);
          } else {
            return [
              (openBlock(), createBlock(resolveDynamicComponent(__props.createComponent), {
                onCreated: ($event) => create.value = false,
                onCanceled: ($event) => create.value = false
              }, null, 40, ["onCreated", "onCanceled"]))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$1U = _sfc_main$1U.setup;
_sfc_main$1U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/CreatePanel.vue");
  return _sfc_setup$1U ? _sfc_setup$1U(props, ctx) : void 0;
};
const { api } = useApi();
const useUsersStore = defineStore("usersStore", {
  state: () => ({
    users: [],
    managers: [],
    admins: [],
    item: null
  }),
  getters: {
    getUser: (state) => (id = null) => {
      return id ? state.list.find((user) => user.id == id) : state.item;
    }
  },
  actions: {
    async setUser(item) {
      this.item = item;
    },
    async fetchUsers() {
      await api.get("/users").then((response) => {
        this.users = response.data;
      }).catch((error) => {
        console.log(error);
      });
    },
    async fetchManagers() {
      await api.get("/managers").then((response) => {
        this.users = response.data;
      }).catch((error) => {
        console.log(error);
      });
    },
    async fetchAdmins() {
      await api.get("/admins").then((response) => {
        this.admins = response.data;
      }).catch((error) => {
        console.log(error);
      });
    }
  }
});
const _sfc_main$1T = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "ImageInput",
  __ssrInlineRender: true,
  props: {
    imageName: String
  },
  emits: ["selected"],
  setup(__props, { emit: __emit }) {
    const file = ref();
    const image = ref(null);
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_InputText = __unplugin_components_1$2;
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      _push(ssrRenderComponent(_component_InputText, mergeProps(_ctx.$attrs, {
        class: "cursor-pointer",
        defaultValue: ((_a = image.value) == null ? void 0 : _a.name) || __props.imageName,
        onClick: ($event) => file.value.click(),
        fluid: "",
        readonly: ""
      }), null, _parent));
      _push(`<input type="file" accept="image/*" class="hidden"></div>`);
    };
  }
});
const _sfc_setup$1T = _sfc_main$1T.setup;
_sfc_main$1T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ImageInput.vue");
  return _sfc_setup$1T ? _sfc_setup$1T(props, ctx) : void 0;
};
const __default__$5 = {
  name: "AgoraSessionForm"
};
const _sfc_main$1S = /* @__PURE__ */ Object.assign(__default__$5, {
  __ssrInlineRender: true,
  props: {
    item: Object
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    const emits = __emit;
    const props = __props;
    const page2 = usePage();
    const toast = useToast();
    const usersStore = useUsersStore();
    const managers = ref([]);
    const form = useForm({
      theme: ((_a = props.item) == null ? void 0 : _a.theme) || "",
      lieu: ((_b = props.item) == null ? void 0 : _b.lieu) || "",
      date: ((_c = props.item) == null ? void 0 : _c.date) || "",
      heure_debut: ((_d = props.item) == null ? void 0 : _d.heure_debut) || "",
      heure_fin: ((_e = props.item) == null ? void 0 : _e.heure_fin) || "",
      places: ((_f = props.item) == null ? void 0 : _f.places) || 150,
      presentateur: ((_g = props.item) == null ? void 0 : _g.presentateur) || null,
      description: ((_h = props.item) == null ? void 0 : _h.description) || "",
      image: ((_i = props.item) == null ? void 0 : _i.image) || null
    });
    const search = (event) => {
      managers.value = usersStore.managers.filter((user) => {
        return user.fullname.toLowerCase().includes(event.query.toLowerCase()) || user.email.toLowerCase().includes(event.query.toLowerCase());
      });
    };
    const submit = () => {
      form.clearErrors();
      const url = props.item ? route(page2.props.routePrefix + "agora-session.update", props.item.id) : route(page2.props.routePrefix + "agora-session.store");
      form.transform((data) => ({
        ...data,
        _method: props.item ? "PUT" : "POST",
        // date: dayjs(data.date).format("YYYY-MM-DD HH:mm:ss"),
        heure_debut: dayjs(data.heure_debut).format("HH:mm"),
        heure_fin: dayjs(data.heure_fin).format("HH:mm")
      })).post(url, {
        preserveScroll: true,
        onSuccess: (page3) => {
          toast.add({
            severity: "success",
            summary: page3.props.flash.success,
            life: 5e3
          });
          form.reset();
          emits(props.item ? "updated" : "created", form);
        }
      });
    };
    onMounted(() => {
      usersStore.fetchManagers();
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_IconField = __unplugin_components_1$4;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputIcon = __unplugin_components_3$1;
      const _component_InputError = resolveComponent("InputError");
      const _component_DatePicker = __unplugin_components_2$1;
      const _component_InputNumber = __unplugin_components_5;
      const _component_AutoComplete = __unplugin_components_1$1;
      const _component_Textarea = __unplugin_components_2$3;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[--><div class="flex flex-col gap-6 my-2"><div class="grid md:grid-cols-2 gap-5 lg:gap-7.5 items-stretch"><div class="md:col-span-1"><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_InputText, {
                    modelValue: unref(form).theme,
                    "onUpdate:modelValue": ($event) => unref(form).theme = $event,
                    id: "theme",
                    fluid: ""
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-bullseye" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_InputText, {
                      modelValue: unref(form).theme,
                      "onUpdate:modelValue": ($event) => unref(form).theme = $event,
                      id: "theme",
                      fluid: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_component_InputIcon, { class: "pi pi-bullseye" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="theme"${_scopeId}>Thème de la session </label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => [
                  createVNode(_component_InputText, {
                    modelValue: unref(form).theme,
                    "onUpdate:modelValue": ($event) => unref(form).theme = $event,
                    id: "theme",
                    fluid: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_component_InputIcon, { class: "pi pi-bullseye" })
                ]),
                _: 1
              }),
              createVNode("label", { for: "theme" }, "Thème de la session ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.theme
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_InputText, {
                    modelValue: unref(form).lieu,
                    "onUpdate:modelValue": ($event) => unref(form).lieu = $event,
                    id: "lieu",
                    fluid: ""
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-map-marker" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_InputText, {
                      modelValue: unref(form).lieu,
                      "onUpdate:modelValue": ($event) => unref(form).lieu = $event,
                      id: "lieu",
                      fluid: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_component_InputIcon, { class: "pi pi-map-marker" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="lieu"${_scopeId}>Lieu </label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => [
                  createVNode(_component_InputText, {
                    modelValue: unref(form).lieu,
                    "onUpdate:modelValue": ($event) => unref(form).lieu = $event,
                    id: "lieu",
                    fluid: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  createVNode(_component_InputIcon, { class: "pi pi-map-marker" })
                ]),
                _: 1
              }),
              createVNode("label", { for: "lieu" }, "Lieu ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.lieu
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "date",
              modelValue: unref(form).date,
              "onUpdate:modelValue": ($event) => unref(form).date = $event,
              dateOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="date"${_scopeId}>Date </label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "date",
                modelValue: unref(form).date,
                "onUpdate:modelValue": ($event) => unref(form).date = $event,
                dateOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "date" }, "Date ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.date
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "debut",
              modelValue: unref(form).heure_debut,
              "onUpdate:modelValue": ($event) => unref(form).heure_debut = $event,
              timeOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, {
              inputicon: withCtx((slotProps, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<i class="pi pi-clock"${_scopeId2}></i>`);
                } else {
                  return [
                    createVNode("i", {
                      class: "pi pi-clock",
                      onClick: slotProps.clickCallback
                    }, null, 8, ["onClick"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="debut"${_scopeId}>Heure de début </label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "debut",
                modelValue: unref(form).heure_debut,
                "onUpdate:modelValue": ($event) => unref(form).heure_debut = $event,
                timeOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, {
                inputicon: withCtx((slotProps) => [
                  createVNode("i", {
                    class: "pi pi-clock",
                    onClick: slotProps.clickCallback
                  }, null, 8, ["onClick"])
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "debut" }, "Heure de début ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.heure_debut
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "fin",
              modelValue: unref(form).heure_fin,
              "onUpdate:modelValue": ($event) => unref(form).heure_fin = $event,
              format: "H:i:s",
              timeOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, {
              inputicon: withCtx((slotProps, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<i class="pi pi-clock"${_scopeId2}></i>`);
                } else {
                  return [
                    createVNode("i", {
                      class: "pi pi-clock",
                      onClick: slotProps.clickCallback
                    }, null, 8, ["onClick"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="fin"${_scopeId}>Heure de fin (facultatif) </label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "fin",
                modelValue: unref(form).heure_fin,
                "onUpdate:modelValue": ($event) => unref(form).heure_fin = $event,
                format: "H:i:s",
                timeOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, {
                inputicon: withCtx((slotProps) => [
                  createVNode("i", {
                    class: "pi pi-clock",
                    onClick: slotProps.clickCallback
                  }, null, 8, ["onClick"])
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "fin" }, "Heure de fin (facultatif) ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.heure_fin
      }, null, _parent));
      _push(`</div></div><div class="md:col-span-1"><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputNumber, {
              modelValue: unref(form).places,
              "onUpdate:modelValue": ($event) => unref(form).places = $event,
              id: "places",
              min: 1,
              step: 10,
              "show-buttons": true,
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="places" class="capitalize"${_scopeId}>Nombre de places</label>`);
          } else {
            return [
              createVNode(_component_InputNumber, {
                modelValue: unref(form).places,
                "onUpdate:modelValue": ($event) => unref(form).places = $event,
                id: "places",
                min: 1,
                step: 10,
                "show-buttons": true,
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                for: "places",
                class: "capitalize"
              }, "Nombre de places")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.places
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_AutoComplete, {
                    modelValue: unref(form).presentateur,
                    "onUpdate:modelValue": ($event) => unref(form).presentateur = $event,
                    fluid: "",
                    id: "presentateur",
                    suggestions: managers.value,
                    onComplete: search
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-user" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_AutoComplete, {
                      modelValue: unref(form).presentateur,
                      "onUpdate:modelValue": ($event) => unref(form).presentateur = $event,
                      fluid: "",
                      id: "presentateur",
                      suggestions: managers.value,
                      onComplete: search
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "suggestions"]),
                    createVNode(_component_InputIcon, { class: "pi pi-user" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="presentateur"${_scopeId}>Présentateur</label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => [
                  createVNode(_component_AutoComplete, {
                    modelValue: unref(form).presentateur,
                    "onUpdate:modelValue": ($event) => unref(form).presentateur = $event,
                    fluid: "",
                    id: "presentateur",
                    suggestions: managers.value,
                    onComplete: search
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "suggestions"]),
                  createVNode(_component_InputIcon, { class: "pi pi-user" })
                ]),
                _: 1
              }),
              createVNode("label", { for: "presentateur" }, "Présentateur")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.presentateur
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                var _a2, _b2;
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1T, {
                    id: "image",
                    "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                    onSelected: ($event) => unref(form).image = $event
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-image" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_b2 = unref(form).image) == null ? void 0 : _b2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="image"${_scopeId}>Image d&#39;affiche (facultatif)</label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => {
                  var _a2;
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }),
                _: 1
              }),
              createVNode("label", { for: "image" }, "Image d'affiche (facultatif)")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.image
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              modelValue: unref(form).description,
              "onUpdate:modelValue": ($event) => unref(form).description = $event,
              id: "description",
              rows: "3",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="description"${_scopeId}>Description de la session (facultatif)</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                modelValue: unref(form).description,
                "onUpdate:modelValue": ($event) => unref(form).description = $event,
                id: "description",
                rows: "3",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "description" }, "Description de la session (facultatif)")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.description
      }, null, _parent));
      _push(`</div></div></div></div><div class="flex justify-between gap-2 mt-4">`);
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: "Annuler",
        severity: "secondary",
        onClick: ($event) => emits("canceled")
      }, null, _parent));
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: __props.item ? "Mettre à jour" : "Enregistrer",
        onClick: submit,
        loading: unref(form).processing
      }, null, _parent));
      _push(`</div><!--]-->`);
    };
  }
});
const _sfc_setup$1S = _sfc_main$1S.setup;
_sfc_main$1S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/AgoraSessions/AgoraForm.vue");
  return _sfc_setup$1S ? _sfc_setup$1S(props, ctx) : void 0;
};
const __vite_glob_0_36 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1S
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1R = {
  __name: "ChangeStatus",
  __ssrInlineRender: true,
  props: {
    field: {
      type: String,
      default: "published"
    },
    item: {
      type: Object,
      required: true
    },
    routeName: {
      type: String,
      required: true
    }
  },
  emits: ["statusChanged"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    useToast();
    useForm({
      [props.field]: props.item[props.field]
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (Object.keys(__props.item).includes(__props.field)) {
        _push(`<label${ssrRenderAttrs(mergeProps({ class: "switch switch-sm" }, _attrs))}><input${ssrIncludeBooleanAttr(__props.item[__props.field]) ? " checked" : ""}${ssrIncludeBooleanAttr(__props.item.loading) ? " disabled" : ""} class="status" name="check" type="checkbox"><span class="switch-label order-1"></span></label>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$1R = _sfc_main$1R.setup;
_sfc_main$1R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/ChangeStatus.vue");
  return _sfc_setup$1R ? _sfc_setup$1R(props, ctx) : void 0;
};
const __default__$4 = {
  name: "AgoraSessionList"
};
const _sfc_main$1Q = /* @__PURE__ */ defineComponent({
  ...__default__$4,
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null }
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const mainStore = useMainStore();
    const loading = ref(false);
    const item = ref(null);
    const edit = ref(false);
    const onClose = () => {
      if (!props.data) {
        loadData();
      }
      edit.value = null;
    };
    onMounted(() => {
      if (!props.data) loadData();
    });
    async function loadData() {
      loading.value = true;
      await mainStore.fetchAgora().then(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_Dialog = __unplugin_components_0$2;
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      const _directive_tooltip = __unplugin_directives_0;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: edit.value,
        "onUpdate:visible": ($event) => edit.value = $event,
        modal: "",
        onHide: ($event) => item.value = null,
        header: (_a = item.value) == null ? void 0 : _a.theme,
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1S, {
              item: item.value,
              onUpdated: onClose,
              onCanceled: onClose
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1S, {
                item: item.value,
                onUpdated: onClose,
                onCanceled: onClose
              }, null, 8, ["item"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_CustomDataTable, {
        paginated: __props.data || unref(mainStore).agoraSessions,
        loading: loading.value,
        title: "Liste des sessions d'Agora",
        filterName: "agora_sessions",
        "show-creation-date": true,
        "show-update-date": true,
        onSearched: ($event) => loadData()
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<button class="btn btn-sm btn-icon btn-clear btn-light"${_scopeId2}><i class="ki-filled ki-notepad-edit"${_scopeId2}></i></button>`);
                } else {
                  return [
                    createVNode("button", {
                      class: "btn btn-sm btn-icon btn-clear btn-light",
                      onClick: ($event) => {
                        item.value = data;
                        edit.value = true;
                      }
                    }, [
                      createVNode("i", { class: "ki-filled ki-notepad-edit" })
                    ], 8, ["onClick"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "published",
              sortable: "",
              header: "Publié",
              style: { "width": "10%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1R, {
                    item: data,
                    routeName: unref(page2).props.routePrefix + "agora-session.update",
                    field
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1R, {
                      item: data,
                      routeName: unref(page2).props.routePrefix + "agora-session.update",
                      field
                    }, null, 8, ["item", "routeName", "field"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              header: "Session",
              "sort-field": "theme",
              sortable: "",
              style: { "width": "20%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="grid grid-cols-3 gap-1"${_scopeId2}><a class="col-span-3 font-medium text-sm text-gray-900 hover:text-primary" href="#"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_CopyBtn, {
                    text: data.theme
                  }, null, _parent3, _scopeId2));
                  _push3(` ${ssrInterpolate(data.theme)}</a><span${ssrRenderAttrs(mergeProps({ class: "col-span-3 text-xs text-gray-700 font-normal truncate w-56" }, ssrGetDirectiveProps(_ctx, _directive_tooltip, data.description, void 0, { bottom: true })))}${_scopeId2}>${ssrInterpolate(data.description)}</span><div class="col-span-2"${_scopeId2}><a${ssrRenderAttr("href", data.image_url)} target="_blank" class="btn btn-light btn-sm"${_scopeId2}>Voir l&#39;image</a></div></div>`);
                } else {
                  return [
                    createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                      createVNode("a", {
                        class: "col-span-3 font-medium text-sm text-gray-900 hover:text-primary",
                        href: "#"
                      }, [
                        createVNode(_component_CopyBtn, {
                          text: data.theme
                        }, null, 8, ["text"]),
                        createTextVNode(" " + toDisplayString(data.theme), 1)
                      ]),
                      withDirectives((openBlock(), createBlock("span", { class: "col-span-3 text-xs text-gray-700 font-normal truncate w-56" }, [
                        createTextVNode(toDisplayString(data.description), 1)
                      ])), [
                        [
                          _directive_tooltip,
                          data.description,
                          void 0,
                          { bottom: true }
                        ]
                      ]),
                      createVNode("div", { class: "col-span-2" }, [
                        createVNode("a", {
                          href: data.image_url,
                          target: "_blank",
                          class: "btn btn-light btn-sm"
                        }, "Voir l'image", 8, ["href"])
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "participants",
              header: "Participants",
              style: { "width": "10%" }
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "formated_date",
              header: "Date Prévue",
              sortable: "",
              style: { "width": "10%" }
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, { style: { "width": "1%" } }, {
                body: withCtx(({ data, field }) => [
                  createVNode("button", {
                    class: "btn btn-sm btn-icon btn-clear btn-light",
                    onClick: ($event) => {
                      item.value = data;
                      edit.value = true;
                    }
                  }, [
                    createVNode("i", { class: "ki-filled ki-notepad-edit" })
                  ], 8, ["onClick"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "published",
                sortable: "",
                header: "Publié",
                style: { "width": "10%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode(_sfc_main$1R, {
                    item: data,
                    routeName: unref(page2).props.routePrefix + "agora-session.update",
                    field
                  }, null, 8, ["item", "routeName", "field"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                header: "Session",
                "sort-field": "theme",
                sortable: "",
                style: { "width": "20%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                    createVNode("a", {
                      class: "col-span-3 font-medium text-sm text-gray-900 hover:text-primary",
                      href: "#"
                    }, [
                      createVNode(_component_CopyBtn, {
                        text: data.theme
                      }, null, 8, ["text"]),
                      createTextVNode(" " + toDisplayString(data.theme), 1)
                    ]),
                    withDirectives((openBlock(), createBlock("span", { class: "col-span-3 text-xs text-gray-700 font-normal truncate w-56" }, [
                      createTextVNode(toDisplayString(data.description), 1)
                    ])), [
                      [
                        _directive_tooltip,
                        data.description,
                        void 0,
                        { bottom: true }
                      ]
                    ]),
                    createVNode("div", { class: "col-span-2" }, [
                      createVNode("a", {
                        href: data.image_url,
                        target: "_blank",
                        class: "btn btn-light btn-sm"
                      }, "Voir l'image", 8, ["href"])
                    ])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "participants",
                header: "Participants",
                style: { "width": "10%" }
              }),
              createVNode(_component_Column, {
                field: "formated_date",
                header: "Date Prévue",
                sortable: "",
                style: { "width": "10%" }
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$1Q = _sfc_main$1Q.setup;
_sfc_main$1Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/AgoraSessions/AgoraList.vue");
  return _sfc_setup$1Q ? _sfc_setup$1Q(props, ctx) : void 0;
};
const __vite_glob_0_37 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1Q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1P = /* @__PURE__ */ defineComponent({
  __name: "AgoraSessions",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Divider = __unplugin_components_0$4;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "" }, _attrs))}>`);
      _push(ssrRenderComponent(_sfc_main$1U, {
        title: "Session d'Agora",
        description: "Créer et gérer les différentes sessions d'Agora.",
        "btn-text": "Créer une Session",
        image: "/gestion/images/presentation.png",
        "create-component": _sfc_main$1S
      }, null, _parent));
      _push(ssrRenderComponent(_component_Divider, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1Q, {
        data: _ctx.$page.props.agora_sessions
      }, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$1P = _sfc_main$1P.setup;
_sfc_main$1P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/AgoraSessions.vue");
  return _sfc_setup$1P ? _sfc_setup$1P(props, ctx) : void 0;
};
const __vite_glob_0_35 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1P
}, Symbol.toStringTag, { value: "Module" }));
const __default__$3 = {
  name: "PollForm"
};
const _sfc_main$1O = /* @__PURE__ */ Object.assign(__default__$3, {
  __ssrInlineRender: true,
  props: {
    item: Object
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b, _c, _d, _e, _f, _g;
    const emits = __emit;
    const props = __props;
    const page2 = usePage();
    const toast = useToast();
    const usersStore = useUsersStore();
    const form = useForm({
      title: ((_a = props.item) == null ? void 0 : _a.title) || null,
      description: ((_b = props.item) == null ? void 0 : _b.description) || null,
      start_at: ((_c = props.item) == null ? void 0 : _c.start_at) || null,
      end_at: ((_d = props.item) == null ? void 0 : _d.end_at) || null,
      is_public: Boolean((_e = props.item) == null ? void 0 : _e.is_public) || true,
      show_options: Boolean((_f = props.item) == null ? void 0 : _f.show_options),
      options: ((_g = props.item) == null ? void 0 : _g.options) || null
    });
    const addOption = () => {
      const newOption = {
        option_text: null
      };
      if (Array.isArray(form.options)) {
        form.options.push(newOption);
      } else if (form.options && typeof form.options === "object") {
        const uniqueKey = `option_${Object.keys(form.options).length + 1}`;
        form.options = { ...form.options, [uniqueKey]: newOption };
      } else {
        form.options = [newOption];
      }
    };
    const submit = () => {
      form.clearErrors();
      const url = props.item ? route(page2.props.routePrefix + "poll.update", props.item.id) : route(page2.props.routePrefix + "poll.store");
      form.transform((data) => ({
        ...data,
        _method: props.item ? "PUT" : "POST",
        options: form.options ? Object.values(form.options).filter(
          (option) => {
            var _a2;
            return (_a2 = option.option_text) == null ? void 0 : _a2.trim();
          }
        ) : []
        // date: dayjs(data.date).format("YYYY-MM-DD HH:mm:ss"),
      })).post(url, {
        preserveScroll: true,
        onSuccess: (page3) => {
          toast.add({
            severity: "success",
            summary: page3.props.flash.success,
            life: 5e3
          });
          form.reset();
          emits(props.item ? "updated" : "created", form);
        }
      });
    };
    onMounted(() => {
      usersStore.fetchManagers();
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      const _component_Select = __unplugin_components_1;
      const _component_DatePicker = __unplugin_components_2$1;
      const _component_Textarea = __unplugin_components_2$3;
      const _component_Message = __unplugin_components_0;
      const _component_Button = __unplugin_components_0$1;
      const _component_IconField = __unplugin_components_1$4;
      const _component_InputIcon = __unplugin_components_3$1;
      _push(`<!--[--><div class="flex flex-col gap-6 my-2"><div class="grid md:grid-cols-2 gap-5 lg:gap-7.5 items-stretch"><div class="md:col-span-1"><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).title,
              "onUpdate:modelValue": ($event) => unref(form).title = $event,
              id: "title",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="title"${_scopeId}>Titre du sondage</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).title,
                "onUpdate:modelValue": ($event) => unref(form).title = $event,
                id: "title",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "title" }, "Titre du sondage")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.title
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Select, {
              modelValue: unref(form).is_public,
              "onUpdate:modelValue": ($event) => unref(form).is_public = $event,
              id: "is_public",
              options: [
                { label: "Ouvert à tous", value: true },
                {
                  label: "Uniquement aux membres",
                  value: false
                }
              ],
              "option-label": "label",
              "option-value": "value",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="is_public"${_scopeId}>Public </label>`);
          } else {
            return [
              createVNode(_component_Select, {
                modelValue: unref(form).is_public,
                "onUpdate:modelValue": ($event) => unref(form).is_public = $event,
                id: "is_public",
                options: [
                  { label: "Ouvert à tous", value: true },
                  {
                    label: "Uniquement aux membres",
                    value: false
                  }
                ],
                "option-label": "label",
                "option-value": "value",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "is_public" }, "Public ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.is_public
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "debut",
              modelValue: unref(form).start_at,
              "onUpdate:modelValue": ($event) => unref(form).start_at = $event,
              "date-format": "dd/mm/yy",
              dateOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="debut"${_scopeId}>Date de début </label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "debut",
                modelValue: unref(form).start_at,
                "onUpdate:modelValue": ($event) => unref(form).start_at = $event,
                "date-format": "dd/mm/yy",
                dateOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "debut" }, "Date de début ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.start_at
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "fin",
              modelValue: unref(form).end_at,
              "onUpdate:modelValue": ($event) => unref(form).end_at = $event,
              "date-format": "dd/mm/yy",
              dateOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="fin"${_scopeId}>Date de fin (facultatif) </label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "fin",
                modelValue: unref(form).end_at,
                "onUpdate:modelValue": ($event) => unref(form).end_at = $event,
                "date-format": "dd/mm/yy",
                dateOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "fin" }, "Date de fin (facultatif) ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.end_at
      }, null, _parent));
      _push(`</div><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              modelValue: unref(form).description,
              "onUpdate:modelValue": ($event) => unref(form).description = $event,
              id: "description",
              rows: "3",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="description"${_scopeId}>Description du sondage </label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                modelValue: unref(form).description,
                "onUpdate:modelValue": ($event) => unref(form).description = $event,
                id: "description",
                rows: "3",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "description" }, "Description du sondage ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.description
      }, null, _parent));
      _push(`</div></div><div class="md:col-span-1"><div class="mb-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Select, {
              modelValue: unref(form).show_options,
              "onUpdate:modelValue": ($event) => unref(form).show_options = $event,
              id: "show_options",
              options: [
                { label: "Prédéfini", value: true },
                { label: "Réponse Libre", value: false }
              ],
              "option-label": "label",
              "option-value": "value",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="show_options"${_scopeId}>Option de réponse </label>`);
          } else {
            return [
              createVNode(_component_Select, {
                modelValue: unref(form).show_options,
                "onUpdate:modelValue": ($event) => unref(form).show_options = $event,
                id: "show_options",
                options: [
                  { label: "Prédéfini", value: true },
                  { label: "Réponse Libre", value: false }
                ],
                "option-label": "label",
                "option-value": "value",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "show_options" }, "Option de réponse ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.show_options
      }, null, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.options
      }, null, _parent));
      _push(`</div>`);
      if (unref(form).show_options === false) {
        _push(ssrRenderComponent(_component_Message, { severity: "secondary" }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Les gens pourront répondre ce qu&#39;ils souhaitent`);
            } else {
              return [
                createTextVNode("Les gens pourront répondre ce qu'ils souhaitent")
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      if (unref(form).show_options === true) {
        _push(`<div><div class="mb-2 flex justify-end">`);
        _push(ssrRenderComponent(_component_Button, {
          label: "Ajouter une option",
          icon: "pi pi-plus",
          class: "btn btn-primary btn-outline btn-sm",
          unstyled: "",
          onClick: addOption
        }, null, _parent));
        _push(`</div>`);
        if (unref(form).options) {
          _push(`<div class="card"><div class="card-header"> Inscrivez au moins 2 options de réponse </div><div class="card-body"><!--[-->`);
          ssrRenderList(unref(form).options, (option, index) => {
            _push(`<div class="mb-4"><div class="flex gap-1">`);
            _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  _push2(ssrRenderComponent(_component_IconField, null, {
                    default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                      if (_push3) {
                        _push3(ssrRenderComponent(_component_InputText, {
                          id: "option_" + index,
                          fluid: "",
                          modelValue: option.option_text,
                          "onUpdate:modelValue": ($event) => option.option_text = $event
                        }, null, _parent3, _scopeId2));
                        _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-bullseye" }, null, _parent3, _scopeId2));
                      } else {
                        return [
                          createVNode(_component_InputText, {
                            id: "option_" + index,
                            fluid: "",
                            modelValue: option.option_text,
                            "onUpdate:modelValue": ($event) => option.option_text = $event
                          }, null, 8, ["id", "modelValue", "onUpdate:modelValue"]),
                          createVNode(_component_InputIcon, { class: "pi pi-bullseye" })
                        ];
                      }
                    }),
                    _: 2
                  }, _parent2, _scopeId));
                  _push2(`<label${ssrRenderAttr("for", "option_" + index)}${_scopeId}>Réponse ${ssrInterpolate(index + 1)}</label>`);
                } else {
                  return [
                    createVNode(_component_IconField, null, {
                      default: withCtx(() => [
                        createVNode(_component_InputText, {
                          id: "option_" + index,
                          fluid: "",
                          modelValue: option.option_text,
                          "onUpdate:modelValue": ($event) => option.option_text = $event
                        }, null, 8, ["id", "modelValue", "onUpdate:modelValue"]),
                        createVNode(_component_InputIcon, { class: "pi pi-bullseye" })
                      ]),
                      _: 2
                    }, 1024),
                    createVNode("label", {
                      for: "option_" + index
                    }, "Réponse " + toDisplayString(index + 1), 9, ["for"])
                  ];
                }
              }),
              _: 2
            }, _parent));
            _push(ssrRenderComponent(_component_Button, {
              onClick: ($event) => unref(form).options.splice(index, 1),
              icon: "pi pi-times",
              outlined: "",
              severity: "danger",
              size: "small"
            }, null, _parent));
            _push(`</div>`);
            _push(ssrRenderComponent(_component_InputError, {
              class: "mt-1",
              message: unref(form).errors[`options.${index}.option_text`]
            }, null, _parent));
            _push(`</div>`);
          });
          _push(`<!--]--></div></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div><div class="flex justify-between gap-2 mt-4">`);
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: "Annuler",
        severity: "secondary",
        onClick: ($event) => emits("canceled")
      }, null, _parent));
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: __props.item ? "Mettre à jour" : "Enregistrer",
        onClick: submit,
        loading: unref(form).processing
      }, null, _parent));
      _push(`</div><!--]-->`);
    };
  }
});
const _sfc_setup$1O = _sfc_main$1O.setup;
_sfc_main$1O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Polls/PollForm.vue");
  return _sfc_setup$1O ? _sfc_setup$1O(props, ctx) : void 0;
};
const __vite_glob_0_55 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1O
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1N = /* @__PURE__ */ defineComponent({
  __name: "ShowPoll",
  __ssrInlineRender: true,
  props: {
    id: Number
  },
  setup(__props) {
    const props = __props;
    const loading = ref(false);
    const chartData = ref();
    const chartOptions = ref();
    const pollData = ref(null);
    onMounted(async () => {
      loading.value = true;
      const url = route("poll.show", { id: props.id });
      await axios.get(url).then((response) => {
        pollData.value = response.data;
        chartData.value = setChartData();
        chartOptions.value = setChartOptions();
      });
      loading.value = false;
    });
    const parsedResults = () => {
      var _a;
      const labels = [];
      const data = [];
      const bgColor = [];
      const hoverBgColor = [];
      (_a = pollData.value.results) == null ? void 0 : _a.forEach((item, index) => {
        labels.push(item.option);
        data.push(item.votes);
        bgColor.push(generateColor(index));
        hoverBgColor.push(generateColor(index, 0.7));
      });
      return [labels, data, bgColor, hoverBgColor];
    };
    const setChartData = () => {
      return {
        labels: parsedResults()[0],
        datasets: [
          {
            data: parsedResults()[1],
            backgroundColor: parsedResults()[2],
            hoverBackgroundColor: parsedResults()[3]
          }
        ]
      };
    };
    const setChartOptions = () => {
      const documentStyle = getComputedStyle(document.documentElement);
      const textColor = documentStyle.getPropertyValue("--p-text-color");
      return {
        plugins: {
          legend: {
            labels: {
              usePointStyle: false,
              color: textColor
            }
          }
        }
      };
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Loader = resolveComponent("Loader");
      const _component_Card = __unplugin_components_0$5;
      const _component_Chart = __unplugin_components_1$5;
      if (loading.value) {
        _push(ssrRenderComponent(_component_Loader, _attrs, null, _parent));
      } else if (pollData.value) {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(pollData.value.total_votes)} votes enregistrés au total `);
            } else {
              return [
                createTextVNode(toDisplayString(pollData.value.total_votes) + " votes enregistrés au total ", 1)
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="flex justify-center"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Chart, {
                type: "pie",
                data: chartData.value,
                options: chartOptions.value,
                class: "w-full md:w-[30rem] flex justify-center"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "flex justify-center" }, [
                  createVNode(_component_Chart, {
                    type: "pie",
                    data: chartData.value,
                    options: chartOptions.value,
                    class: "w-full md:w-[30rem] flex justify-center"
                  }, null, 8, ["data", "options"])
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$1N = _sfc_main$1N.setup;
_sfc_main$1N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Polls/ShowPoll.vue");
  return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
};
const __vite_glob_0_57 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1N
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1M = /* @__PURE__ */ defineComponent({
  __name: "PollList",
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null }
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const mainStore = useMainStore();
    const loading = ref(false);
    const item = ref(null);
    const edit = ref(false);
    const show = ref(false);
    const onClose = () => {
      if (!props.data) {
        loadData();
      }
      edit.value = null;
    };
    onMounted(() => {
      if (!props.data) loadData();
    });
    async function loadData() {
      loading.value = true;
      await mainStore.fetchPolls().then(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      var _a, _b;
      const _component_Dialog = __unplugin_components_0$2;
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      const _component_Tag = __unplugin_components_2$4;
      const _directive_tooltip = __unplugin_directives_0;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: edit.value,
        "onUpdate:visible": ($event) => edit.value = $event,
        modal: "",
        onHide: ($event) => item.value = null,
        header: (_a = item.value) == null ? void 0 : _a.title,
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1O, {
              item: item.value,
              onUpdated: onClose,
              onCanceled: onClose
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1O, {
                item: item.value,
                onUpdated: onClose,
                onCanceled: onClose
              }, null, 8, ["item"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Dialog, {
        visible: show.value,
        "onUpdate:visible": ($event) => show.value = $event,
        onHide: ($event) => item.value = null,
        modal: "",
        "dismissable-mask": "",
        header: (_b = item.value) == null ? void 0 : _b.title,
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1N, {
              id: item.value.id
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1N, {
                id: item.value.id
              }, null, 8, ["id"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_CustomDataTable, {
        paginated: __props.data || unref(mainStore).polls,
        filterName: "polls",
        title: "Liste des sondages",
        loading: loading.value,
        "show-creation-date": true,
        "show-update-date": true,
        onSearched: ($event) => loadData()
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<button class="btn btn-sm btn-icon btn-clear btn-light"${_scopeId2}><i class="ki-filled ki-notepad-edit"${_scopeId2}></i></button>`);
                } else {
                  return [
                    createVNode("button", {
                      class: "btn btn-sm btn-icon btn-clear btn-light",
                      onClick: ($event) => {
                        item.value = data;
                        edit.value = true;
                      }
                    }, [
                      createVNode("i", { class: "ki-filled ki-notepad-edit" })
                    ], 8, ["onClick"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "published",
              sortable: "",
              header: "Publié",
              style: { "width": "10%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1R, {
                    item: data,
                    routeName: unref(page2).props.routePrefix + "poll.update",
                    field
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1R, {
                      item: data,
                      routeName: unref(page2).props.routePrefix + "poll.update",
                      field
                    }, null, 8, ["item", "routeName", "field"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              "sort-field": "title",
              sortable: "",
              header: "Sondage",
              style: { "width": "20%" }
            }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex flex-col gap-2 max-w-56 mb-2"${_scopeId2}><a class="leading-none font-medium text-sm text-gray-900 hover:text-primary" href="#"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_CopyBtn, {
                    text: data.title
                  }, null, _parent3, _scopeId2));
                  _push3(` ${ssrInterpolate(data.title)}</a><span${ssrRenderAttrs(mergeProps({ class: "text-xs text-gray-700 font-normal truncate" }, ssrGetDirectiveProps(_ctx, _directive_tooltip, data.description, void 0, { bottom: true })))}${_scopeId2}>${ssrInterpolate(data.description)}</span></div><div class="flex items-center gap-3"${_scopeId2}><span class="font-bold text-sky-500"${_scopeId2}>${ssrInterpolate(data.total_votes)} votes </span><button class="btn btn-primary btn-outline btn-sm"${_scopeId2}> Voir Résultats </button></div>`);
                } else {
                  return [
                    createVNode("div", { class: "flex flex-col gap-2 max-w-56 mb-2" }, [
                      createVNode("a", {
                        class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                        href: "#"
                      }, [
                        createVNode(_component_CopyBtn, {
                          text: data.title
                        }, null, 8, ["text"]),
                        createTextVNode(" " + toDisplayString(data.title), 1)
                      ]),
                      withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                        createTextVNode(toDisplayString(data.description), 1)
                      ])), [
                        [
                          _directive_tooltip,
                          data.description,
                          void 0,
                          { bottom: true }
                        ]
                      ])
                    ]),
                    createVNode("div", { class: "flex items-center gap-3" }, [
                      createVNode("span", { class: "font-bold text-sky-500" }, toDisplayString(data.total_votes) + " votes ", 1),
                      createVNode("button", {
                        class: "btn btn-primary btn-outline btn-sm",
                        onClick: ($event) => {
                          item.value = data;
                          show.value = true;
                        }
                      }, " Voir Résultats ", 8, ["onClick"])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              "sort-field": "is_expired",
              sortable: "",
              header: "Validité",
              style: { "width": "30%", "min-width": "15rem" }
            }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="grid grid-cols-3 gap-1"${_scopeId2}><div class="col-span-3"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_Tag, {
                    value: data.is_expired ? "Expiré" : "En cours",
                    severity: data.is_expired ? "danger" : "info"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div><span class="col-span-3 text-xs text-gray-700 font-normal"${_scopeId2}><span class="font-bold"${_scopeId2}>Commence le</span> ${ssrInterpolate(data.debut ?? "--")}</span><span class="col-span-3 text-xs text-gray-700 font-normal"${_scopeId2}><span class="font-bold"${_scopeId2}>Fini le</span> ${ssrInterpolate(data.fin ?? "--")}</span></div>`);
                } else {
                  return [
                    createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                      createVNode("div", { class: "col-span-3" }, [
                        createVNode(_component_Tag, {
                          value: data.is_expired ? "Expiré" : "En cours",
                          severity: data.is_expired ? "danger" : "info"
                        }, null, 8, ["value", "severity"])
                      ]),
                      createVNode("span", { class: "col-span-3 text-xs text-gray-700 font-normal" }, [
                        createVNode("span", { class: "font-bold" }, "Commence le"),
                        createTextVNode(" " + toDisplayString(data.debut ?? "--"), 1)
                      ]),
                      createVNode("span", { class: "col-span-3 text-xs text-gray-700 font-normal" }, [
                        createVNode("span", { class: "font-bold" }, "Fini le"),
                        createTextVNode(" " + toDisplayString(data.fin ?? "--"), 1)
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "is_public",
              header: "Public",
              sortable: "",
              style: { "width": "10%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<span class="${ssrRenderClass(`text-${data[field] ? "primary" : "gray-600"}`)}"${_scopeId2}>${ssrInterpolate(data[field] ? "Oui" : "Non")}</span>`);
                } else {
                  return [
                    createVNode("span", {
                      class: `text-${data[field] ? "primary" : "gray-600"}`
                    }, toDisplayString(data[field] ? "Oui" : "Non"), 3)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, { style: { "width": "1%" } }, {
                body: withCtx(({ data, field }) => [
                  createVNode("button", {
                    class: "btn btn-sm btn-icon btn-clear btn-light",
                    onClick: ($event) => {
                      item.value = data;
                      edit.value = true;
                    }
                  }, [
                    createVNode("i", { class: "ki-filled ki-notepad-edit" })
                  ], 8, ["onClick"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "published",
                sortable: "",
                header: "Publié",
                style: { "width": "10%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode(_sfc_main$1R, {
                    item: data,
                    routeName: unref(page2).props.routePrefix + "poll.update",
                    field
                  }, null, 8, ["item", "routeName", "field"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                "sort-field": "title",
                sortable: "",
                header: "Sondage",
                style: { "width": "20%" }
              }, {
                body: withCtx(({ data }) => [
                  createVNode("div", { class: "flex flex-col gap-2 max-w-56 mb-2" }, [
                    createVNode("a", {
                      class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                      href: "#"
                    }, [
                      createVNode(_component_CopyBtn, {
                        text: data.title
                      }, null, 8, ["text"]),
                      createTextVNode(" " + toDisplayString(data.title), 1)
                    ]),
                    withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                      createTextVNode(toDisplayString(data.description), 1)
                    ])), [
                      [
                        _directive_tooltip,
                        data.description,
                        void 0,
                        { bottom: true }
                      ]
                    ])
                  ]),
                  createVNode("div", { class: "flex items-center gap-3" }, [
                    createVNode("span", { class: "font-bold text-sky-500" }, toDisplayString(data.total_votes) + " votes ", 1),
                    createVNode("button", {
                      class: "btn btn-primary btn-outline btn-sm",
                      onClick: ($event) => {
                        item.value = data;
                        show.value = true;
                      }
                    }, " Voir Résultats ", 8, ["onClick"])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                "sort-field": "is_expired",
                sortable: "",
                header: "Validité",
                style: { "width": "30%", "min-width": "15rem" }
              }, {
                body: withCtx(({ data }) => [
                  createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                    createVNode("div", { class: "col-span-3" }, [
                      createVNode(_component_Tag, {
                        value: data.is_expired ? "Expiré" : "En cours",
                        severity: data.is_expired ? "danger" : "info"
                      }, null, 8, ["value", "severity"])
                    ]),
                    createVNode("span", { class: "col-span-3 text-xs text-gray-700 font-normal" }, [
                      createVNode("span", { class: "font-bold" }, "Commence le"),
                      createTextVNode(" " + toDisplayString(data.debut ?? "--"), 1)
                    ]),
                    createVNode("span", { class: "col-span-3 text-xs text-gray-700 font-normal" }, [
                      createVNode("span", { class: "font-bold" }, "Fini le"),
                      createTextVNode(" " + toDisplayString(data.fin ?? "--"), 1)
                    ])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "is_public",
                header: "Public",
                sortable: "",
                style: { "width": "10%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode("span", {
                    class: `text-${data[field] ? "primary" : "gray-600"}`
                  }, toDisplayString(data[field] ? "Oui" : "Non"), 3)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$1M = _sfc_main$1M.setup;
_sfc_main$1M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Polls/PollList.vue");
  return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
};
const __vite_glob_0_56 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1M
}, Symbol.toStringTag, { value: "Module" }));
const __default__$2 = {
  name: "PollStats"
};
const _sfc_main$1L = /* @__PURE__ */ Object.assign(__default__$2, {
  __ssrInlineRender: true,
  setup(__props) {
    const page2 = usePage();
    const toast = useToast$1();
    const data = ref([]);
    const loading = ref(false);
    onMounted(() => {
      getData();
    });
    async function getData() {
      const url = route(page2.props.routePrefix + "polls.stats");
      loading.value = true;
      await axios.get(url).then((response) => {
        data.value = response.results;
      }).catch((error) => {
        console.log("Error while fetching polls stats", error);
        toast.add({
          severity: "error",
          summary: "Erreur",
          detail: "Une erreur s'est produite lors du chargement des statistiques de sondages.",
          life: 1e3 * 30
        });
      }).finally(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Loader = resolveComponent("Loader");
      const _component_Card = __unplugin_components_0$5;
      if (loading.value) {
        _push(ssrRenderComponent(_component_Loader, _attrs, null, _parent));
      } else {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="flex justify-center"${_scopeId}></div>`);
            } else {
              return [
                createVNode("div", { class: "flex justify-center" })
              ];
            }
          }),
          _: 1
        }, _parent));
      }
    };
  }
});
const _sfc_setup$1L = _sfc_main$1L.setup;
_sfc_main$1L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Polls/Stats.vue");
  return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
};
const __vite_glob_0_58 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1L
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1K = /* @__PURE__ */ defineComponent({
  __name: "Polls",
  __ssrInlineRender: true,
  setup(__props) {
    const showStats = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      const _component_Button = __unplugin_components_0$1;
      const _component_Divider = __unplugin_components_0$4;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: showStats.value,
        "onUpdate:visible": ($event) => showStats.value = $event,
        modal: "",
        header: "Statistiques des sondages",
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1L, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1L)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_sfc_main$1U, {
        title: "Sondages",
        description: "Créer et gérer les differents sondages.",
        "btn-text": "Créer un Sondage",
        image: "/gestion/images/vote.png",
        "create-component": _sfc_main$1O
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex justify-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Button, {
              label: "Statistiques",
              onClick: ($event) => showStats.value = true,
              severity: "secondary",
              size: "small",
              raised: ""
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "flex justify-center" }, [
                createVNode(_component_Button, {
                  label: "Statistiques",
                  onClick: ($event) => showStats.value = true,
                  severity: "secondary",
                  size: "small",
                  raised: ""
                }, null, 8, ["onClick"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Divider, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1M, {
        data: _ctx.$page.props.polls
      }, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$1K = _sfc_main$1K.setup;
_sfc_main$1K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Polls.vue");
  return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
};
const __vite_glob_0_54 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1K
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1J = /* @__PURE__ */ defineComponent({
  __name: "EditRoles",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const toast = useToast$1();
    const list = ref([[], []]);
    const form = useForm({
      roles: null
    });
    const submit = () => {
      form.transform((data) => ({
        roles: list.value[1].map((item) => item.name)
      })).patch(route("user.roles.update", props.user.id), {
        preserveScroll: true,
        onSuccess: (page22) => {
          toast.add({
            severity: "success",
            summary: page22.props.flash.success,
            life: 5e3
          });
        }
      });
    };
    onMounted(async () => {
      const url = route(page2.props.routePrefix + "role.index");
      await axios.get(url).then((response) => {
        const data = response.data;
        list.value[0] = data.filter(
          (item) => !props.user.roles.find((r2) => r2.id === item.id)
        );
      });
      list.value[1] = props.user.roles || [];
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PickList = __unplugin_components_0$6;
      const _component_Tag = __unplugin_components_2$4;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_PickList, {
        modelValue: list.value,
        "onUpdate:modelValue": ($event) => list.value = $event,
        dataKey: "id",
        breakpoint: "1400px",
        "show-source-controls": false,
        "show-target-controls": false
      }, {
        sourceheader: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-gray-100 p-2 font-bold"${_scopeId}>Roles Non Attribués</div>`);
          } else {
            return [
              createVNode("div", { class: "bg-gray-100 p-2 font-bold" }, "Roles Non Attribués")
            ];
          }
        }),
        targetheader: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-gray-100 p-2 font-bold"${_scopeId}>Roles Attribués</div>`);
          } else {
            return [
              createVNode("div", { class: "bg-gray-100 p-2 font-bold" }, "Roles Attribués")
            ];
          }
        }),
        option: withCtx(({ option }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Tag, {
              value: option.name,
              severity: "secondary"
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Tag, {
                value: option.name,
                severity: "secondary"
              }, null, 8, ["value"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="flex justify-end mt-5">`);
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: "Enregistrer",
        icon: "pi pi-check",
        loading: unref(form).processing,
        onClick: submit
      }, null, _parent));
      _push(`</div><!--]-->`);
    };
  }
});
const _sfc_setup$1J = _sfc_main$1J.setup;
_sfc_main$1J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/EditRoles.vue");
  return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
};
const __vite_glob_0_62 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1J
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1I = /* @__PURE__ */ defineComponent({
  __name: "EditPermissions",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const toast = useToast$1();
    const list = ref([[], []]);
    const form = useForm({
      permissions: null
    });
    const submit = () => {
      form.transform((data) => ({
        permissions: list.value[1].map((item) => item.name)
      })).patch(route("user.permissions.update", props.user.id), {
        preserveScroll: true,
        onSuccess: (page22) => {
          toast.add({
            severity: "success",
            summary: page22.props.flash.success,
            life: 5e3
          });
        }
      });
    };
    onMounted(async () => {
      const url = route(page2.props.routePrefix + "permission.index");
      await axios.get(url).then((response) => {
        const data = response.data;
        list.value[0] = data.filter(
          (item) => {
            var _a;
            return !((_a = props.user.permissions) == null ? void 0 : _a.find((p2) => p2.id === item.id));
          }
        );
      });
      list.value[1] = props.user.permissions || [];
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PickList = __unplugin_components_0$6;
      const _component_Tag = __unplugin_components_2$4;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_PickList, {
        modelValue: list.value,
        "onUpdate:modelValue": ($event) => list.value = $event,
        dataKey: "id",
        breakpoint: "1400px",
        "show-source-controls": false,
        "show-target-controls": false
      }, {
        sourceheader: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-gray-100 p-2 font-bold"${_scopeId}> Permissions Non Attribués </div>`);
          } else {
            return [
              createVNode("div", { class: "bg-gray-100 p-2 font-bold" }, " Permissions Non Attribués ")
            ];
          }
        }),
        targetheader: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-gray-100 p-2 font-bold"${_scopeId}>Permissions Attribués</div>`);
          } else {
            return [
              createVNode("div", { class: "bg-gray-100 p-2 font-bold" }, "Permissions Attribués")
            ];
          }
        }),
        option: withCtx(({ option }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Tag, {
              value: option.name,
              severity: "secondary"
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Tag, {
                value: option.name,
                severity: "secondary"
              }, null, 8, ["value"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="flex justify-end mt-5">`);
      _push(ssrRenderComponent(_component_Button, {
        type: "button",
        label: "Enregistrer",
        icon: "pi pi-check",
        loading: unref(form).processing,
        onClick: submit
      }, null, _parent));
      _push(`</div><!--]-->`);
    };
  }
});
const _sfc_setup$1I = _sfc_main$1I.setup;
_sfc_main$1I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/EditPermissions.vue");
  return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
};
const __vite_glob_0_61 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1I
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1H = {
  __name: "EditUser",
  __ssrInlineRender: true,
  props: {
    id: {
      type: Number,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const toast = useToast$1();
    const user = ref(null);
    const loading = ref(false);
    onMounted(() => {
      getUser(props.id);
    });
    async function getUser(id) {
      loading.value = true;
      const url = route("user.show", id);
      await axios.get(url).then((response) => {
        user.value = response.data;
      }).catch((error) => {
        console.log("Error while fetching user", error);
        toast.add({
          severity: "error",
          summary: "Erreur",
          detail: "Une erreur s'est produite lors du chargement de l'utilisateur.",
          life: 1e3 * 30
        });
      }).finally(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Loader = resolveComponent("Loader");
      const _component_Card = __unplugin_components_0$5;
      const _component_Stepper = __unplugin_components_1$3;
      const _component_StepItem = __unplugin_components_2$2;
      const _component_Step = __unplugin_components_3;
      const _component_StepPanel = __unplugin_components_4;
      if (loading.value) {
        _push(ssrRenderComponent(_component_Loader, _attrs, null, _parent));
      } else if (user.value) {
        _push(`<div${ssrRenderAttrs(_attrs)}>`);
        _push(ssrRenderComponent(_component_Card, null, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(user.value.info.full_name || user.value.email)}`);
            } else {
              return [
                createTextVNode(toDisplayString(user.value.info.full_name || user.value.email), 1)
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="grid md:grid-cols-2 gap-2"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2o, { user: user.value }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Stepper, null, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_StepItem, { value: "3" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Roles`);
                              } else {
                                return [
                                  createTextVNode("Roles")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1J, { user: user.value }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1J, { user: user.value }, null, 8, ["user"])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => [
                                createTextVNode("Roles")
                              ]),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1J, { user: user.value }, null, 8, ["user"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_StepItem, { value: "4" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Permissions Directes`);
                              } else {
                                return [
                                  createTextVNode("Permissions Directes")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1I, { user: user.value }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1I, { user: user.value }, null, 8, ["user"])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => [
                                createTextVNode("Permissions Directes")
                              ]),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1I, { user: user.value }, null, 8, ["user"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_StepItem, { value: "3" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => [
                              createTextVNode("Roles")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1J, { user: user.value }, null, 8, ["user"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(_component_StepItem, { value: "4" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => [
                              createTextVNode("Permissions Directes")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1I, { user: user.value }, null, 8, ["user"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "grid md:grid-cols-2 gap-2" }, [
                  createVNode(_sfc_main$2o, { user: user.value }, null, 8, ["user"]),
                  createVNode(_component_Stepper, null, {
                    default: withCtx(() => [
                      createVNode(_component_StepItem, { value: "3" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => [
                              createTextVNode("Roles")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1J, { user: user.value }, null, 8, ["user"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(_component_StepItem, { value: "4" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => [
                              createTextVNode("Permissions Directes")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1I, { user: user.value }, null, 8, ["user"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$1H = _sfc_main$1H.setup;
_sfc_main$1H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/EditUser.vue");
  return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
};
const __vite_glob_0_63 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1H
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1G = {
  __name: "EditButton",
  __ssrInlineRender: true,
  props: {
    editComponent: {
      type: Object,
      default: null
    },
    componentProps: {
      type: Object,
      default: null
    },
    dialogHeader: {
      type: String,
      default: "Modifier un élément"
    },
    dialogWidth: {
      type: String,
      default: "50rem"
    },
    showDialog: {
      type: Boolean,
      default: true
    }
  },
  emits: ["clicked"],
  setup(__props, { emit: __emit }) {
    const edit = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      _push(`<!--[--><button class="btn btn-sm btn-icon btn-clear btn-light"><i class="ki-filled ki-notepad-edit"></i></button>`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: edit.value,
        "onUpdate:visible": ($event) => edit.value = $event,
        modal: "",
        "dismissable-mask": "",
        maximizable: "",
        header: __props.dialogHeader,
        style: { width: __props.dialogWidth },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(__props.editComponent), mergeProps(__props.componentProps, {
              onUpdated: ($event) => edit.value = false
            }), null), _parent2, _scopeId);
          } else {
            return [
              (openBlock(), createBlock(resolveDynamicComponent(__props.editComponent), mergeProps(__props.componentProps, {
                onUpdated: ($event) => edit.value = false
              }), null, 16, ["onUpdated"]))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/EditButton.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
const _sfc_main$1F = /* @__PURE__ */ defineComponent({
  __name: "UsersList",
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null },
    canShow: Boolean
  },
  setup(__props) {
    const statuses = ref([
      { label: "Actif", value: true },
      { label: "Desactivé", value: false }
    ]);
    const filters = ref({
      "base.tel": { value: null, matchMode: FilterMatchMode.CONTAINS },
      status: { value: null, matchMode: FilterMatchMode.EQUALS }
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NotPermitted = resolveComponent("NotPermitted");
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      const _component_Select = __unplugin_components_1;
      const _component_Tag = __unplugin_components_2$4;
      const _component_InputText = __unplugin_components_1$2;
      const _directive_tooltip = __unplugin_directives_0;
      if (!__props.canShow) {
        _push(ssrRenderComponent(_component_NotPermitted, _attrs, null, _parent));
      } else {
        _push(`<div${ssrRenderAttrs(_attrs)}>`);
        _push(ssrRenderComponent(_component_CustomDataTable, {
          title: "Liste des utilisateurs",
          paginated: __props.data,
          showGridlines: "",
          filters: filters.value,
          filterName: "users",
          "show-creation-date": true
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<template${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
                body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1G, {
                      "dialog-header": "Modifier un utilisateur",
                      "dialog-width": "70rem",
                      "edit-component": _sfc_main$1H,
                      "component-props": { id: data.id }
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$1G, {
                        "dialog-header": "Modifier un utilisateur",
                        "dialog-width": "70rem",
                        "edit-component": _sfc_main$1H,
                        "component-props": { id: data.id }
                      }, null, 8, ["component-props"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Column, {
                header: "Utilisateur",
                sortable: "",
                sortField: "email",
                filterField: "status",
                "show-filter-menu": false,
                style: { "width": "34%" }
              }, {
                body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex items-center gap-2.5 mb-1"${_scopeId2}><div class=""${_scopeId2}><img class="h-9 rounded-full"${ssrRenderAttr("src", data.profile_photo_url)}${_scopeId2}></div><div class="flex flex-col gap-0.5 max-w-[80%]"${_scopeId2}><a class="leading-none font-medium text-sm text-gray-900 hover:text-primary" href="#"${_scopeId2}>`);
                    _push3(ssrRenderComponent(_component_CopyBtn, {
                      text: data.full_name
                    }, null, _parent3, _scopeId2));
                    _push3(` ${ssrInterpolate(data.full_name)}</a><span${ssrRenderAttrs(mergeProps({ class: "text-xs text-gray-700 font-normal truncate" }, ssrGetDirectiveProps(_ctx, _directive_tooltip, data.email, void 0, { bottom: true })))}${_scopeId2}>`);
                    _push3(ssrRenderComponent(_component_CopyBtn, {
                      text: data.email
                    }, null, _parent3, _scopeId2));
                    _push3(` ${ssrInterpolate(data.email)}</span></div></div><div class="flex justify-end"${_scopeId2}>`);
                    if (data.status) {
                      _push3(`<span class="badge badge-primary badge-outline rounded-[30px]"${_scopeId2}><span class="size-1.5 rounded-full bg-primary me-1.5"${_scopeId2}></span> Actif </span>`);
                    } else {
                      _push3(`<span class="badge badge-danger badge-outline rounded-[30px]"${_scopeId2}><span class="size-1.5 rounded-full bg-danger me-1.5"${_scopeId2}></span> Compte Desactivé </span>`);
                    }
                    _push3(`</div>`);
                  } else {
                    return [
                      createVNode("div", { class: "flex items-center gap-2.5 mb-1" }, [
                        createVNode("div", { class: "" }, [
                          createVNode("img", {
                            class: "h-9 rounded-full",
                            src: data.profile_photo_url
                          }, null, 8, ["src"])
                        ]),
                        createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                          createVNode("a", {
                            class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                            href: "#"
                          }, [
                            createVNode(_component_CopyBtn, {
                              text: data.full_name
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.full_name), 1)
                          ]),
                          withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                            createVNode(_component_CopyBtn, {
                              text: data.email
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.email), 1)
                          ])), [
                            [
                              _directive_tooltip,
                              data.email,
                              void 0,
                              { bottom: true }
                            ]
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "flex justify-end" }, [
                        data.status ? (openBlock(), createBlock("span", {
                          key: 0,
                          class: "badge badge-primary badge-outline rounded-[30px]"
                        }, [
                          createVNode("span", { class: "size-1.5 rounded-full bg-primary me-1.5" }),
                          createTextVNode(" Actif ")
                        ])) : (openBlock(), createBlock("span", {
                          key: 1,
                          class: "badge badge-danger badge-outline rounded-[30px]"
                        }, [
                          createVNode("span", { class: "size-1.5 rounded-full bg-danger me-1.5" }),
                          createTextVNode(" Compte Desactivé ")
                        ]))
                      ])
                    ];
                  }
                }),
                filter: withCtx(({ filterModel, filterCallback }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_Select, {
                      modelValue: filterModel.value,
                      "onUpdate:modelValue": ($event) => filterModel.value = $event,
                      onChange: ($event) => filterCallback(),
                      options: statuses.value,
                      "option-label": "label",
                      "option-value": "value",
                      placeholder: "Statut du compte",
                      style: { "min-width": "12rem" },
                      showClear: true
                    }, {
                      option: withCtx((slotProps, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Tag, {
                            value: slotProps.option.label,
                            severity: slotProps.option.value ? "info" : "danger"
                          }, null, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Tag, {
                              value: slotProps.option.label,
                              severity: slotProps.option.value ? "info" : "danger"
                            }, null, 8, ["value", "severity"])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_Select, {
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        onChange: ($event) => filterCallback(),
                        options: statuses.value,
                        "option-label": "label",
                        "option-value": "value",
                        placeholder: "Statut du compte",
                        style: { "min-width": "12rem" },
                        showClear: true
                      }, {
                        option: withCtx((slotProps) => [
                          createVNode(_component_Tag, {
                            value: slotProps.option.label,
                            severity: slotProps.option.value ? "info" : "danger"
                          }, null, 8, ["value", "severity"])
                        ]),
                        _: 2
                      }, 1032, ["modelValue", "onUpdate:modelValue", "onChange", "options"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Column, {
                field: "base",
                header: "Informations",
                "filter-field": "base.tel",
                "show-filter-menu": true,
                style: { "width": "30%" }
              }, {
                body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex flex-col gap-0.5"${_scopeId2}><!--[-->`);
                    ssrRenderList(data[field], (info, index) => {
                      _push3(`<span class="text-xs text-gray-700 font-normal"${_scopeId2}><span class="underline"${_scopeId2}>${ssrInterpolate(index)}</span> : ${ssrInterpolate(info)}</span>`);
                    });
                    _push3(`<!--]--></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "flex flex-col gap-0.5" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList(data[field], (info, index) => {
                          return openBlock(), createBlock("span", {
                            key: index,
                            class: "text-xs text-gray-700 font-normal"
                          }, [
                            createVNode("span", { class: "underline" }, toDisplayString(index), 1),
                            createTextVNode(" : " + toDisplayString(info), 1)
                          ]);
                        }), 128))
                      ])
                    ];
                  }
                }),
                filter: withCtx(({ filterModel, filterCallback }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_InputText, {
                      modelValue: filterModel.value,
                      "onUpdate:modelValue": ($event) => filterModel.value = $event,
                      type: "text",
                      size: "small",
                      onInput: ($event) => filterCallback(),
                      placeholder: "Numéro de téléphone"
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_InputText, {
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        type: "text",
                        size: "small",
                        onInput: ($event) => filterCallback(),
                        placeholder: "Numéro de téléphone"
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Column, {
                field: "roles",
                header: "Roles",
                style: { "width": "15%" }
              }, {
                body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex flex-wrap items-center align-middle gap-2.5"${_scopeId2}><!--[-->`);
                    ssrRenderList(data[field], (role, index) => {
                      _push3(`<span class="badge badge-sm badge-light badge-outline"${_scopeId2}>${ssrInterpolate(role)}</span>`);
                    });
                    _push3(`<!--]--></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "flex flex-wrap items-center align-middle gap-2.5" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList(data[field], (role, index) => {
                          return openBlock(), createBlock("span", {
                            key: index,
                            class: "badge badge-sm badge-light badge-outline"
                          }, toDisplayString(role), 1);
                        }), 128))
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Column, {
                field: "last_login_at",
                header: "Dernière connexion",
                style: { "width": "10%" }
              }, {
                body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<span class="text-gray-500 text-sm font-normal"${_scopeId2}>${ssrInterpolate(data[field])}</span>`);
                  } else {
                    return [
                      createVNode("span", { class: "text-gray-500 text-sm font-normal" }, toDisplayString(data[field]), 1)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</template>`);
            } else {
              return [
                createVNode("template", null, [
                  createVNode(_component_Column, { style: { "width": "1%" } }, {
                    body: withCtx(({ data }) => [
                      createVNode(_sfc_main$1G, {
                        "dialog-header": "Modifier un utilisateur",
                        "dialog-width": "70rem",
                        "edit-component": _sfc_main$1H,
                        "component-props": { id: data.id }
                      }, null, 8, ["component-props"])
                    ]),
                    _: 1
                  }),
                  createVNode(_component_Column, {
                    header: "Utilisateur",
                    sortable: "",
                    sortField: "email",
                    filterField: "status",
                    "show-filter-menu": false,
                    style: { "width": "34%" }
                  }, {
                    body: withCtx(({ data }) => [
                      createVNode("div", { class: "flex items-center gap-2.5 mb-1" }, [
                        createVNode("div", { class: "" }, [
                          createVNode("img", {
                            class: "h-9 rounded-full",
                            src: data.profile_photo_url
                          }, null, 8, ["src"])
                        ]),
                        createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                          createVNode("a", {
                            class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                            href: "#"
                          }, [
                            createVNode(_component_CopyBtn, {
                              text: data.full_name
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.full_name), 1)
                          ]),
                          withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                            createVNode(_component_CopyBtn, {
                              text: data.email
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.email), 1)
                          ])), [
                            [
                              _directive_tooltip,
                              data.email,
                              void 0,
                              { bottom: true }
                            ]
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "flex justify-end" }, [
                        data.status ? (openBlock(), createBlock("span", {
                          key: 0,
                          class: "badge badge-primary badge-outline rounded-[30px]"
                        }, [
                          createVNode("span", { class: "size-1.5 rounded-full bg-primary me-1.5" }),
                          createTextVNode(" Actif ")
                        ])) : (openBlock(), createBlock("span", {
                          key: 1,
                          class: "badge badge-danger badge-outline rounded-[30px]"
                        }, [
                          createVNode("span", { class: "size-1.5 rounded-full bg-danger me-1.5" }),
                          createTextVNode(" Compte Desactivé ")
                        ]))
                      ])
                    ]),
                    filter: withCtx(({ filterModel, filterCallback }) => [
                      createVNode(_component_Select, {
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        onChange: ($event) => filterCallback(),
                        options: statuses.value,
                        "option-label": "label",
                        "option-value": "value",
                        placeholder: "Statut du compte",
                        style: { "min-width": "12rem" },
                        showClear: true
                      }, {
                        option: withCtx((slotProps) => [
                          createVNode(_component_Tag, {
                            value: slotProps.option.label,
                            severity: slotProps.option.value ? "info" : "danger"
                          }, null, 8, ["value", "severity"])
                        ]),
                        _: 2
                      }, 1032, ["modelValue", "onUpdate:modelValue", "onChange", "options"])
                    ]),
                    _: 1
                  }),
                  createVNode(_component_Column, {
                    field: "base",
                    header: "Informations",
                    "filter-field": "base.tel",
                    "show-filter-menu": true,
                    style: { "width": "30%" }
                  }, {
                    body: withCtx(({ data, field }) => [
                      createVNode("div", { class: "flex flex-col gap-0.5" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList(data[field], (info, index) => {
                          return openBlock(), createBlock("span", {
                            key: index,
                            class: "text-xs text-gray-700 font-normal"
                          }, [
                            createVNode("span", { class: "underline" }, toDisplayString(index), 1),
                            createTextVNode(" : " + toDisplayString(info), 1)
                          ]);
                        }), 128))
                      ])
                    ]),
                    filter: withCtx(({ filterModel, filterCallback }) => [
                      createVNode(_component_InputText, {
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        type: "text",
                        size: "small",
                        onInput: ($event) => filterCallback(),
                        placeholder: "Numéro de téléphone"
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                    ]),
                    _: 1
                  }),
                  createVNode(_component_Column, {
                    field: "roles",
                    header: "Roles",
                    style: { "width": "15%" }
                  }, {
                    body: withCtx(({ data, field }) => [
                      createVNode("div", { class: "flex flex-wrap items-center align-middle gap-2.5" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList(data[field], (role, index) => {
                          return openBlock(), createBlock("span", {
                            key: index,
                            class: "badge badge-sm badge-light badge-outline"
                          }, toDisplayString(role), 1);
                        }), 128))
                      ])
                    ]),
                    _: 1
                  }),
                  createVNode(_component_Column, {
                    field: "last_login_at",
                    header: "Dernière connexion",
                    style: { "width": "10%" }
                  }, {
                    body: withCtx(({ data, field }) => [
                      createVNode("span", { class: "text-gray-500 text-sm font-normal" }, toDisplayString(data[field]), 1)
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      }
    };
  }
});
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/UsersList.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
const __vite_glob_0_65 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1F
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1E = {
  __name: "InvitationsList",
  __ssrInlineRender: true,
  props: {
    data: Object
  },
  setup(__props) {
    const props = __props;
    const paginated = ref([]);
    const toast = useToast();
    const resendInvitation = (item) => {
      router.post(
        route("user.invite"),
        {
          name: item.name,
          email: item.email
        },
        {
          preserveScroll: true,
          only: ["users_invitations"],
          onStart: () => {
            item.loading = true;
          },
          onSuccess: () => {
            toast.add({
              severity: "success",
              summary: "Invitation renvoyée à " + item.email,
              life: 5e3
            });
          },
          onFinish: () => {
            item.loading = false;
          }
        }
      );
    };
    watch(
      () => props.data,
      (newData) => {
        paginated.value = newData;
      },
      { immediate: true, deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      const _component_Button = __unplugin_components_0$1;
      const _component_Tag = __unplugin_components_2$4;
      _push(ssrRenderComponent(_component_CustomDataTable, mergeProps({
        title: "Liste des invitations",
        paginated: paginated.value,
        filterName: "users_invitations"
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, {
              "sort-field": "email",
              sortable: "",
              header: "Invité",
              style: { "width": "30%" }
            }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex flex-col gap-2"${_scopeId2}><span class="text-xs text-gray-700 font-normal"${_scopeId2}>${ssrInterpolate(data.name)}</span><a class="leading-none font-medium text-sm text-gray-900 hover:text-primary" href="#"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_CopyBtn, {
                    text: data.email
                  }, null, _parent3, _scopeId2));
                  _push3(` ${ssrInterpolate(data.email)}</a></div>`);
                } else {
                  return [
                    createVNode("div", { class: "flex flex-col gap-2" }, [
                      createVNode("span", { class: "text-xs text-gray-700 font-normal" }, toDisplayString(data.name), 1),
                      createVNode("a", {
                        class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                        href: "#"
                      }, [
                        createVNode(_component_CopyBtn, {
                          text: data.email
                        }, null, 8, ["text"]),
                        createTextVNode(" " + toDisplayString(data.email), 1)
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "link",
              header: "Lien",
              style: { "width": "15%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex flex-col gap-2"${_scopeId2}><div class="max-w-56 truncate"${_scopeId2}><a class="text-sm link" href="#"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_CopyBtn, {
                    text: data[field]
                  }, null, _parent3, _scopeId2));
                  _push3(` ${ssrInterpolate(data[field])}</a></div>`);
                  _push3(ssrRenderComponent(_component_Button, {
                    label: "Renvoyer l'invitation",
                    loading: data.loading,
                    size: "small",
                    severity: "info",
                    outlined: "",
                    onClick: ($event) => resendInvitation(data)
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createVNode("div", { class: "flex flex-col gap-2" }, [
                      createVNode("div", { class: "max-w-56 truncate" }, [
                        createVNode("a", {
                          class: "text-sm link",
                          href: "#"
                        }, [
                          createVNode(_component_CopyBtn, {
                            text: data[field]
                          }, null, 8, ["text"]),
                          createTextVNode(" " + toDisplayString(data[field]), 1)
                        ])
                      ]),
                      createVNode(_component_Button, {
                        label: "Renvoyer l'invitation",
                        loading: data.loading,
                        size: "small",
                        severity: "info",
                        outlined: "",
                        onClick: ($event) => resendInvitation(data)
                      }, null, 8, ["loading", "onClick"])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              header: "Statut",
              style: { "width": "35%" }
            }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="grid grid-cols-3 gap-1"${_scopeId2}><span class="col-span-3"${_scopeId2}><b${_scopeId2}>Expire le </b> ${ssrInterpolate(unref(dayjs)(data.expires_at).format(
                    "DD/MM/YYYY à HH:mm:ss"
                  ))}</span><div class="col-span-3"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_Tag, {
                    value: data.is_used ? "Déja utilisé" : "Pas encore utilisé",
                    severity: data.is_used ? "success" : "secondary"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div></div>`);
                } else {
                  return [
                    createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                      createVNode("span", { class: "col-span-3" }, [
                        createVNode("b", null, "Expire le "),
                        createTextVNode(" " + toDisplayString(unref(dayjs)(data.expires_at).format(
                          "DD/MM/YYYY à HH:mm:ss"
                        )), 1)
                      ]),
                      createVNode("div", { class: "col-span-3" }, [
                        createVNode(_component_Tag, {
                          value: data.is_used ? "Déja utilisé" : "Pas encore utilisé",
                          severity: data.is_used ? "success" : "secondary"
                        }, null, 8, ["value", "severity"])
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "created_at",
              header: "Date de création",
              sortable: "",
              style: { "width": "20%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${ssrInterpolate(unref(dayjs)(data[field]).format("DD/MM/YYYY à HH:mm:ss"))}`);
                } else {
                  return [
                    createTextVNode(toDisplayString(unref(dayjs)(data[field]).format("DD/MM/YYYY à HH:mm:ss")), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, {
                "sort-field": "email",
                sortable: "",
                header: "Invité",
                style: { "width": "30%" }
              }, {
                body: withCtx(({ data }) => [
                  createVNode("div", { class: "flex flex-col gap-2" }, [
                    createVNode("span", { class: "text-xs text-gray-700 font-normal" }, toDisplayString(data.name), 1),
                    createVNode("a", {
                      class: "leading-none font-medium text-sm text-gray-900 hover:text-primary",
                      href: "#"
                    }, [
                      createVNode(_component_CopyBtn, {
                        text: data.email
                      }, null, 8, ["text"]),
                      createTextVNode(" " + toDisplayString(data.email), 1)
                    ])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "link",
                header: "Lien",
                style: { "width": "15%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode("div", { class: "flex flex-col gap-2" }, [
                    createVNode("div", { class: "max-w-56 truncate" }, [
                      createVNode("a", {
                        class: "text-sm link",
                        href: "#"
                      }, [
                        createVNode(_component_CopyBtn, {
                          text: data[field]
                        }, null, 8, ["text"]),
                        createTextVNode(" " + toDisplayString(data[field]), 1)
                      ])
                    ]),
                    createVNode(_component_Button, {
                      label: "Renvoyer l'invitation",
                      loading: data.loading,
                      size: "small",
                      severity: "info",
                      outlined: "",
                      onClick: ($event) => resendInvitation(data)
                    }, null, 8, ["loading", "onClick"])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                header: "Statut",
                style: { "width": "35%" }
              }, {
                body: withCtx(({ data }) => [
                  createVNode("div", { class: "grid grid-cols-3 gap-1" }, [
                    createVNode("span", { class: "col-span-3" }, [
                      createVNode("b", null, "Expire le "),
                      createTextVNode(" " + toDisplayString(unref(dayjs)(data.expires_at).format(
                        "DD/MM/YYYY à HH:mm:ss"
                      )), 1)
                    ]),
                    createVNode("div", { class: "col-span-3" }, [
                      createVNode(_component_Tag, {
                        value: data.is_used ? "Déja utilisé" : "Pas encore utilisé",
                        severity: data.is_used ? "success" : "secondary"
                      }, null, 8, ["value", "severity"])
                    ])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "created_at",
                header: "Date de création",
                sortable: "",
                style: { "width": "20%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createTextVNode(toDisplayString(unref(dayjs)(data[field]).format("DD/MM/YYYY à HH:mm:ss")), 1)
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/InvitationsList.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
const __vite_glob_0_64 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1E
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1D = {
  __name: "AddUser",
  __ssrInlineRender: true,
  setup(__props) {
    const toast = useToast$1();
    const form = useForm({
      name: null,
      email: null
    });
    const submit = () => {
      form.post(route("user.invite"), {
        preserveScroll: true,
        onSuccess: (page2) => {
          form.reset();
          toast.add({
            severity: "success",
            summary: page2.props.flash.success,
            life: 5e3
          });
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Card = __unplugin_components_0$5;
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      const _component_Message = __unplugin_components_0;
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-7.5" }, _attrs))}><div class="flex justify-center">`);
      if (_ctx.$page.props.can.createUser) {
        _push(ssrRenderComponent(_component_Card, { class: "min-w-[400px]" }, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Invité un utilisateur`);
            } else {
              return [
                createTextVNode("Invité un utilisateur")
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<form class="flex flex-col gap-5"${_scopeId}><div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_InputText, {
                      modelValue: unref(form).name,
                      "onUpdate:modelValue": ($event) => unref(form).name = $event,
                      id: "name",
                      required: "",
                      fluid: "",
                      size: "large"
                    }, null, _parent3, _scopeId2));
                    _push3(`<label for="name"${_scopeId2}>Nom</label>`);
                  } else {
                    return [
                      createVNode(_component_InputText, {
                        modelValue: unref(form).name,
                        "onUpdate:modelValue": ($event) => unref(form).name = $event,
                        id: "name",
                        required: "",
                        fluid: "",
                        size: "large"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode("label", { for: "name" }, "Nom")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_InputError, {
                class: "mt-1",
                message: unref(form).errors.name
              }, null, _parent2, _scopeId));
              _push2(`</div><div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_InputText, {
                      modelValue: unref(form).email,
                      "onUpdate:modelValue": ($event) => unref(form).email = $event,
                      id: "email",
                      type: "email",
                      required: "",
                      fluid: "",
                      size: "large"
                    }, null, _parent3, _scopeId2));
                    _push3(`<label for="email"${_scopeId2}>Email</label>`);
                  } else {
                    return [
                      createVNode(_component_InputText, {
                        modelValue: unref(form).email,
                        "onUpdate:modelValue": ($event) => unref(form).email = $event,
                        id: "email",
                        type: "email",
                        required: "",
                        fluid: "",
                        size: "large"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode("label", { for: "email" }, "Email")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_InputError, {
                class: "mt-1",
                message: unref(form).errors.email
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
              if (unref(form).wasSuccessful) {
                _push2(ssrRenderComponent(_component_Message, {
                  severity: "info",
                  closable: ""
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(`Lien envoyé. La personne doit accepter l&#39;invitation.`);
                    } else {
                      return [
                        createTextVNode("Lien envoyé. La personne doit accepter l'invitation.")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(ssrRenderComponent(_component_Button, {
                type: "submit",
                label: "Envoyé l'invitation",
                loading: unref(form).processing
              }, null, _parent2, _scopeId));
              _push2(`</form>`);
            } else {
              return [
                createVNode("form", {
                  onSubmit: withModifiers(submit, ["prevent"]),
                  class: "flex flex-col gap-5"
                }, [
                  createVNode("div", null, [
                    createVNode(_component_FloatLabel, { variant: "on" }, {
                      default: withCtx(() => [
                        createVNode(_component_InputText, {
                          modelValue: unref(form).name,
                          "onUpdate:modelValue": ($event) => unref(form).name = $event,
                          id: "name",
                          required: "",
                          fluid: "",
                          size: "large"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        createVNode("label", { for: "name" }, "Nom")
                      ]),
                      _: 1
                    }),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.name
                    }, null, 8, ["message"])
                  ]),
                  createVNode("div", null, [
                    createVNode(_component_FloatLabel, { variant: "on" }, {
                      default: withCtx(() => [
                        createVNode(_component_InputText, {
                          modelValue: unref(form).email,
                          "onUpdate:modelValue": ($event) => unref(form).email = $event,
                          id: "email",
                          type: "email",
                          required: "",
                          fluid: "",
                          size: "large"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        createVNode("label", { for: "email" }, "Email")
                      ]),
                      _: 1
                    }),
                    createVNode(_component_InputError, {
                      class: "mt-1",
                      message: unref(form).errors.email
                    }, null, 8, ["message"])
                  ]),
                  unref(form).wasSuccessful ? (openBlock(), createBlock(_component_Message, {
                    key: 0,
                    severity: "info",
                    closable: ""
                  }, {
                    default: withCtx(() => [
                      createTextVNode("Lien envoyé. La personne doit accepter l'invitation.")
                    ]),
                    _: 1
                  })) : createCommentVNode("", true),
                  createVNode(_component_Button, {
                    type: "submit",
                    label: "Envoyé l'invitation",
                    loading: unref(form).processing
                  }, null, 8, ["loading"])
                ], 32)
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(ssrRenderComponent(_component_Message, { severity: "warning" }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Vous n&#39;avez pas les permissions pour ajouter des utilisateurs`);
            } else {
              return [
                createTextVNode("Vous n'avez pas les permissions pour ajouter des utilisateurs")
              ];
            }
          }),
          _: 1
        }, _parent));
      }
      _push(`</div>`);
      _push(ssrRenderComponent(_sfc_main$1E, {
        data: _ctx.$page.props.users_invitations
      }, null, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Users/AddUser.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
const __vite_glob_0_60 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1D
}, Symbol.toStringTag, { value: "Module" }));
const chartSize = 70;
const _sfc_main$1C = /* @__PURE__ */ defineComponent({
  __name: "NeighboursWidget",
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null }
  },
  setup(__props) {
    const props = __props;
    const initChart = async () => {
      var el = document.getElementById("kt_card_widget_17_chart");
      if (!el) {
        return;
      }
      try {
        const data = props.data.top;
        if (!data || data.length === 0) {
          console.error("Aucune donnée disponible pour le graphique.");
          return;
        }
        var options = {
          size: el.getAttribute("data-kt-size") ? parseInt(el.getAttribute("data-kt-size")) : 100,
          lineWidth: el.getAttribute("data-kt-line") ? parseInt(el.getAttribute("data-kt-line")) : 11,
          rotate: el.getAttribute("data-kt-rotate") ? parseInt(el.getAttribute("data-kt-rotate")) : 145
        };
        var canvas = document.createElement("canvas");
        var span = document.createElement("span");
        var ctx = canvas.getContext("2d");
        canvas.width = canvas.height = options.size;
        el.appendChild(span);
        el.appendChild(canvas);
        ctx.translate(options.size / 2, options.size / 2);
        ctx.rotate(-Math.PI / 2);
        var radius = (options.size - options.lineWidth) / 2;
        var drawArc = (color, start, end) => {
          ctx.beginPath();
          ctx.arc(0, 0, radius, start, end);
          ctx.strokeStyle = color;
          ctx.lineWidth = options.lineWidth;
          ctx.stroke();
        };
        drawArc("#E4E6EF", 0, Math.PI * 2);
        let startAngle = 0;
        data.forEach((quartier, index) => {
          let percentage = quartier.pourcentage / 100;
          let endAngle = startAngle + percentage * Math.PI * 2;
          drawArc(neighbourColor(index), startAngle, endAngle);
          startAngle = endAngle;
        });
      } catch (error) {
        console.error("Erreur lors de la récupération des données : ", error);
      }
    };
    onMounted(() => {
      initChart();
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.data) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, _attrs))}><div class="card-body pb-0"><div class="flex flex-col gap-2"><h2 class="text-1.5xl font-semibold text-gray-900"> Quartiers enregistrés: <span class="link">${ssrInterpolate(__props.data.count)}</span></h2><p class="text-sm font-normal text-gray-700 leading-5.5"> Les quartiers les plus populaires </p></div></div><div class="card-footer justify-center"><div class="md:flex items-center gap-[3rem]"><div class="flex justify-center pt-2 mb-3 md:mb-0"><div id="kt_card_widget_17_chart" style="${ssrRenderStyle({
          minWidth: `${chartSize}px`,
          minHeight: `${chartSize}px`
        })}"${ssrRenderAttr("data-kt-size", chartSize)}${ssrRenderAttr("data-kt-line", 11)}></div></div><div class="flex flex-col justify-center flex-row-fluid"><!--[-->`);
        ssrRenderList(__props.data.top, (item, index) => {
          _push(`<div class="flex fw-semibold justify-around items-center"><div class="bullet w-8px h-3px rounded-2 me-3" style="${ssrRenderStyle({
            "background-color": unref(neighbourColor)(index)
          })}"></div><div class="text-gray-500 flex-grow-1 me-4 capitalize">${ssrInterpolate(item.quartier)}</div><div class="fw-bolder text-gray-700 text-xxl-end text-sm">${ssrInterpolate(item.pourcentage)}% </div></div>`);
        });
        _push(`<!--]--></div></div></div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/NeighboursWidget.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
const __vite_glob_0_52 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1C
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1B = {
  __name: "MembersWidget",
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null }
  },
  setup(__props) {
    var _a, _b;
    const props = __props;
    const lastAvatarValue = ref(
      ((_a = props.data) == null ? void 0 : _a.today_count) - ((_b = props.data) == null ? void 0 : _b.show_today.length)
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_AvatarGroup = __unplugin_components_0$7;
      const _component_Avatar = __unplugin_components_1$6;
      const _component_Message = __unplugin_components_0;
      const _component_Link = resolveComponent("Link");
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card flex-col justify-between gap-6 h-full bg-cover rtl:bg-[left_top_-1.7rem] bg-[right_top_-1.7rem] bg-no-repeat channel-stats-bg" }, _attrs))}>`);
      if (__props.data) {
        _push(`<div class="card-body"><div class="flex flex-col justify-center gap-4"><h2 class="text-1.5xl font-semibold text-gray-900"><span class="link">${ssrInterpolate(__props.data.members_count)}</span> membres uniques </h2><p class="text-sm font-normal text-gray-700 leading-5.5"> Inscrits aujourd&#39;hui </p>`);
        if (__props.data.show_today.length) {
          _push(ssrRenderComponent(_component_AvatarGroup, null, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<!--[-->`);
                ssrRenderList(__props.data.show_today, (user, index) => {
                  _push2(ssrRenderComponent(_component_Avatar, {
                    key: user.id,
                    image: user.profile_photo_url,
                    shape: "circle"
                  }, null, _parent2, _scopeId));
                });
                _push2(`<!--]-->`);
                if (lastAvatarValue.value) {
                  _push2(ssrRenderComponent(_component_Avatar, {
                    label: "+" + lastAvatarValue.value,
                    shape: "circle"
                  }, null, _parent2, _scopeId));
                } else {
                  _push2(`<!---->`);
                }
              } else {
                return [
                  (openBlock(true), createBlock(Fragment, null, renderList(__props.data.show_today, (user, index) => {
                    return openBlock(), createBlock(_component_Avatar, {
                      key: user.id,
                      image: user.profile_photo_url,
                      shape: "circle"
                    }, null, 8, ["image"]);
                  }), 128)),
                  lastAvatarValue.value ? (openBlock(), createBlock(_component_Avatar, {
                    key: 0,
                    label: "+" + lastAvatarValue.value,
                    shape: "circle"
                  }, null, 8, ["label"])) : createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent));
        } else {
          _push(ssrRenderComponent(_component_Message, { severity: "secondary" }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(` Aucun membre inscrit aujourd&#39;hui `);
              } else {
                return [
                  createTextVNode(" Aucun membre inscrit aujourd'hui ")
                ];
              }
            }),
            _: 1
          }, _parent));
        }
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="card-footer justify-center">`);
      _push(ssrRenderComponent(_component_Link, {
        class: "btn btn-link",
        href: _ctx.route(_ctx.$page.props.routePrefix + "users")
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Voir toute la liste `);
          } else {
            return [
              createTextVNode(" Voir toute la liste ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/MembersWidget.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
const __vite_glob_0_51 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1B
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1A = /* @__PURE__ */ defineComponent({
  __name: "Overview",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "grid md:grid-cols-4 gap-y-5 md:gap-7.5 items-stretch" }, _attrs))}><div class="md:col-span-2">`);
      _push(ssrRenderComponent(_sfc_main$1B, {
        data: _ctx.$page.props.users_stats
      }, null, _parent));
      _push(`</div><div class="md:col-span-3">`);
      _push(ssrRenderComponent(_sfc_main$1C, {
        data: _ctx.$page.props.neighbours_stats
      }, null, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Overview.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
const __vite_glob_0_53 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1A
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1z = /* @__PURE__ */ defineComponent({
  __name: "FaqForm",
  __ssrInlineRender: true,
  props: {
    item: Object
  },
  emits: ["close", "created", "updated"],
  setup(__props, { emit: __emit }) {
    var _a, _b, _c, _d;
    const props = __props;
    usePage();
    const mainStore = useMainStore();
    useToast();
    const features = ref([]);
    const form = useForm({
      _method: props.item ? "PUT" : "POST",
      category: ((_a = props.item) == null ? void 0 : _a.category) || null,
      question: ((_b = props.item) == null ? void 0 : _b.question) || null,
      answer: ((_c = props.item) == null ? void 0 : _c.answer) || null,
      is_active: (_d = props.item) == null ? void 0 : _d.is_active
    });
    const search = (event) => {
      features.value = mainStore.appFeatures.filter((feature) => {
        return feature.name.toLowerCase().includes(event.query.toLowerCase());
      });
    };
    onMounted(async () => {
      await mainStore.fetchFeatures();
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_AutoComplete = __unplugin_components_1$1;
      const _component_InputError = resolveComponent("InputError");
      const _component_InputText = __unplugin_components_1$2;
      const _component_Textarea = __unplugin_components_2$3;
      _push(`<form${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-5 my-2" }, _attrs))}><div>`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_AutoComplete, {
              modelValue: unref(form).category,
              "onUpdate:modelValue": ($event) => unref(form).category = $event,
              fluid: "",
              id: "category",
              "option-label": "name",
              "option-value": "name",
              suggestions: features.value,
              onComplete: search
            }, null, _parent2, _scopeId));
            _push2(`<label for="category"${_scopeId}>Catégorie</label>`);
          } else {
            return [
              createVNode(_component_AutoComplete, {
                modelValue: unref(form).category,
                "onUpdate:modelValue": ($event) => unref(form).category = $event,
                fluid: "",
                id: "category",
                "option-label": "name",
                "option-value": "name",
                suggestions: features.value,
                onComplete: search
              }, null, 8, ["modelValue", "onUpdate:modelValue", "suggestions"]),
              createVNode("label", { for: "category" }, "Catégorie")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.category
      }, null, _parent));
      _push(`</div><div>`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).question,
              "onUpdate:modelValue": ($event) => unref(form).question = $event,
              id: "question",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="question"${_scopeId}>Question</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).question,
                "onUpdate:modelValue": ($event) => unref(form).question = $event,
                id: "question",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "question" }, "Question")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.question
      }, null, _parent));
      _push(`</div><div>`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              modelValue: unref(form).answer,
              "onUpdate:modelValue": ($event) => unref(form).answer = $event,
              id: "answer",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="answer"${_scopeId}>Réponse</label>`);
          } else {
            return [
              createVNode(_component_Textarea, {
                modelValue: unref(form).answer,
                "onUpdate:modelValue": ($event) => unref(form).answer = $event,
                id: "answer",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "answer" }, "Réponse")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_InputError, {
        class: "mt-1",
        message: unref(form).errors.answer
      }, null, _parent));
      _push(`</div>`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        onCanceled: ($event) => _ctx.$emit("close")
      }, null, _parent));
      _push(`</form>`);
    };
  }
});
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Faqs/FaqForm.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
const __vite_glob_0_49 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1z
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1y = /* @__PURE__ */ defineComponent({
  __name: "FaqList",
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null }
  },
  setup(__props) {
    const props = __props;
    const mainStore = useMainStore();
    const loading = ref(false);
    const filters = ref({
      category: { value: null, matchMode: FilterMatchMode.EQUALS }
    });
    const item = ref(null);
    const edit = ref(false);
    const onClose = () => {
      if (!props.data) {
        loadData();
      }
      edit.value = false;
    };
    onMounted(() => {
      if (!props.data) loadData();
      mainStore.fetchFeatures();
    });
    async function loadData() {
      loading.value = true;
      await mainStore.fetchFaqs().then(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_Select = __unplugin_components_1;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      const _component_Tag = __unplugin_components_2$4;
      const _directive_tooltip = __unplugin_directives_0;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: edit.value,
        "onUpdate:visible": ($event) => edit.value = $event,
        modal: "",
        onHide: ($event) => item.value = null,
        header: "Modifier un faq",
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$1z, {
              item: item.value,
              onClose: ($event) => onClose()
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$1z, {
                item: item.value,
                onClose: ($event) => onClose()
              }, null, 8, ["item", "onClose"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_CustomDataTable, {
        paginated: __props.data || unref(mainStore).faqs,
        "filter-name": "faqs",
        title: "Questions/Réponses",
        filters: filters.value,
        loading: loading.value,
        "show-creation-date": true,
        "show-update-date": true,
        onSearched: ($event) => loadData()
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<button class="btn btn-sm btn-icon btn-clear btn-light"${_scopeId2}><i class="ki-filled ki-notepad-edit"${_scopeId2}></i></button>`);
                } else {
                  return [
                    createVNode("button", {
                      class: "btn btn-sm btn-icon btn-clear btn-light",
                      onClick: ($event) => {
                        item.value = data;
                        edit.value = true;
                      }
                    }, [
                      createVNode("i", { class: "ki-filled ki-notepad-edit" })
                    ], 8, ["onClick"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "is_active",
              sortable: "",
              header: "Publié",
              style: { "width": "10%" }
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1R, {
                    item: data,
                    routeName: _ctx.$page.props.routePrefix + "faq.update",
                    field
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1R, {
                      item: data,
                      routeName: _ctx.$page.props.routePrefix + "faq.update",
                      field
                    }, null, 8, ["item", "routeName", "field"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "category",
              sortable: "",
              header: "Catégorie"
            }, {
              filter: withCtx(({ filterModel, filterCallback }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Select, {
                    modelValue: filterModel.value,
                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                    options: unref(mainStore).appFeatures,
                    optionLabel: "name",
                    optionValue: "name",
                    onChange: ($event) => filterCallback(),
                    placeholder: "Chercher une catégorie"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Select, {
                      modelValue: filterModel.value,
                      "onUpdate:modelValue": ($event) => filterModel.value = $event,
                      options: unref(mainStore).appFeatures,
                      optionLabel: "name",
                      optionValue: "name",
                      onChange: ($event) => filterCallback(),
                      placeholder: "Chercher une catégorie"
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "onChange"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, { header: "Question/Réponse" }, {
              body: withCtx(({ data }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex flex-col gap-1"${_scopeId2}><a class="font-medium text-sm text-gray-900" href="#"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_CopyBtn, {
                    text: data.question
                  }, null, _parent3, _scopeId2));
                  _push3(` ${ssrInterpolate(data.question)}</a><span${ssrRenderAttrs(mergeProps({ class: "text-xs text-gray-700 font-normal max-w-[300px] truncate" }, ssrGetDirectiveProps(_ctx, _directive_tooltip, data.answer, void 0, { bottom: true })))}${_scopeId2}>${ssrInterpolate(data.answer)}</span></div>`);
                } else {
                  return [
                    createVNode("div", { class: "flex flex-col gap-1" }, [
                      createVNode("a", {
                        class: "font-medium text-sm text-gray-900",
                        href: "#"
                      }, [
                        createVNode(_component_CopyBtn, {
                          text: data.question
                        }, null, 8, ["text"]),
                        createTextVNode(" " + toDisplayString(data.question), 1)
                      ]),
                      withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal max-w-[300px] truncate" }, [
                        createTextVNode(toDisplayString(data.answer), 1)
                      ])), [
                        [
                          _directive_tooltip,
                          data.answer,
                          void 0,
                          { bottom: true }
                        ]
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "is_active",
              header: "Publié"
            }, {
              body: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Tag, {
                    severity: data[field] ? "success" : "secondary",
                    value: data[field] ? "Oui" : "Non"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_Tag, {
                      severity: data[field] ? "success" : "secondary",
                      value: data[field] ? "Oui" : "Non"
                    }, null, 8, ["severity", "value"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, { style: { "width": "1%" } }, {
                body: withCtx(({ data }) => [
                  createVNode("button", {
                    class: "btn btn-sm btn-icon btn-clear btn-light",
                    onClick: ($event) => {
                      item.value = data;
                      edit.value = true;
                    }
                  }, [
                    createVNode("i", { class: "ki-filled ki-notepad-edit" })
                  ], 8, ["onClick"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "is_active",
                sortable: "",
                header: "Publié",
                style: { "width": "10%" }
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode(_sfc_main$1R, {
                    item: data,
                    routeName: _ctx.$page.props.routePrefix + "faq.update",
                    field
                  }, null, 8, ["item", "routeName", "field"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "category",
                sortable: "",
                header: "Catégorie"
              }, {
                filter: withCtx(({ filterModel, filterCallback }) => [
                  createVNode(_component_Select, {
                    modelValue: filterModel.value,
                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                    options: unref(mainStore).appFeatures,
                    optionLabel: "name",
                    optionValue: "name",
                    onChange: ($event) => filterCallback(),
                    placeholder: "Chercher une catégorie"
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "onChange"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, { header: "Question/Réponse" }, {
                body: withCtx(({ data }) => [
                  createVNode("div", { class: "flex flex-col gap-1" }, [
                    createVNode("a", {
                      class: "font-medium text-sm text-gray-900",
                      href: "#"
                    }, [
                      createVNode(_component_CopyBtn, {
                        text: data.question
                      }, null, 8, ["text"]),
                      createTextVNode(" " + toDisplayString(data.question), 1)
                    ]),
                    withDirectives((openBlock(), createBlock("span", { class: "text-xs text-gray-700 font-normal max-w-[300px] truncate" }, [
                      createTextVNode(toDisplayString(data.answer), 1)
                    ])), [
                      [
                        _directive_tooltip,
                        data.answer,
                        void 0,
                        { bottom: true }
                      ]
                    ])
                  ])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "is_active",
                header: "Publié"
              }, {
                body: withCtx(({ data, field }) => [
                  createVNode(_component_Tag, {
                    severity: data[field] ? "success" : "secondary",
                    value: data[field] ? "Oui" : "Non"
                  }, null, 8, ["severity", "value"])
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Faqs/FaqList.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
const __vite_glob_0_50 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1y
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1x = /* @__PURE__ */ defineComponent({
  __name: "Faqs",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Divider = __unplugin_components_0$4;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "" }, _attrs))}>`);
      _push(ssrRenderComponent(_sfc_main$1U, {
        title: "Foire Aux Questions",
        description: "Créer et gérer les questions réponses.",
        "btn-text": "Ajouter une Q/R",
        image: "/gestion/images/faq.png",
        "create-component": _sfc_main$1z
      }, null, _parent));
      _push(ssrRenderComponent(_component_Divider, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1y, {
        data: _ctx.$page.props.faqs
      }, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Faqs.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
const __vite_glob_0_48 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1x
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1w = /* @__PURE__ */ defineComponent({
  __name: "OtherSettings",
  __ssrInlineRender: true,
  setup(__props) {
    const page2 = usePage();
    const toast = useToast$1();
    const form = useForm({});
    const logoutEveryone = () => {
      form.post(route(page2.props.routePrefix + "logout-everyone"), {
        onSuccess: () => {
          toast.add({
            severity: "success",
            summary: page2.props.flash.success,
            life: 5e3
          });
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card" }, _attrs))}><div class="card-header"><h3 class="card-title">Autres Réglages</h3></div><div class="card-group flex items-center justify-between py-4 gap-2.5"><div class="flex items-center gap-3.5"><div class="relative size-[50px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="ki-filled ki-exit-right text-2xl text-gray-500"></i></div></div><div class="flex flex-col gap-0.5"><span class="flex items-center gap-1.5 leading-none font-medium text-sm text-gray-900"> Déconnecter tout le monde </span><span class="text-2sm text-gray-700"> Déconnecte instantanément tous les utilisateurs. </span></div></div><div class="flex items-center gap-2.5">`);
      _push(ssrRenderComponent(_component_Button, {
        class: "btn btn-sm btn-light btn-outline",
        label: "Procéder",
        unstyled: "",
        loading: unref(form).processing,
        onClick: logoutEveryone
      }, null, _parent));
      _push(`</div></div><div class="card-group flex items-center justify-between py-4 gap-2.5"><div class="flex items-center gap-3.5"><div class="relative size-[50px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="ki-filled ki-shield-tick text-2xl text-gray-500"></i></div></div><div class="flex flex-col gap-0.5"><span class="flex items-center gap-1.5 leading-none font-medium text-sm text-gray-900"> Enforce two-step verification </span><span class="text-2sm text-gray-700"> Add an extra layer of security with two-step verification. </span></div></div><div class="flex items-center gap-2.5"><div class="switch switch-sm"><input${ssrIncludeBooleanAttr(false) ? " checked" : ""} name="param" type="checkbox"></div></div></div></div>`);
    };
  }
});
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/SiteSettings/OtherSettings.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
const __vite_glob_0_41 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1w
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1v = {
  __name: "SettingsForm",
  __ssrInlineRender: true,
  props: {
    setting: Object
  },
  setup(__props) {
    const props = __props;
    usePage();
    const { id, updated_at, ...formData } = props.setting;
    const form = useForm({
      ...formData
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_Textarea = __unplugin_components_2$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card" }, _attrs))}><div class="card-header"><h3 class="card-title">Réglages de base</h3><div><span class="text-sm">Dernière modification : ${ssrInterpolate(unref(dayjs)(unref(updated_at)).format("DD/MM/YYYY HH:mm:ss"))}</span></div></div><div class="card-body"><form class="flex flex-col gap-5"><!--[-->`);
      ssrRenderList(unref(form).data(), (item, index) => {
        _push(`<div>`);
        _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              if ([
                "site_description",
                "site_keywords"
              ].includes(index)) {
                _push2(ssrRenderComponent(_component_Textarea, {
                  modelValue: unref(form)[index],
                  "onUpdate:modelValue": ($event) => unref(form)[index] = $event,
                  id: index,
                  fluid: ""
                }, null, _parent2, _scopeId));
              } else {
                _push2(ssrRenderComponent(_component_InputText, {
                  modelValue: unref(form)[index],
                  "onUpdate:modelValue": ($event) => unref(form)[index] = $event,
                  id: index,
                  fluid: ""
                }, null, _parent2, _scopeId));
              }
              _push2(`<label${ssrRenderAttr("for", index)} class="capitalize"${_scopeId}>${ssrInterpolate(index)}</label>`);
            } else {
              return [
                [
                  "site_description",
                  "site_keywords"
                ].includes(index) ? (openBlock(), createBlock(_component_Textarea, {
                  key: 0,
                  modelValue: unref(form)[index],
                  "onUpdate:modelValue": ($event) => unref(form)[index] = $event,
                  id: index,
                  fluid: ""
                }, null, 8, ["modelValue", "onUpdate:modelValue", "id"])) : (openBlock(), createBlock(_component_InputText, {
                  key: 1,
                  modelValue: unref(form)[index],
                  "onUpdate:modelValue": ($event) => unref(form)[index] = $event,
                  id: index,
                  fluid: ""
                }, null, 8, ["modelValue", "onUpdate:modelValue", "id"])),
                createVNode("label", {
                  for: index,
                  class: "capitalize"
                }, toDisplayString(index), 9, ["for"])
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(ssrRenderComponent(_component_InputError, {
          class: "mt-1",
          message: unref(form).errors[index]
        }, null, _parent));
        _push(`</div>`);
      });
      _push(`<!--]-->`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        "show-cancel": false
      }, null, _parent));
      _push(`</form></div></div>`);
    };
  }
};
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/SiteSettings/SettingsForm.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
const __vite_glob_0_43 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1v
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1u = {
  __name: "Settings",
  __ssrInlineRender: true,
  props: {
    site_settings: Object
  },
  setup(__props) {
    const props = __props;
    const { created_at, ...data } = props.site_settings;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "grid lg:grid-cols-5 gap-5 lg:gap-7.5 items-stretch" }, _attrs))}><div class="lg:col-span-3">`);
      _push(ssrRenderComponent(_sfc_main$1v, { setting: data }, null, _parent));
      _push(`</div><div class="lg:col-span-2">`);
      _push(ssrRenderComponent(_sfc_main$1w, null, null, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/SiteSettings/Settings.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
const __vite_glob_0_42 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1u
}, Symbol.toStringTag, { value: "Module" }));
const itemsPerPage = ["5", "10", "15", "20", "30", "50", "100"];
({
  global: { matchMode: FilterMatchMode.CONTAINS },
  status: { matchMode: FilterMatchMode.EQUALS }
});
const scrollHeight = "550px";
const pt = {
  table: { style: "min-width: 50rem" },
  column: {
    headerCell: (props) => ({
      class: "custom-header-class"
    }),
    bodycell: ({ state }) => ({
      class: "align-middle",
      style: state["d_editing"] && "padding-top: 0.75rem; padding-bottom: 0.75rem"
    })
  }
};
const _sfc_main$1t = {
  __name: "SocialLinks",
  __ssrInlineRender: true,
  props: {
    social_links: Object
  },
  setup(__props) {
    const page2 = usePage();
    const toast = useToast();
    const editingRows = ref([]);
    const form = useForm({});
    const onRowEditSave = (event) => {
      const { data, index, newData } = event;
      if (data.platform == newData.platform && data.url == newData.url) return;
      form.transform((data2) => {
        return { platform: newData.platform, url: newData.url };
      }).put(route(page2.props.routePrefix + "social-link.update", data.id), {
        preserveScroll: true,
        onSuccess: (page3) => {
          toast.add({
            severity: "success",
            summary: page3.props.flash.status,
            life: 5e3
          });
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Message = __unplugin_components_0;
      const _component_DataTable = __unplugin_components_1$7;
      const _component_Column = __unplugin_components_2;
      const _component_InputText = __unplugin_components_1$2;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card" }, _attrs))}><div class="card-header"><h3 class="card-title">Liens de réseaux sociaux</h3></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_Message, {
        severity: "secondary",
        closable: ""
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Les élément sans lien ne seront pas affichés.`);
          } else {
            return [
              createTextVNode("Les élément sans lien ne seront pas affichés.")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_DataTable, {
        value: __props.social_links,
        editingRows: editingRows.value,
        "onUpdate:editingRows": ($event) => editingRows.value = $event,
        editMode: "row",
        dataKey: "id",
        onRowEditSave,
        pt: unref(pt)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Column, {
              rowEditor: true,
              style: { "width": "10%" },
              bodyStyle: "text-align:center"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "platform",
              header: "Plateforme",
              style: { "width": "30%" }
            }, {
              editor: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_InputText, {
                    modelValue: data[field],
                    "onUpdate:modelValue": ($event) => data[field] = $event,
                    fluid: ""
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_InputText, {
                      modelValue: data[field],
                      "onUpdate:modelValue": ($event) => data[field] = $event,
                      fluid: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_Column, {
              field: "url",
              header: "URL",
              style: { "width": "60%" }
            }, {
              editor: withCtx(({ data, field }, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_InputText, {
                    modelValue: data[field],
                    "onUpdate:modelValue": ($event) => data[field] = $event,
                    fluid: ""
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_InputText, {
                      modelValue: data[field],
                      "onUpdate:modelValue": ($event) => data[field] = $event,
                      fluid: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Column, {
                rowEditor: true,
                style: { "width": "10%" },
                bodyStyle: "text-align:center"
              }),
              createVNode(_component_Column, {
                field: "platform",
                header: "Plateforme",
                style: { "width": "30%" }
              }, {
                editor: withCtx(({ data, field }) => [
                  createVNode(_component_InputText, {
                    modelValue: data[field],
                    "onUpdate:modelValue": ($event) => data[field] = $event,
                    fluid: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                _: 1
              }),
              createVNode(_component_Column, {
                field: "url",
                header: "URL",
                style: { "width": "60%" }
              }, {
                editor: withCtx(({ data, field }) => [
                  createVNode(_component_InputText, {
                    modelValue: data[field],
                    "onUpdate:modelValue": ($event) => data[field] = $event,
                    fluid: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    };
  }
};
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/SiteSettings/SocialLinks.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
const __vite_glob_0_44 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1t
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1s = /* @__PURE__ */ defineComponent({
  __name: "Departements",
  __ssrInlineRender: true,
  props: {
    departements: { type: Object, default: null }
  },
  setup(__props) {
    const props = __props;
    const mainStore = useMainStore();
    const expandedRows = ref({});
    const filtersOne = ref({
      name: { value: null, matchMode: FilterMatchMode.CONTAINS }
    });
    const filtersTwo = ref({
      ...filtersOne.value,
      arrondissements_names: { value: null, matchMode: FilterMatchMode.CONTAINS },
      quartiers: { value: null, matchMode: FilterMatchMode.CONTAINS }
    });
    const expandAll = () => {
      expandedRows.value = props.departements.reduce(
        (acc, p2) => (acc[p2.id] = true) && acc,
        {}
      );
    };
    const collapseAll = () => {
      expandedRows.value = null;
    };
    onMounted(() => {
      mainStore.fetchDepartements();
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NotPermitted = resolveComponent("NotPermitted");
      const _component_Card = __unplugin_components_0$5;
      const _component_DataTable = __unplugin_components_1$7;
      const _component_Button = __unplugin_components_0$1;
      const _component_Column = __unplugin_components_2;
      const _component_InputText = __unplugin_components_1$2;
      if (!_ctx.$page.props.can.manageDepartements) {
        _push(ssrRenderComponent(_component_NotPermitted, _attrs, null, _parent));
      } else {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Départements, Communes &amp; Arrondissements`);
            } else {
              return [
                createTextVNode("Départements, Communes & Arrondissements")
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_DataTable, {
                value: __props.departements,
                expandedRows: expandedRows.value,
                "onUpdate:expandedRows": ($event) => expandedRows.value = $event,
                filters: filtersOne.value,
                "onUpdate:filters": ($event) => filtersOne.value = $event,
                filterDisplay: "row",
                dataKey: "id",
                paginator: "",
                rows: 20,
                rowsPerPageOptions: [5, 10, 20, 50]
              }, {
                header: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex flex-wrap justify-end gap-2"${_scopeId2}>`);
                    _push3(ssrRenderComponent(_component_Button, {
                      text: "",
                      icon: "pi pi-plus",
                      label: "Tout déplier",
                      onClick: expandAll
                    }, null, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Button, {
                      text: "",
                      icon: "pi pi-minus",
                      label: "Tout replier",
                      onClick: collapseAll
                    }, null, _parent3, _scopeId2));
                    _push3(`</div>`);
                  } else {
                    return [
                      createVNode("div", { class: "flex flex-wrap justify-end gap-2" }, [
                        createVNode(_component_Button, {
                          text: "",
                          icon: "pi pi-plus",
                          label: "Tout déplier",
                          onClick: expandAll
                        }),
                        createVNode(_component_Button, {
                          text: "",
                          icon: "pi pi-minus",
                          label: "Tout replier",
                          onClick: collapseAll
                        })
                      ])
                    ];
                  }
                }),
                expansion: withCtx((slotProps, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="p-4"${_scopeId2}><h5 class="font-semibold"${_scopeId2}> Communes de: ${ssrInterpolate(slotProps.data.name)}</h5>`);
                    _push3(ssrRenderComponent(_component_DataTable, {
                      value: slotProps.data.communes,
                      filters: filtersTwo.value,
                      "onUpdate:filters": ($event) => filtersTwo.value = $event,
                      filterDisplay: "row",
                      paginator: "",
                      rows: 5,
                      rowsPerPageOptions: [5, 10, 20, 50]
                    }, {
                      default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Column, {
                            field: "name",
                            header: "Nom de commune",
                            sortable: "",
                            style: { "width": "20%" }
                          }, null, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_Column, {
                            field: "arrondissements_names",
                            header: "Arrondissements",
                            "show-filter-menu": false,
                            style: { "width": "40%" }
                          }, {
                            filter: withCtx(({ filterModel, filterCallback }, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un arrondissement"
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_component_InputText, {
                                    modelValue: filterModel.value,
                                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                    type: "text",
                                    onInput: ($event) => filterCallback(),
                                    placeholder: "Chercher un arrondissement"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_Column, {
                            field: "quartiers",
                            header: "Tous les quartiers",
                            "show-filter-menu": false,
                            style: { "width": "40%" }
                          }, {
                            filter: withCtx(({ filterModel, filterCallback }, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un quartier"
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_component_InputText, {
                                    modelValue: filterModel.value,
                                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                    type: "text",
                                    onInput: ($event) => filterCallback(),
                                    placeholder: "Chercher un quartier"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Column, {
                              field: "name",
                              header: "Nom de commune",
                              sortable: "",
                              style: { "width": "20%" }
                            }),
                            createVNode(_component_Column, {
                              field: "arrondissements_names",
                              header: "Arrondissements",
                              "show-filter-menu": false,
                              style: { "width": "40%" }
                            }, {
                              filter: withCtx(({ filterModel, filterCallback }) => [
                                createVNode(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un arrondissement"
                                }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                              ]),
                              _: 1
                            }),
                            createVNode(_component_Column, {
                              field: "quartiers",
                              header: "Tous les quartiers",
                              "show-filter-menu": false,
                              style: { "width": "40%" }
                            }, {
                              filter: withCtx(({ filterModel, filterCallback }) => [
                                createVNode(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un quartier"
                                }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    _push3(`</div>`);
                  } else {
                    return [
                      createVNode("div", { class: "p-4" }, [
                        createVNode("h5", { class: "font-semibold" }, " Communes de: " + toDisplayString(slotProps.data.name), 1),
                        createVNode(_component_DataTable, {
                          value: slotProps.data.communes,
                          filters: filtersTwo.value,
                          "onUpdate:filters": ($event) => filtersTwo.value = $event,
                          filterDisplay: "row",
                          paginator: "",
                          rows: 5,
                          rowsPerPageOptions: [5, 10, 20, 50]
                        }, {
                          default: withCtx(() => [
                            createVNode(_component_Column, {
                              field: "name",
                              header: "Nom de commune",
                              sortable: "",
                              style: { "width": "20%" }
                            }),
                            createVNode(_component_Column, {
                              field: "arrondissements_names",
                              header: "Arrondissements",
                              "show-filter-menu": false,
                              style: { "width": "40%" }
                            }, {
                              filter: withCtx(({ filterModel, filterCallback }) => [
                                createVNode(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un arrondissement"
                                }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                              ]),
                              _: 1
                            }),
                            createVNode(_component_Column, {
                              field: "quartiers",
                              header: "Tous les quartiers",
                              "show-filter-menu": false,
                              style: { "width": "40%" }
                            }, {
                              filter: withCtx(({ filterModel, filterCallback }) => [
                                createVNode(_component_InputText, {
                                  modelValue: filterModel.value,
                                  "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                  type: "text",
                                  onInput: ($event) => filterCallback(),
                                  placeholder: "Chercher un quartier"
                                }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 2
                        }, 1032, ["value", "filters", "onUpdate:filters"])
                      ])
                    ];
                  }
                }),
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_Column, {
                      expander: "",
                      style: { "width": "5rem" }
                    }, null, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, {
                      field: "name",
                      header: "Département"
                    }, {
                      filter: withCtx(({ filterModel, filterCallback }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_InputText, {
                            modelValue: filterModel.value,
                            "onUpdate:modelValue": ($event) => filterModel.value = $event,
                            type: "text",
                            onInput: ($event) => filterCallback(),
                            placeholder: "Chercher un département"
                          }, null, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_InputText, {
                              modelValue: filterModel.value,
                              "onUpdate:modelValue": ($event) => filterModel.value = $event,
                              type: "text",
                              onInput: ($event) => filterCallback(),
                              placeholder: "Chercher un département"
                            }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, {
                      field: "counts",
                      header: "Totaux"
                    }, {
                      body: withCtx(({ data, field }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<!--[-->`);
                          ssrRenderList(data[field], (item, index) => {
                            _push4(`<p${_scopeId3}>${ssrInterpolate(item)} ${ssrInterpolate(index)}</p>`);
                          });
                          _push4(`<!--]-->`);
                        } else {
                          return [
                            (openBlock(true), createBlock(Fragment, null, renderList(data[field], (item, index) => {
                              return openBlock(), createBlock("p", { key: index }, toDisplayString(item) + " " + toDisplayString(index), 1);
                            }), 128))
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_Column, {
                        expander: "",
                        style: { "width": "5rem" }
                      }),
                      createVNode(_component_Column, {
                        field: "name",
                        header: "Département"
                      }, {
                        filter: withCtx(({ filterModel, filterCallback }) => [
                          createVNode(_component_InputText, {
                            modelValue: filterModel.value,
                            "onUpdate:modelValue": ($event) => filterModel.value = $event,
                            type: "text",
                            onInput: ($event) => filterCallback(),
                            placeholder: "Chercher un département"
                          }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, {
                        field: "counts",
                        header: "Totaux"
                      }, {
                        body: withCtx(({ data, field }) => [
                          (openBlock(true), createBlock(Fragment, null, renderList(data[field], (item, index) => {
                            return openBlock(), createBlock("p", { key: index }, toDisplayString(item) + " " + toDisplayString(index), 1);
                          }), 128))
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(_component_DataTable, {
                  value: __props.departements,
                  expandedRows: expandedRows.value,
                  "onUpdate:expandedRows": ($event) => expandedRows.value = $event,
                  filters: filtersOne.value,
                  "onUpdate:filters": ($event) => filtersOne.value = $event,
                  filterDisplay: "row",
                  dataKey: "id",
                  paginator: "",
                  rows: 20,
                  rowsPerPageOptions: [5, 10, 20, 50]
                }, {
                  header: withCtx(() => [
                    createVNode("div", { class: "flex flex-wrap justify-end gap-2" }, [
                      createVNode(_component_Button, {
                        text: "",
                        icon: "pi pi-plus",
                        label: "Tout déplier",
                        onClick: expandAll
                      }),
                      createVNode(_component_Button, {
                        text: "",
                        icon: "pi pi-minus",
                        label: "Tout replier",
                        onClick: collapseAll
                      })
                    ])
                  ]),
                  expansion: withCtx((slotProps) => [
                    createVNode("div", { class: "p-4" }, [
                      createVNode("h5", { class: "font-semibold" }, " Communes de: " + toDisplayString(slotProps.data.name), 1),
                      createVNode(_component_DataTable, {
                        value: slotProps.data.communes,
                        filters: filtersTwo.value,
                        "onUpdate:filters": ($event) => filtersTwo.value = $event,
                        filterDisplay: "row",
                        paginator: "",
                        rows: 5,
                        rowsPerPageOptions: [5, 10, 20, 50]
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_Column, {
                            field: "name",
                            header: "Nom de commune",
                            sortable: "",
                            style: { "width": "20%" }
                          }),
                          createVNode(_component_Column, {
                            field: "arrondissements_names",
                            header: "Arrondissements",
                            "show-filter-menu": false,
                            style: { "width": "40%" }
                          }, {
                            filter: withCtx(({ filterModel, filterCallback }) => [
                              createVNode(_component_InputText, {
                                modelValue: filterModel.value,
                                "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                type: "text",
                                onInput: ($event) => filterCallback(),
                                placeholder: "Chercher un arrondissement"
                              }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                            ]),
                            _: 1
                          }),
                          createVNode(_component_Column, {
                            field: "quartiers",
                            header: "Tous les quartiers",
                            "show-filter-menu": false,
                            style: { "width": "40%" }
                          }, {
                            filter: withCtx(({ filterModel, filterCallback }) => [
                              createVNode(_component_InputText, {
                                modelValue: filterModel.value,
                                "onUpdate:modelValue": ($event) => filterModel.value = $event,
                                type: "text",
                                onInput: ($event) => filterCallback(),
                                placeholder: "Chercher un quartier"
                              }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 2
                      }, 1032, ["value", "filters", "onUpdate:filters"])
                    ])
                  ]),
                  default: withCtx(() => [
                    createVNode(_component_Column, {
                      expander: "",
                      style: { "width": "5rem" }
                    }),
                    createVNode(_component_Column, {
                      field: "name",
                      header: "Département"
                    }, {
                      filter: withCtx(({ filterModel, filterCallback }) => [
                        createVNode(_component_InputText, {
                          modelValue: filterModel.value,
                          "onUpdate:modelValue": ($event) => filterModel.value = $event,
                          type: "text",
                          onInput: ($event) => filterCallback(),
                          placeholder: "Chercher un département"
                        }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, {
                      field: "counts",
                      header: "Totaux"
                    }, {
                      body: withCtx(({ data, field }) => [
                        (openBlock(true), createBlock(Fragment, null, renderList(data[field], (item, index) => {
                          return openBlock(), createBlock("p", { key: index }, toDisplayString(item) + " " + toDisplayString(index), 1);
                        }), 128))
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }, 8, ["value", "expandedRows", "onUpdate:expandedRows", "filters", "onUpdate:filters"])
              ];
            }
          }),
          _: 1
        }, _parent));
      }
    };
  }
});
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/Departements.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
const __vite_glob_0_38 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1s
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1r = {
  __name: "TrainingForm",
  __ssrInlineRender: true,
  props: {
    item: Object
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b, _c, _d, _e, _f;
    const props = __props;
    useToast$1();
    const form = useForm({
      _method: props.item ? "PUT" : "POST",
      title: ((_a = props.item) == null ? void 0 : _a.title) || null,
      location: ((_b = props.item) == null ? void 0 : _b.location) || null,
      start_date: ((_c = props.item) == null ? void 0 : _c.start_date) || null,
      end_date: ((_d = props.item) == null ? void 0 : _d.end_date) || null,
      description: ((_e = props.item) == null ? void 0 : _e.description) || null,
      image: ((_f = props.item) == null ? void 0 : _f.image) || null
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ToastError = resolveComponent("ToastError");
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_DatePicker = __unplugin_components_2$1;
      const _component_IconField = __unplugin_components_1$4;
      const _component_InputIcon = __unplugin_components_3$1;
      const _component_Editor = __unplugin_components_5$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_ToastError, {
        errors: _ctx.$page.props.errors
      }, null, _parent));
      _push(`<form><div class="grid md:grid-cols-2 gap-4 pt-1.5"><div class="flex flex-col gap-4">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).title,
              "onUpdate:modelValue": ($event) => unref(form).title = $event,
              id: "title",
              required: "",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label class="required" for="title"${_scopeId}>Titre</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).title,
                "onUpdate:modelValue": ($event) => unref(form).title = $event,
                id: "title",
                required: "",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                class: "required",
                for: "title"
              }, "Titre")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).location,
              "onUpdate:modelValue": ($event) => unref(form).location = $event,
              id: "location",
              required: "",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label class="required" for="location"${_scopeId}>Lieu de la formation</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).location,
                "onUpdate:modelValue": ($event) => unref(form).location = $event,
                id: "location",
                required: "",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                class: "required",
                for: "location"
              }, "Lieu de la formation")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "start_date",
              modelValue: unref(form).start_date,
              "onUpdate:modelValue": ($event) => unref(form).start_date = $event,
              dateOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="start_date"${_scopeId}>Date de début</label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "start_date",
                modelValue: unref(form).start_date,
                "onUpdate:modelValue": ($event) => unref(form).start_date = $event,
                dateOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "start_date" }, "Date de début")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DatePicker, {
              id: "end_date",
              modelValue: unref(form).end_date,
              "onUpdate:modelValue": ($event) => unref(form).end_date = $event,
              dateOnly: "",
              showIcon: "",
              iconDisplay: "input",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="end_date"${_scopeId}>Date de fin</label>`);
          } else {
            return [
              createVNode(_component_DatePicker, {
                id: "end_date",
                modelValue: unref(form).end_date,
                "onUpdate:modelValue": ($event) => unref(form).end_date = $event,
                dateOnly: "",
                showIcon: "",
                iconDisplay: "input",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "end_date" }, "Date de fin")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                var _a2, _b2;
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1T, {
                    id: "image",
                    "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                    onSelected: ($event) => unref(form).image = $event
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-image" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_b2 = unref(form).image) == null ? void 0 : _b2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="image"${_scopeId}>Image (facultatif)</label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => {
                  var _a2;
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }),
                _: 1
              }),
              createVNode("label", { for: "image" }, "Image (facultatif)")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="flex flex-col"><label for="description">Description</label>`);
      _push(ssrRenderComponent(_component_Editor, {
        modelValue: unref(form).description,
        "onUpdate:modelValue": ($event) => unref(form).description = $event,
        id: "description",
        editorStyle: "height: 200px"
      }, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        "show-cancel": false
      }, null, _parent));
      _push(`</form><!--]-->`);
    };
  }
};
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/TrainingForm.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
const __vite_glob_0_45 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1r
}, Symbol.toStringTag, { value: "Module" }));
function useCustomConfirm(confirm) {
  const deleteConfirm = (accept, reject = null) => {
    confirm.require({
      message: "Voulez vous supprimer cet élément ?",
      header: "Zone de danger",
      icon: "pi pi-info-circle",
      rejectLabel: "Cancel",
      rejectProps: {
        label: "Annuler",
        severity: "secondary",
        outlined: true
      },
      acceptProps: {
        label: "Supprimer",
        severity: "danger"
      },
      accept: () => {
        accept();
      },
      reject: () => {
        if (reject) reject();
      }
    });
  };
  return { confirm, deleteConfirm };
}
const _sfc_main$1q = {
  __name: "DeleteButton",
  __ssrInlineRender: true,
  props: {
    deleteUrl: {
      type: String,
      default: null
    }
  },
  emits: ["clicked"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const props = __props;
    const loading = ref(false);
    const toast = useToast$1();
    const confirm = useConfirm();
    const { deleteConfirm } = useCustomConfirm(confirm);
    const onClick = () => {
      if (props.deleteUrl) {
        deleteConfirm(() => deleteItem());
      }
      emits("clicked");
    };
    function deleteItem() {
      router.delete(props.deleteUrl, {
        onStart: () => {
          loading.value = true;
        },
        onSuccess: (page2) => {
          toast.add({
            severity: "success",
            summary: page2.props.flash.success || "Element supprimé",
            life: 5e3
          });
        },
        onFinish: () => {
          loading.value = false;
        }
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Button = __unplugin_components_0$1;
      const _component_ConfirmDialog = __unplugin_components_1$8;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Button, {
        class: "btn btn-sm btn-icon btn-clear btn-danger",
        icon: "pi pi-trash",
        severity: "danger",
        loading: loading.value,
        onClick
      }, null, _parent));
      _push(ssrRenderComponent(_component_ConfirmDialog, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/DeleteButton.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
const _sfc_main$1p = /* @__PURE__ */ defineComponent({
  __name: "Trainings",
  __ssrInlineRender: true,
  props: {
    trainings: { type: Object, default: null }
  },
  setup(__props) {
    const create = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NotPermitted = resolveComponent("NotPermitted");
      const _component_Card = __unplugin_components_0$5;
      const _component_Dialog = __unplugin_components_0$2;
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      if (!_ctx.$page.props.can.manageTrainings) {
        _push(ssrRenderComponent(_component_NotPermitted, _attrs, null, _parent));
      } else {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="flex justify-between"${_scopeId}> Formations <button class="btn btn-primary btn-outline"${_scopeId}><i class="ki-outline ki-plus"${_scopeId}></i> Nouvelle Formation </button>`);
              _push2(ssrRenderComponent(_component_Dialog, {
                visible: create.value,
                "onUpdate:visible": ($event) => create.value = $event,
                modal: "",
                "dismissable-mask": "",
                header: "Ajouter une Formation",
                style: { width: "50rem" },
                breakpoints: unref(dialogBreakpoints)
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1r, {
                      onCreated: ($event) => create.value = false
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$1r, {
                        onCreated: ($event) => create.value = false
                      }, null, 8, ["onCreated"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "flex justify-between" }, [
                  createTextVNode(" Formations "),
                  createVNode("button", {
                    class: "btn btn-primary btn-outline",
                    onClick: ($event) => create.value = true
                  }, [
                    createVNode("i", { class: "ki-outline ki-plus" }),
                    createTextVNode(" Nouvelle Formation ")
                  ], 8, ["onClick"]),
                  createVNode(_component_Dialog, {
                    visible: create.value,
                    "onUpdate:visible": ($event) => create.value = $event,
                    modal: "",
                    "dismissable-mask": "",
                    header: "Ajouter une Formation",
                    style: { width: "50rem" },
                    breakpoints: unref(dialogBreakpoints)
                  }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$1r, {
                        onCreated: ($event) => create.value = false
                      }, null, 8, ["onCreated"])
                    ]),
                    _: 1
                  }, 8, ["visible", "onUpdate:visible", "breakpoints"])
                ])
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_CustomDataTable, {
                paginated: __props.trainings,
                title: "Liste des formations",
                filterName: "trainings",
                "show-creation-date": true
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex gap-2"${_scopeId3}>`);
                          _push4(ssrRenderComponent(_sfc_main$1G, {
                            "dialog-header": "Modifier la formation " + data.title,
                            "edit-component": _sfc_main$1r,
                            "component-props": { item: data }
                          }, null, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_sfc_main$1q, {
                            "delete-url": _ctx.route("training.destroy", data.id)
                          }, null, _parent4, _scopeId3));
                          _push4(`</div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex gap-2" }, [
                              createVNode(_sfc_main$1G, {
                                "dialog-header": "Modifier la formation " + data.title,
                                "edit-component": _sfc_main$1r,
                                "component-props": { item: data }
                              }, null, 8, ["dialog-header", "component-props"]),
                              createVNode(_sfc_main$1q, {
                                "delete-url": _ctx.route("training.destroy", data.id)
                              }, null, 8, ["delete-url"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, { header: "Infos du Job" }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex flex-col gap-0.5 max-w-[80%]"${_scopeId3}><a class="leading-none font-medium text-sm text-gray-900 hover:text-primary truncate" href="#"${_scopeId3}>`);
                          _push4(ssrRenderComponent(_component_CopyBtn, {
                            text: data.title
                          }, null, _parent4, _scopeId3));
                          _push4(` ${ssrInterpolate(data.title)}</a><span class="text-xs text-gray-700 font-normal truncate"${_scopeId3}><i class="ki-duotone ki-geolocation"${_scopeId3}></i> ${ssrInterpolate(data.location)}</span></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                              createVNode("a", {
                                class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                                href: "#"
                              }, [
                                createVNode(_component_CopyBtn, {
                                  text: data.title
                                }, null, 8, ["text"]),
                                createTextVNode(" " + toDisplayString(data.title), 1)
                              ]),
                              createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                                createVNode("i", { class: "ki-duotone ki-geolocation" }),
                                createTextVNode(" " + toDisplayString(data.location), 1)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, {
                      field: "description",
                      header: "Description"
                    }, {
                      body: withCtx(({ data, field }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div${_scopeId3}>${data[field] ?? ""}</div>`);
                        } else {
                          return [
                            createVNode("div", {
                              innerHTML: data[field]
                            }, null, 8, ["innerHTML"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, { header: "Détails" }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex flex-col gap-0.5 text-xs"${_scopeId3}><span class="text-gray-700 font-normal"${_scopeId3}><b${_scopeId3}>Date de début:</b> ${ssrInterpolate(data.start_date)}</span><span class="text-gray-700 font-normal"${_scopeId3}><b${_scopeId3}>Date de fin:</b> ${ssrInterpolate(data.end_date)}</span></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex flex-col gap-0.5 text-xs" }, [
                              createVNode("span", { class: "text-gray-700 font-normal" }, [
                                createVNode("b", null, "Date de début:"),
                                createTextVNode(" " + toDisplayString(data.start_date), 1)
                              ]),
                              createVNode("span", { class: "text-gray-700 font-normal" }, [
                                createVNode("b", null, "Date de fin:"),
                                createTextVNode(" " + toDisplayString(data.end_date), 1)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_Column, { style: { "width": "1%" } }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex gap-2" }, [
                            createVNode(_sfc_main$1G, {
                              "dialog-header": "Modifier la formation " + data.title,
                              "edit-component": _sfc_main$1r,
                              "component-props": { item: data }
                            }, null, 8, ["dialog-header", "component-props"]),
                            createVNode(_sfc_main$1q, {
                              "delete-url": _ctx.route("training.destroy", data.id)
                            }, null, 8, ["delete-url"])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, { header: "Infos du Job" }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                            createVNode("a", {
                              class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                              href: "#"
                            }, [
                              createVNode(_component_CopyBtn, {
                                text: data.title
                              }, null, 8, ["text"]),
                              createTextVNode(" " + toDisplayString(data.title), 1)
                            ]),
                            createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                              createVNode("i", { class: "ki-duotone ki-geolocation" }),
                              createTextVNode(" " + toDisplayString(data.location), 1)
                            ])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, {
                        field: "description",
                        header: "Description"
                      }, {
                        body: withCtx(({ data, field }) => [
                          createVNode("div", {
                            innerHTML: data[field]
                          }, null, 8, ["innerHTML"])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, { header: "Détails" }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex flex-col gap-0.5 text-xs" }, [
                            createVNode("span", { class: "text-gray-700 font-normal" }, [
                              createVNode("b", null, "Date de début:"),
                              createTextVNode(" " + toDisplayString(data.start_date), 1)
                            ]),
                            createVNode("span", { class: "text-gray-700 font-normal" }, [
                              createVNode("b", null, "Date de fin:"),
                              createTextVNode(" " + toDisplayString(data.end_date), 1)
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(_component_CustomDataTable, {
                  paginated: __props.trainings,
                  title: "Liste des formations",
                  filterName: "trainings",
                  "show-creation-date": true
                }, {
                  default: withCtx(() => [
                    createVNode(_component_Column, { style: { "width": "1%" } }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex gap-2" }, [
                          createVNode(_sfc_main$1G, {
                            "dialog-header": "Modifier la formation " + data.title,
                            "edit-component": _sfc_main$1r,
                            "component-props": { item: data }
                          }, null, 8, ["dialog-header", "component-props"]),
                          createVNode(_sfc_main$1q, {
                            "delete-url": _ctx.route("training.destroy", data.id)
                          }, null, 8, ["delete-url"])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, { header: "Infos du Job" }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                          createVNode("a", {
                            class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                            href: "#"
                          }, [
                            createVNode(_component_CopyBtn, {
                              text: data.title
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.title), 1)
                          ]),
                          createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                            createVNode("i", { class: "ki-duotone ki-geolocation" }),
                            createTextVNode(" " + toDisplayString(data.location), 1)
                          ])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, {
                      field: "description",
                      header: "Description"
                    }, {
                      body: withCtx(({ data, field }) => [
                        createVNode("div", {
                          innerHTML: data[field]
                        }, null, 8, ["innerHTML"])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, { header: "Détails" }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex flex-col gap-0.5 text-xs" }, [
                          createVNode("span", { class: "text-gray-700 font-normal" }, [
                            createVNode("b", null, "Date de début:"),
                            createTextVNode(" " + toDisplayString(data.start_date), 1)
                          ]),
                          createVNode("span", { class: "text-gray-700 font-normal" }, [
                            createVNode("b", null, "Date de fin:"),
                            createTextVNode(" " + toDisplayString(data.end_date), 1)
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }, 8, ["paginated"])
              ];
            }
          }),
          _: 1
        }, _parent));
      }
    };
  }
});
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/Trainings.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
const __vite_glob_0_46 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1p
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1o = {
  __name: "JobForm",
  __ssrInlineRender: true,
  props: {
    item: Object
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const props = __props;
    useToast$1();
    const form = useForm({
      _method: props.item ? "PUT" : "POST",
      title: ((_a = props.item) == null ? void 0 : _a.title) || null,
      company: ((_b = props.item) == null ? void 0 : _b.company) || null,
      location: ((_c = props.item) == null ? void 0 : _c.location) || null,
      salary_range: ((_d = props.item) == null ? void 0 : _d.salary_range) || null,
      description: ((_e = props.item) == null ? void 0 : _e.description) || null,
      requirements: ((_f = props.item) == null ? void 0 : _f.requirements) || null,
      application_link: ((_g = props.item) == null ? void 0 : _g.application_link) || null,
      image: ((_h = props.item) == null ? void 0 : _h.image) || null
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ToastError = resolveComponent("ToastError");
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_IconField = __unplugin_components_1$4;
      const _component_InputIcon = __unplugin_components_3$1;
      const _component_Editor = __unplugin_components_5$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_ToastError, {
        errors: _ctx.$page.props.errors
      }, null, _parent));
      _push(`<form><div class="flex flex-col gap-4 pt-1.5 mb-3">`);
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).title,
              "onUpdate:modelValue": ($event) => unref(form).title = $event,
              id: "title",
              required: "",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label class="required" for="title"${_scopeId}>Titre</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).title,
                "onUpdate:modelValue": ($event) => unref(form).title = $event,
                id: "title",
                required: "",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                class: "required",
                for: "title"
              }, "Titre")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).company,
              "onUpdate:modelValue": ($event) => unref(form).company = $event,
              id: "company",
              required: "",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label class="required" for="company"${_scopeId}>Entreprise</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).company,
                "onUpdate:modelValue": ($event) => unref(form).company = $event,
                id: "company",
                required: "",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                class: "required",
                for: "company"
              }, "Entreprise")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).location,
              "onUpdate:modelValue": ($event) => unref(form).location = $event,
              id: "location",
              required: "",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label class="required" for="location"${_scopeId}>Lieu ou Adresse de l&#39;entreprise</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).location,
                "onUpdate:modelValue": ($event) => unref(form).location = $event,
                id: "location",
                required: "",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", {
                class: "required",
                for: "location"
              }, "Lieu ou Adresse de l'entreprise")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).salary_range,
              "onUpdate:modelValue": ($event) => unref(form).salary_range = $event,
              id: "salary_range",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="salary_range"${_scopeId}>Salaire</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).salary_range,
                "onUpdate:modelValue": ($event) => unref(form).salary_range = $event,
                id: "salary_range",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "salary_range" }, "Salaire")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).application_link,
              "onUpdate:modelValue": ($event) => unref(form).application_link = $event,
              id: "application_link",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="application_link"${_scopeId}>Lien de candidature</label>`);
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).application_link,
                "onUpdate:modelValue": ($event) => unref(form).application_link = $event,
                id: "application_link",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "application_link" }, "Lien de candidature")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_IconField, null, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                var _a2, _b2;
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$1T, {
                    id: "image",
                    "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                    onSelected: ($event) => unref(form).image = $event
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_InputIcon, { class: "pi pi-image" }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_b2 = unref(form).image) == null ? void 0 : _b2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<label for="image"${_scopeId}>Image (facultatif)</label>`);
          } else {
            return [
              createVNode(_component_IconField, null, {
                default: withCtx(() => {
                  var _a2;
                  return [
                    createVNode(_sfc_main$1T, {
                      id: "image",
                      "image-name": ((_a2 = unref(form).image) == null ? void 0 : _a2.name) || unref(form).image,
                      onSelected: ($event) => unref(form).image = $event
                    }, null, 8, ["image-name", "onSelected"]),
                    createVNode(_component_InputIcon, { class: "pi pi-image" })
                  ];
                }),
                _: 1
              }),
              createVNode("label", { for: "image" }, "Image (facultatif)")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="grid md:grid-cols-2 gap-4"><div class="flex flex-col"><label for="description">Description</label>`);
      _push(ssrRenderComponent(_component_Editor, {
        modelValue: unref(form).description,
        "onUpdate:modelValue": ($event) => unref(form).description = $event,
        id: "description",
        editorStyle: "height: 200px"
      }, null, _parent));
      _push(`</div><div class="flex flex-col"><label for="requirements">Exigences</label>`);
      _push(ssrRenderComponent(_component_Editor, {
        modelValue: unref(form).requirements,
        "onUpdate:modelValue": ($event) => unref(form).requirements = $event,
        id: "requirements",
        editorStyle: "height: 200px"
      }, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_sfc_main$2r, {
        form: unref(form),
        "show-cancel": false
      }, null, _parent));
      _push(`</form><!--]-->`);
    };
  }
};
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/JobForm.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
const __vite_glob_0_39 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1o
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1n = /* @__PURE__ */ defineComponent({
  __name: "Jobs",
  __ssrInlineRender: true,
  props: {
    jobs: { type: Object, default: null }
  },
  setup(__props) {
    const create = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NotPermitted = resolveComponent("NotPermitted");
      const _component_Card = __unplugin_components_0$5;
      const _component_Dialog = __unplugin_components_0$2;
      const _component_CustomDataTable = resolveComponent("CustomDataTable");
      const _component_Column = __unplugin_components_2;
      const _component_CopyBtn = resolveComponent("CopyBtn");
      if (!_ctx.$page.props.can.manageJobOffers) {
        _push(ssrRenderComponent(_component_NotPermitted, _attrs, null, _parent));
      } else {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          title: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="flex justify-between"${_scopeId}> Offres d&#39;emplois <button class="btn btn-primary btn-outline"${_scopeId}><i class="ki-outline ki-plus"${_scopeId}></i> Nouveau Job </button>`);
              _push2(ssrRenderComponent(_component_Dialog, {
                visible: create.value,
                "onUpdate:visible": ($event) => create.value = $event,
                modal: "",
                "dismissable-mask": "",
                header: "Ajouter un Job",
                style: { width: "50rem" },
                breakpoints: unref(dialogBreakpoints)
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$1o, {
                      onCreated: ($event) => create.value = false
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$1o, {
                        onCreated: ($event) => create.value = false
                      }, null, 8, ["onCreated"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "flex justify-between" }, [
                  createTextVNode(" Offres d'emplois "),
                  createVNode("button", {
                    class: "btn btn-primary btn-outline",
                    onClick: ($event) => create.value = true
                  }, [
                    createVNode("i", { class: "ki-outline ki-plus" }),
                    createTextVNode(" Nouveau Job ")
                  ], 8, ["onClick"]),
                  createVNode(_component_Dialog, {
                    visible: create.value,
                    "onUpdate:visible": ($event) => create.value = $event,
                    modal: "",
                    "dismissable-mask": "",
                    header: "Ajouter un Job",
                    style: { width: "50rem" },
                    breakpoints: unref(dialogBreakpoints)
                  }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$1o, {
                        onCreated: ($event) => create.value = false
                      }, null, 8, ["onCreated"])
                    ]),
                    _: 1
                  }, 8, ["visible", "onUpdate:visible", "breakpoints"])
                ])
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_CustomDataTable, {
                paginated: __props.jobs,
                title: "Liste des jobs",
                filterName: "job_offers",
                "show-creation-date": true
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_Column, { style: { "width": "1%" } }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex gap-2"${_scopeId3}>`);
                          _push4(ssrRenderComponent(_sfc_main$1G, {
                            "dialog-header": "Modifier un job",
                            "edit-component": _sfc_main$1o,
                            "component-props": { item: data }
                          }, null, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_sfc_main$1q, {
                            "delete-url": _ctx.route("job.destroy", data.id)
                          }, null, _parent4, _scopeId3));
                          _push4(`</div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex gap-2" }, [
                              createVNode(_sfc_main$1G, {
                                "dialog-header": "Modifier un job",
                                "edit-component": _sfc_main$1o,
                                "component-props": { item: data }
                              }, null, 8, ["component-props"]),
                              createVNode(_sfc_main$1q, {
                                "delete-url": _ctx.route("job.destroy", data.id)
                              }, null, 8, ["delete-url"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, { header: "Infos du Job" }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex flex-col gap-0.5 max-w-[80%]"${_scopeId3}><a class="leading-none font-medium text-sm text-gray-900 hover:text-primary truncate" href="#"${_scopeId3}>`);
                          _push4(ssrRenderComponent(_component_CopyBtn, {
                            text: data.title
                          }, null, _parent4, _scopeId3));
                          _push4(` ${ssrInterpolate(data.title)}</a><span class="text-xs text-gray-700 font-normal truncate"${_scopeId3}><i class="ki-duotone ki-geolocation"${_scopeId3}></i> ${ssrInterpolate(data.location)}</span></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                              createVNode("a", {
                                class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                                href: "#"
                              }, [
                                createVNode(_component_CopyBtn, {
                                  text: data.title
                                }, null, 8, ["text"]),
                                createTextVNode(" " + toDisplayString(data.title), 1)
                              ]),
                              createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                                createVNode("i", { class: "ki-duotone ki-geolocation" }),
                                createTextVNode(" " + toDisplayString(data.location), 1)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, {
                      field: "description",
                      header: "Description"
                    }, {
                      body: withCtx(({ data, field }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div${_scopeId3}>${data[field] ?? ""}</div>`);
                        } else {
                          return [
                            createVNode("div", {
                              innerHTML: data[field]
                            }, null, 8, ["innerHTML"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_Column, { header: "Détails" }, {
                      body: withCtx(({ data }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex flex-col gap-0.5 max-w-[80%] text-xs"${_scopeId3}><span class="text-gray-700 font-normal truncate"${_scopeId3}><b${_scopeId3}>Salaire:</b> ${ssrInterpolate(data.salary_range)}</span><div${_scopeId3}><b${_scopeId3}>Lien:</b><a class="link text-sm truncate"${ssrRenderAttr("href", data.application_link)} target="_blank"${_scopeId3}>`);
                          _push4(ssrRenderComponent(_component_CopyBtn, {
                            text: data.application_link
                          }, null, _parent4, _scopeId3));
                          _push4(` ${ssrInterpolate(data.application_link ?? "--")}</a></div></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%] text-xs" }, [
                              createVNode("span", { class: "text-gray-700 font-normal truncate" }, [
                                createVNode("b", null, "Salaire:"),
                                createTextVNode(" " + toDisplayString(data.salary_range), 1)
                              ]),
                              createVNode("div", null, [
                                createVNode("b", null, "Lien:"),
                                createVNode("a", {
                                  class: "link text-sm truncate",
                                  href: data.application_link,
                                  target: "_blank"
                                }, [
                                  createVNode(_component_CopyBtn, {
                                    text: data.application_link
                                  }, null, 8, ["text"]),
                                  createTextVNode(" " + toDisplayString(data.application_link ?? "--"), 1)
                                ], 8, ["href"])
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_Column, { style: { "width": "1%" } }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex gap-2" }, [
                            createVNode(_sfc_main$1G, {
                              "dialog-header": "Modifier un job",
                              "edit-component": _sfc_main$1o,
                              "component-props": { item: data }
                            }, null, 8, ["component-props"]),
                            createVNode(_sfc_main$1q, {
                              "delete-url": _ctx.route("job.destroy", data.id)
                            }, null, 8, ["delete-url"])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, { header: "Infos du Job" }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                            createVNode("a", {
                              class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                              href: "#"
                            }, [
                              createVNode(_component_CopyBtn, {
                                text: data.title
                              }, null, 8, ["text"]),
                              createTextVNode(" " + toDisplayString(data.title), 1)
                            ]),
                            createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                              createVNode("i", { class: "ki-duotone ki-geolocation" }),
                              createTextVNode(" " + toDisplayString(data.location), 1)
                            ])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, {
                        field: "description",
                        header: "Description"
                      }, {
                        body: withCtx(({ data, field }) => [
                          createVNode("div", {
                            innerHTML: data[field]
                          }, null, 8, ["innerHTML"])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Column, { header: "Détails" }, {
                        body: withCtx(({ data }) => [
                          createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%] text-xs" }, [
                            createVNode("span", { class: "text-gray-700 font-normal truncate" }, [
                              createVNode("b", null, "Salaire:"),
                              createTextVNode(" " + toDisplayString(data.salary_range), 1)
                            ]),
                            createVNode("div", null, [
                              createVNode("b", null, "Lien:"),
                              createVNode("a", {
                                class: "link text-sm truncate",
                                href: data.application_link,
                                target: "_blank"
                              }, [
                                createVNode(_component_CopyBtn, {
                                  text: data.application_link
                                }, null, 8, ["text"]),
                                createTextVNode(" " + toDisplayString(data.application_link ?? "--"), 1)
                              ], 8, ["href"])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(_component_CustomDataTable, {
                  paginated: __props.jobs,
                  title: "Liste des jobs",
                  filterName: "job_offers",
                  "show-creation-date": true
                }, {
                  default: withCtx(() => [
                    createVNode(_component_Column, { style: { "width": "1%" } }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex gap-2" }, [
                          createVNode(_sfc_main$1G, {
                            "dialog-header": "Modifier un job",
                            "edit-component": _sfc_main$1o,
                            "component-props": { item: data }
                          }, null, 8, ["component-props"]),
                          createVNode(_sfc_main$1q, {
                            "delete-url": _ctx.route("job.destroy", data.id)
                          }, null, 8, ["delete-url"])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, { header: "Infos du Job" }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%]" }, [
                          createVNode("a", {
                            class: "leading-none font-medium text-sm text-gray-900 hover:text-primary truncate",
                            href: "#"
                          }, [
                            createVNode(_component_CopyBtn, {
                              text: data.title
                            }, null, 8, ["text"]),
                            createTextVNode(" " + toDisplayString(data.title), 1)
                          ]),
                          createVNode("span", { class: "text-xs text-gray-700 font-normal truncate" }, [
                            createVNode("i", { class: "ki-duotone ki-geolocation" }),
                            createTextVNode(" " + toDisplayString(data.location), 1)
                          ])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, {
                      field: "description",
                      header: "Description"
                    }, {
                      body: withCtx(({ data, field }) => [
                        createVNode("div", {
                          innerHTML: data[field]
                        }, null, 8, ["innerHTML"])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Column, { header: "Détails" }, {
                      body: withCtx(({ data }) => [
                        createVNode("div", { class: "flex flex-col gap-0.5 max-w-[80%] text-xs" }, [
                          createVNode("span", { class: "text-gray-700 font-normal truncate" }, [
                            createVNode("b", null, "Salaire:"),
                            createTextVNode(" " + toDisplayString(data.salary_range), 1)
                          ]),
                          createVNode("div", null, [
                            createVNode("b", null, "Lien:"),
                            createVNode("a", {
                              class: "link text-sm truncate",
                              href: data.application_link,
                              target: "_blank"
                            }, [
                              createVNode(_component_CopyBtn, {
                                text: data.application_link
                              }, null, 8, ["text"]),
                              createTextVNode(" " + toDisplayString(data.application_link ?? "--"), 1)
                            ], 8, ["href"])
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }, 8, ["paginated"])
              ];
            }
          }),
          _: 1
        }, _parent));
      }
    };
  }
});
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/Configuration/Jobs.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
const __vite_glob_0_40 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1n
}, Symbol.toStringTag, { value: "Module" }));
const frontendUrl = "http://localhost:3000";
const appUrl = "http://localhost";
const rapidLinlks = [
  {
    label: "Accueil du Site",
    url: frontendUrl,
    icon: "ki-filled ki-home"
  },
  {
    label: "Page Membre",
    url: appUrl,
    icon: "ki-filled ki-fasten"
  },
  {
    label: "Mon Compte",
    route: "account",
    icon: getIcon("account")
  },
  {
    label: "Pulse",
    url: "/pulse",
    icon: "ki-filled ki-pulse"
  },
  {
    label: "Telescope",
    url: "/telescope",
    icon: "ki-filled ki-chart-line-star"
  }
];
const base = [
  {
    title: "Paramètres",
    icon: "ki-setting-2",
    route: "settings",
    selected: useStorage("settings_active", 0)
  },
  {
    title: "Mon Compte",
    icon: getIcon("account"),
    route: "account",
    selected: useStorage("account_active", 0)
  }
];
function menus(routePrefix) {
  const gestion = [
    {
      title: "Tableau de bord",
      icon: "ki-home-1",
      route: routePrefix + "dashboard",
      selected: useStorage("dashboard_active", 0),
      items: [
        {
          name: "Vue d'ensemble",
          icon: "",
          component: markRaw(_sfc_main$1A)
        },
        {
          name: "Sessions Agora",
          icon: "",
          component: markRaw(_sfc_main$1P)
        },
        {
          name: "Sondages",
          icon: "",
          component: markRaw(_sfc_main$1K)
        },
        {
          name: "Foire Aux Questions",
          icon: "",
          component: markRaw(_sfc_main$1x)
        }
      ]
    },
    {
      title: "Config. <br /> du Site",
      icon: "ki-category",
      route: routePrefix + "configuration",
      selected: useStorage("configuration_active", 0),
      items: [
        {
          name: "Formations",
          component: markRaw(_sfc_main$1p)
        },
        {
          name: "Jobs",
          component: markRaw(_sfc_main$1n)
        },
        {
          name: "Départements",
          component: markRaw(_sfc_main$1s)
        },
        {
          name: "Réseaux Sociaux",
          component: markRaw(_sfc_main$1t)
        },
        {
          name: "Réglages du site",
          component: markRaw(_sfc_main$1u)
        }
      ]
    },
    {
      title: "Utilisateurs",
      icon: "ki-users",
      route: routePrefix + "users",
      selected: useStorage("users_active", 0),
      items: [
        {
          name: "Liste",
          component: markRaw(_sfc_main$1F)
        },
        {
          name: "Ajouter",
          component: markRaw(_sfc_main$1D)
        }
      ]
    },
    {
      title: "Roles",
      icon: getIcon("role"),
      route: routePrefix + "role.index",
      selected: useStorage("roles_active", 0)
    },
    {
      title: "Permissions",
      icon: getIcon("permission"),
      route: routePrefix + "permission.index",
      selected: useStorage("permissions_active", 0)
    },
    {
      title: "Config. API",
      icon: "ki-code",
      route: "api-tokens.index",
      selected: useStorage("api_active", 0)
    },
    ...base
  ];
  const user = [
    {
      title: "Tableau de bord",
      icon: "ki-element-11",
      route: routePrefix + "dashboard",
      selected: useStorage("dashboard_active", 0)
    },
    {
      title: "Entreprendre",
      icon: getIcon("entreprendre"),
      route: routePrefix + "entreprendre",
      selected: useStorage("entreprenariat_active", 0)
    },
    {
      title: "Se Former",
      icon: getIcon("formation"),
      route: routePrefix + "formation",
      selected: useStorage("trainings_active", 0)
    },
    {
      title: "Jobs & Emplois",
      icon: getIcon("emploi"),
      route: routePrefix + "emploi",
      selected: useStorage("jobs_active", 0)
    },
    {
      title: "Mon Profil",
      icon: getIcon("profil"),
      route: "profil",
      selected: useStorage("profil_active", 0)
    },
    ...base
  ];
  return routePrefix === "gestion." ? gestion : user;
}
const page = usePage();
const useSidebarStore = defineStore("sidebar", {
  state: () => ({
    isOpen: false,
    selectedMenu: useStorage("selectedMenu", "Accueil"),
    rapidLinks: rapidLinlks,
    menus: menus(page.props.routePrefix)
  }),
  getters: {
    getMenus: (state) => {
      return (search = "") => {
        return state.menus.filter((menu) => {
          var _a;
          return menu.title.toLowerCase().includes(search.toLowerCase()) || ((_a = menu.items) == null ? void 0 : _a.some(
            (item) => item.name.toLowerCase().includes(search.toLowerCase())
          ));
        });
      };
    },
    getIndex: (state) => {
      return (items, itemName) => {
        let index = items.findIndex((item) => item.name === itemName);
        if (index !== -1) return index;
        for (let i2 = 0; i2 < items.length; i2++) {
          if (items[i2].children) {
            let childIndex = items[i2].children.findIndex(
              (child) => child.name === itemName
            );
            if (childIndex !== -1) return childIndex;
          }
        }
        return null;
      };
    },
    currentMenu: (state) => {
      const menu = state.menus.find((menu2) => {
        return menu2.title === state.selectedMenu;
      });
      return menu || null;
    },
    currentComponent: (state) => (name = "") => {
      var _a;
      try {
        const menu = state.currentMenu;
        if (!menu) return null;
        let component = null;
        (_a = menu.items) == null ? void 0 : _a.forEach((item, index) => {
          var _a2;
          if (item.name === name || menu.selected === index) {
            component = item.component || null;
          }
          (_a2 = item.children) == null ? void 0 : _a2.forEach(
            (child, childIndex) => {
              if (child.name === name || menu.selected === childIndex) {
                component = child.component || null;
              }
            }
          );
        });
        return component;
      } catch (error) {
        console.error("Erreur dans currentComponent:", error);
        return null;
      }
    },
    getMenu: (state) => (search) => {
      const menu = state.menus.find(
        (menu2, index) => typeof search === "number" ? index === search : menu2.title === search
      );
      return menu || null;
    }
  },
  actions: {
    isActive(menu) {
      return route().current(menu.route) && this.selectedMenu === menu.title;
    },
    setSelected(menuSearch, itemSearch) {
      const menu = this.getMenu(menuSearch);
      if (menu) {
        const index = typeof itemSearch === "number" ? itemSearch : this.getIndex(menu.items, itemSearch);
        if (!route().current(menu.route)) {
          router.visit(route(menu.route), {
            onStart: () => {
            },
            onFinish: () => {
            }
          });
        }
        this.selectedMenu = menu.title;
        menu.selected = index || 0;
      }
    }
  }
});
const _sfc_main$1m = {
  __name: "Configuration",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PageLayout = resolveComponent("PageLayout");
      _push(ssrRenderComponent(_component_PageLayout, mergeProps({
        title: "Configuration du site",
        "component-props": {
          social_links: _ctx.$page.props.social_links,
          site_settings: _ctx.$page.props.site_settings,
          departements: _ctx.$page.props.departements,
          jobs: _ctx.$page.props.job_offers,
          trainings: _ctx.$page.props.trainings
        }
      }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Configuration.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
const __vite_glob_0_33 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1m
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1l = {
  __name: "RolesStats",
  __ssrInlineRender: true,
  props: {
    data: { type: Object }
  },
  setup(__props) {
    const itemColor = (index) => {
      switch (index) {
        case 0:
          return "#FFC107";
        case 1:
          return "#E91E63";
        case 2:
          return "#9C27B0";
        case 3:
          return "#673AB7";
        case 4:
          return "#3F51B5";
        case 5:
          return "#2196F3";
        case 6:
          return "#03A9F4";
        case 7:
          return "#00BCD4";
        case 8:
          return "#009688";
        default:
          return "gray";
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.data.length) {
        _push(`<div${ssrRenderAttrs(_attrs)}><div class="flex items-center gap-1 mb-1.5"><!--[-->`);
        ssrRenderList(__props.data, (item, index) => {
          _push(`<div style="${ssrRenderStyle(`background-color:  ${itemColor(index)}; width: ${item.percentage}%`)}" class="h-2 w-full rounded-sm"></div>`);
        });
        _push(`<!--]--></div><div class="flex items-center flex-wrap gap-4 mb-1"><!--[-->`);
        ssrRenderList(__props.data, (item, index) => {
          _push(`<div class="flex items-center gap-1.5"><i style="${ssrRenderStyle(`color: ${item.count ? itemColor(index) : "gray"}`)}" class="ki-filled ki-focus"></i><span class="text-sm font-normal text-gray-800 capitalize">${ssrInterpolate(`${item.role} (${item.count})`)}</span></div>`);
        });
        _push(`<!--]--></div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/RolesStats.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
const __vite_glob_0_59 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1l
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1k = {
  __name: "UsersStats",
  __ssrInlineRender: true,
  props: {
    data: { type: Object }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-0.5" }, _attrs))}><span class="text-sm font-normal text-gray-700"> Utilisateurs au total </span><div class="flex items-center gap-2.5"><span class="text-3xl font-semibold text-gray-900">${ssrInterpolate(__props.data.all_count)}</span><span class="${ssrRenderClass([__props.data.week_count > 0 ? "badge-success" : "", "badge badge-outline badge-sm"])}">${ssrInterpolate("+" + __props.data.week_count)} cette semaine </span></div></div>`);
    };
  }
};
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/UsersStats.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
const __vite_glob_0_66 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1k
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1j = {
  __name: "DashSide",
  __ssrInlineRender: true,
  setup(__props) {
    useUserStore();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Tag = __unplugin_components_2$4;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card h-full" }, _attrs))}><div class="card-header"><h3 class="card-title">Statistiques</h3></div><div class="card-body flex flex-col gap-4 p-5 lg:p-7.5 lg:pt-4">`);
      _push(ssrRenderComponent(_sfc_main$1k, {
        data: _ctx.$page.props.users_stats
      }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1l, {
        data: _ctx.$page.props.roles_stats
      }, null, _parent));
      _push(`<div class="border-b border-gray-300"></div><div class="grid gap-3"><!--[-->`);
      ssrRenderList(_ctx.$page.props.stats, (stat, index) => {
        _push(`<div class="flex items-center justify-between flex-wrap gap-2"><div class="flex items-center gap-1.5">`);
        if (stat.icon) {
          _push(`<i class="${ssrRenderClass(
            "text-base text-gray-500 ki-filled" + stat.icon
          )}"></i>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<span class="text-sm font-normal text-gray-900">${ssrInterpolate(index)}</span></div><div class="flex items-center text-sm font-medium text-gray-800 gap-6">`);
        _push(ssrRenderComponent(_component_Tag, {
          value: stat.value
        }, null, _parent));
        _push(`</div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    };
  }
};
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Partials/DashSide.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
const __vite_glob_0_47 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1j
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1i = {
  __name: "Dashboard",
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarStore = useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Tableau de bord" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="grid gap-5 lg:gap-7.5"${_scopeId}><div class="grid lg:grid-cols-3 gap-5 lg:gap-7.5 items-stretch"${_scopeId}><div class="lg:col-span-2"${_scopeId}>`);
            ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(unref(sidebarStore).currentComponent()), null, null), _parent2, _scopeId);
            _push2(`</div><div class="lg:col-span-1"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$1j, null, null, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "grid gap-5 lg:gap-7.5" }, [
                createVNode("div", { class: "grid lg:grid-cols-3 gap-5 lg:gap-7.5 items-stretch" }, [
                  createVNode("div", { class: "lg:col-span-2" }, [
                    (openBlock(), createBlock(resolveDynamicComponent(unref(sidebarStore).currentComponent())))
                  ]),
                  createVNode("div", { class: "lg:col-span-1" }, [
                    createVNode(_sfc_main$1j)
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Dashboard.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
const __vite_glob_0_34 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1i
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1h = {
  __name: "ConfirmsPassword",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      default: "Confirmer le mot de passe"
    },
    content: {
      type: String,
      default: "Pour des raisons de sécurité, veuillez confirmer votre mot de passe avant de continuer."
    },
    button: {
      type: String,
      default: "Confirmer"
    }
  },
  emits: ["confirmed"],
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const confirmingPassword = ref(false);
    const form = reactive({
      password: "",
      error: "",
      processing: false
    });
    const passwordInput = ref(null);
    const confirmPassword = () => {
      form.processing = true;
      axios.post(route("password.confirm"), {
        password: form.password
      }).then(() => {
        form.processing = false;
        closeModal();
        nextTick().then(() => emit("confirmed"));
      }).catch((error) => {
        form.processing = false;
        form.error = error.response.data.errors.password[0];
        passwordInput.value.focus();
      });
    };
    const closeModal = () => {
      confirmingPassword.value = false;
      form.password = "";
      form.error = "";
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<span${ssrRenderAttrs(_attrs)}><span>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</span>`);
      _push(ssrRenderComponent(_sfc_main$2H, {
        show: confirmingPassword.value,
        onClose: closeModal
      }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(__props.title)}`);
          } else {
            return [
              createTextVNode(toDisplayString(__props.title), 1)
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(__props.content)} <div class="mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2A, {
              ref_key: "passwordInput",
              ref: passwordInput,
              modelValue: form.password,
              "onUpdate:modelValue": ($event) => form.password = $event,
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Mot de passe",
              autocomplete: "current-password",
              onKeyup: confirmPassword
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: form.error,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createTextVNode(toDisplayString(__props.content) + " ", 1),
              createVNode("div", { class: "mt-4" }, [
                createVNode(_sfc_main$2A, {
                  ref_key: "passwordInput",
                  ref: passwordInput,
                  modelValue: form.password,
                  "onUpdate:modelValue": ($event) => form.password = $event,
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Mot de passe",
                  autocomplete: "current-password",
                  onKeyup: withKeys(confirmPassword, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: form.error,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2C, { onClick: closeModal }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Annuler `);
                } else {
                  return [
                    createTextVNode(" Annuler ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: ["ms-3", { "opacity-25": form.processing }],
              disabled: form.processing,
              onClick: confirmPassword
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${ssrInterpolate(__props.button)}`);
                } else {
                  return [
                    createTextVNode(toDisplayString(__props.button), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2C, { onClick: closeModal }, {
                default: withCtx(() => [
                  createTextVNode(" Annuler ")
                ]),
                _: 1
              }),
              createVNode(_sfc_main$2D, {
                class: ["ms-3", { "opacity-25": form.processing }],
                disabled: form.processing,
                onClick: confirmPassword
              }, {
                default: withCtx(() => [
                  createTextVNode(toDisplayString(__props.button), 1)
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</span>`);
    };
  }
};
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ConfirmsPassword.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
const _sfc_main$1g = {
  __name: "ValidationError",
  __ssrInlineRender: true,
  props: {
    errors: Object,
    summary: {
      type: String,
      default: "Erreur de validation"
    }
  },
  setup(__props) {
    const props = __props;
    const toast = useToast();
    const visible = ref(false);
    const showToast = () => {
      if (!visible.value) {
        toast.add({
          severity: "error",
          summary: props.summary,
          group: "toastError",
          duration: 1e3 * 60
          // 1 minute
        });
        visible.value = true;
      }
    };
    const closeToast = () => {
      toast.removeGroup("toastError");
      visible.value = false;
    };
    const onClose = () => {
      visible.value = false;
    };
    const formattedJson = computed(() => {
      return formatJsonToPrint(props.errors);
    });
    onMounted(() => {
      router.on("start", (event) => {
        if (event.detail.visit.method.toLowerCase() !== "get") closeToast();
      });
    });
    watch(
      () => props.errors,
      (newErrors) => {
        if (newErrors && Object.keys(newErrors).length > 0) showToast();
        else closeToast();
      },
      { immediate: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Toast = __unplugin_components_0$8;
      _push(ssrRenderComponent(_component_Toast, mergeProps({
        position: "bottom-center",
        group: "toastError",
        onClose,
        class: "container"
      }, _attrs), {
        message: withCtx((slotProps, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-col items-start flex-auto" data-v-a6f3d4b8${_scopeId}><div class="flex items-center gap-2" data-v-a6f3d4b8${_scopeId}><i class="pi pi-exclamation-triangle" shape="circle" data-v-a6f3d4b8${_scopeId}></i><span class="font-bold" data-v-a6f3d4b8${_scopeId}>${ssrInterpolate(slotProps.message.summary)}</span></div><div class="font-medium my-4" data-v-a6f3d4b8${_scopeId}>${formattedJson.value ?? ""}</div>`);
            {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "flex flex-col items-start flex-auto" }, [
                createVNode("div", { class: "flex items-center gap-2" }, [
                  createVNode("i", {
                    class: "pi pi-exclamation-triangle",
                    shape: "circle"
                  }),
                  createVNode("span", { class: "font-bold" }, toDisplayString(slotProps.message.summary), 1)
                ]),
                createVNode("div", {
                  class: "font-medium my-4",
                  innerHTML: formattedJson.value
                }, null, 8, ["innerHTML"]),
                createCommentVNode("", true)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/Toast/ValidationError.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
const ToastError = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["__scopeId", "data-v-a6f3d4b8"]]);
const __default__$1 = {
  name: "PermissionsRepeater"
};
const _sfc_main$1f = /* @__PURE__ */ defineComponent({
  ...__default__$1,
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null },
    roleId: { type: Number, default: null },
    showDelete: { type: Boolean, default: false },
    showSearch: { type: Boolean, default: true }
  },
  emits: ["statusChanged"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const page2 = usePage();
    const toast = useToast();
    const userStore = useUserStore();
    const confirm = useConfirm$1();
    const { deleteConfirm } = useCustomConfirm(confirm);
    const items = ref([]);
    const searchInput = ref(null);
    useForm({
      permission: null
    });
    const hasRole = (item) => {
      var _a;
      return (_a = item.roles) == null ? void 0 : _a.find((role) => role.id === props.roleId);
    };
    const search = () => {
      var _a;
      items.value = (_a = props.data) == null ? void 0 : _a.filter(
        (item) => item.name.toLowerCase().includes(searchInput.value.toLowerCase())
      );
    };
    const deleteItem = (item) => {
      router.delete(
        route(page2.props.routePrefix + "permission.destroy", item.id),
        {
          only: ["flash", "permissions"],
          onStart: () => {
            item.loading = true;
          },
          onSuccess: () => {
            toast.add({
              severity: "success",
              summary: page2.props.flash.success,
              life: 5e3
            });
          },
          onFinish: () => {
            item.loading = false;
          }
        }
      );
    };
    watch(
      () => props.data,
      (newData) => {
        items.value = newData.map((item) => ({
          ...item,
          loading: false
          // Assure la réactivité
        }));
        if (searchInput.value) {
          search();
        }
      },
      { immediate: true, deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Tag = __unplugin_components_2$4;
      const _component_Button = __unplugin_components_0$1;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(ToastError, {
        errors: _ctx.$page.props.errors
      }, null, _parent));
      if (__props.showSearch && __props.data.length) {
        _push(`<div class="flex justify-between items-center"><div class="input input-sm max-w-56"><i class="ki-filled ki-magnifier"></i><input placeholder="Rechercher une permission" type="text"${ssrRenderAttr("value", searchInput.value)}></div><span class="font-bold">${ssrInterpolate(items.value.length)} résultats </span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="grid grid-cols-1 lg:grid-cols-2 gap-5 py-2"><!--[-->`);
      ssrRenderList(items.value, (item, index) => {
        var _a;
        _push(`<div class="rounded-xl border p-4 flex items-center justify-between gap-2.5"><div class="flex items-center gap-3.5"><div class="relative size-[45px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="${ssrRenderClass([unref(getIcon)("permission"), "text-1.5xl text-gray-500"])}"></i></div></div><div class="flex flex-col gap-1"><span class="flex items-center gap-1.5 leading-none font-medium text-sm text-gray-900 uppercase">${ssrInterpolate(item.name)}</span>`);
        if (item.description) {
          _push(`<p class="text-2sm text-gray-700">${ssrInterpolate(item.description)}</p>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<div class="text-2sm text-gray-700 flex flex-col gap-1 w-full">`);
        if (item.created) {
          _push(`<span> Crée le ${ssrInterpolate(item.created)}</span>`);
        } else {
          _push(`<!---->`);
        }
        if (unref(userStore).hasPermission("view_roles")) {
          _push(`<div class="dropdown" data-dropdown="true" data-dropdown-trigger="click"><button class="dropdown-toggle text-primary"> Attribué à ${ssrInterpolate(((_a = item.roles) == null ? void 0 : _a.length) || 0)} roles <i class="ki-outline ki-down !text-sm dropdown-open:hidden"></i><i class="ki-outline ki-up !text-sm hidden dropdown-open:block"></i></button><div class="dropdown-content w-full max-w-56"><div class="p-4 text-sm text-gray-900 font-medium"> Liste des roles </div><div class="border-b border-b-gray-200"></div><div class="scrollable-y m-2 p-2 h-[150px]"><div class="flex flex-col gap-3"><!--[-->`);
          ssrRenderList(item.roles, (role) => {
            _push(ssrRenderComponent(_component_Tag, {
              key: role.id,
              severity: "secondary",
              value: role.name
            }, null, _parent));
          });
          _push(`<!--]--></div></div></div></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div></div></div>`);
        _push(ssrRenderComponent(_sfc_main$1h, {
          onConfirmed: ($event) => unref(deleteConfirm)(() => deleteItem(item))
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              if (__props.showDelete && unref(userStore).hasPermission("delete_role")) {
                _push2(ssrRenderComponent(_component_Button, {
                  type: "button",
                  icon: "ki-filled ki-trash",
                  loading: item.loading,
                  class: "btn btn-sm btn-danger btn-icon btn-outline"
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
            } else {
              return [
                __props.showDelete && unref(userStore).hasPermission("delete_role") ? (openBlock(), createBlock(_component_Button, {
                  key: 0,
                  type: "button",
                  icon: "ki-filled ki-trash",
                  loading: item.loading,
                  class: "btn btn-sm btn-danger btn-icon btn-outline"
                }, null, 8, ["loading"])) : createCommentVNode("", true)
              ];
            }
          }),
          _: 2
        }, _parent));
        if (__props.roleId) {
          _push(`<div class="switch switch-sm"><input${ssrIncludeBooleanAttr(hasRole(item)) ? " checked" : ""}${ssrIncludeBooleanAttr(item.loading) ? " disabled" : ""} name="param" type="checkbox"${ssrRenderAttr("value", hasRole(item) ? 1 : 0)}></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      });
      _push(`<!--]--></div><!--]-->`);
    };
  }
});
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Permissions/Repeater.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
const _sfc_main$1e = {
  __name: "PermissionForm",
  __ssrInlineRender: true,
  props: {
    item: { type: Object, default: null }
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b;
    const props = __props;
    usePage();
    useToast();
    const form = useForm({
      _method: props.item ? "PUT" : "POST",
      name: ((_a = props.item) == null ? void 0 : _a.name) || null,
      description: ((_b = props.item) == null ? void 0 : _b.description) || null
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      const _component_Textarea = __unplugin_components_2$3;
      const _component_FormButtonGroup = resolveComponent("FormButtonGroup");
      _push(`<form${ssrRenderAttrs(_attrs)}>`);
      _push(ssrRenderComponent(_component_FloatLabel, {
        variant: "on",
        class: "mb-4"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).name,
              "onUpdate:modelValue": ($event) => unref(form).name = $event,
              id: "name",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="name"${_scopeId}>Nom de la permission</label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "",
              message: unref(form).errors.name
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).name,
                "onUpdate:modelValue": ($event) => unref(form).name = $event,
                id: "name",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "name" }, "Nom de la permission"),
              createVNode(_component_InputError, {
                class: "",
                message: unref(form).errors.name
              }, null, 8, ["message"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, {
        variant: "on",
        class: "mb-4"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              modelValue: unref(form).description,
              "onUpdate:modelValue": ($event) => unref(form).description = $event,
              id: "description",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="description"${_scopeId}>Description de la permission (facultatif)</label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "",
              message: unref(form).errors.description
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Textarea, {
                modelValue: unref(form).description,
                "onUpdate:modelValue": ($event) => unref(form).description = $event,
                id: "description",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "description" }, "Description de la permission (facultatif)"),
              createVNode(_component_InputError, {
                class: "",
                message: unref(form).errors.description
              }, null, 8, ["message"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FormButtonGroup, {
        form: unref(form),
        onCanceled: ($event) => _ctx.$emit("canceled")
      }, null, _parent));
      _push(`</form>`);
    };
  }
};
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Permissions/PermissionForm.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
const _sfc_main$1d = /* @__PURE__ */ defineComponent({
  __name: "Pagination",
  __ssrInlineRender: true,
  props: {
    paginated: {
      type: Object,
      required: false,
      default: {}
    },
    filterName: {
      type: String,
      required: false,
      default: null
    },
    itemsPerPageDropdownEnabled: {
      type: Boolean,
      default: true
    },
    maxVisiblePages: {
      type: Number,
      required: false,
      default: 5
    }
  },
  emits: ["update:itemsPerPage"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const props = __props;
    const page2 = usePage();
    const toast = useToast$1();
    const loading = ref(false);
    const perPage = ref(props.paginated.per_page);
    const itemsCountInTable = computed({
      get() {
        var _a;
        return ((_a = page2.props.filters[props.filterName]) == null ? void 0 : _a.per_page) || props.paginated.per_page;
      },
      set(value) {
        if (props.filterName) {
          onFilter({
            per_page: value
          });
        }
        emits("update:itemsPerPage", value);
      }
    });
    const currentPage = computed(() => props.paginated.current_page);
    const from = computed(
      () => (currentPage.value - 1) * props.paginated.per_page + 1
    );
    const to = computed(
      () => Math.min(
        currentPage.value * props.paginated.per_page,
        props.paginated.total
      )
    );
    const paginationInfo = computed(
      () => `${from.value} à ${to.value} sur ${props.paginated.total}`
    );
    const filteredLinks = computed(() => {
      var _a;
      return (_a = props.paginated.links) == null ? void 0 : _a.slice(1, -1);
    });
    const visiblePageNumbers = computed(() => {
      var _a;
      let start = Math.max(
        currentPage.value - Math.floor(props.maxVisiblePages / 2),
        0
      );
      let end = start + props.maxVisiblePages;
      return (_a = filteredLinks.value) == null ? void 0 : _a.slice(start, end);
    });
    const onFilter = async (filters) => {
      router.post(
        route("filter.store"),
        {
          type: props.filterName,
          filters
        },
        {
          preserveScroll: true,
          onBefore: () => {
            loading.value = true;
          },
          onSuccess: (page22) => {
            if (filters["per_page"]) {
              perPage.value = filters["per_page"];
            }
            toast.add({
              severity: "success",
              life: 3e3,
              detail: page22.props.flash.success || "Filtres mis à jour avec succès"
            });
          },
          onFinish: () => {
            var _a, _b;
            loading.value = false;
            if (props.paginated.current_page > props.paginated.last_page) {
              const url = (_b = (_a = filteredLinks.value) == null ? void 0 : _a.at(-1)) == null ? void 0 : _b.url;
              router.get(url);
            }
          }
        }
      );
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Link = resolveComponent("Link");
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex justify-center md:justify-between flex-col md:flex-row gap-5 text-gray-600 text-2sm font-medium" }, _attrs))}><div class="flex items-center gap-2 order-2 md:order-1"> Lignes par page `);
      if (__props.itemsPerPageDropdownEnabled) {
        _push(`<select class="select select-sm w-16"${ssrIncludeBooleanAttr(loading.value || !__props.paginated.total) ? " disabled" : ""} data-datatable-size="true" name="per_page"><!--[-->`);
        ssrRenderList(unref(itemsPerPage), (perPage2, index) => {
          _push(`<option${ssrRenderAttr("value", perPage2)}${ssrIncludeBooleanAttr(Array.isArray(itemsCountInTable.value) ? ssrLooseContain(itemsCountInTable.value, perPage2) : ssrLooseEqual(itemsCountInTable.value, perPage2)) ? " selected" : ""}>${ssrInterpolate(perPage2)}</option>`);
        });
        _push(`<!--]--></select>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center gap-4 order-1 md:order-2"><span data-datatable-info="true">${ssrInterpolate(paginationInfo.value)}</span><div class="pagination"><div class="pagination">`);
      _push(ssrRenderComponent(_component_Link, {
        class: ["btn", { disabled: !__props.paginated.prev_page_url }],
        href: __props.paginated.prev_page_url ?? "",
        prefetch: "",
        "cache-for": "1m"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<i class="ki-outline ki-black-left rtl:transform rtl:rotate-180"${_scopeId}></i>`);
          } else {
            return [
              createVNode("i", { class: "ki-outline ki-black-left rtl:transform rtl:rotate-180" })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--[-->`);
      ssrRenderList(visiblePageNumbers.value, (link) => {
        _push(ssrRenderComponent(_component_Link, {
          "preserve-scroll": "",
          prefetch: "",
          "cache-for": "1m",
          key: link.label,
          href: link.url ?? "",
          class: ["btn", {
            "active disabled": link.active
          }]
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(link.label)}`);
            } else {
              return [
                createTextVNode(toDisplayString(link.label), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]-->`);
      _push(ssrRenderComponent(_component_Link, {
        class: ["btn", { disabled: !__props.paginated.next_page_url }],
        prefetch: "",
        "cache-for": "1m",
        href: __props.paginated.next_page_url ?? ""
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<i class="ki-outline ki-black-right rtl:transform rtl:rotate-180"${_scopeId}></i>`);
          } else {
            return [
              createVNode("i", { class: "ki-outline ki-black-right rtl:transform rtl:rotate-180" })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    };
  }
});
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/Pagination.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
const _sfc_main$1c = {
  __name: "SearchInput",
  __ssrInlineRender: true,
  props: {
    filterName: {
      type: String,
      required: false,
      default: null
    },
    placeholder: { type: String, default: "Rechercher..." }
  },
  emits: ["searched"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const props = __props;
    const page2 = usePage();
    const form = useForm({
      type: props.filterName,
      filters: {
        search: null
      }
    });
    watch(
      () => page2.props.filters,
      (newFilters) => {
        var _a;
        form.filters.search = ((_a = newFilters[props.filterName]) == null ? void 0 : _a.search) || null;
        if (form.filters.search) ;
      },
      { immediate: true, deep: true }
    );
    function reset() {
      form.filters.search = null;
      if (props.filterName) {
        form.patch(route("filter.reset"));
      } else {
        router.reload();
      }
      emits("searched");
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Button = __unplugin_components_0$1;
      const _component_ProgressBar = __unplugin_components_1$9;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-0.5" }, _attrs))}><div class="flex gap-2 max-w-[900px]"><div class="input input-sm"><i class="ki-filled ki-magnifier"></i><input${ssrRenderAttr("placeholder", __props.placeholder)} type="text"${ssrRenderAttr("value", unref(form).filters.search)}></div>`);
      _push(ssrRenderComponent(_component_Button, {
        class: "btn btn-sm btn-outline btn-light btn-icon",
        unstyled: "",
        onClick: reset,
        loading: unref(form).processing,
        icon: "ki-filled ki-cross"
      }, null, _parent));
      _push(`</div>`);
      if (unref(form).processing) {
        _push(ssrRenderComponent(_component_ProgressBar, {
          mode: "indeterminate",
          style: { "height": "5px" }
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SearchInput.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
const filterName$1 = "permissions";
const _sfc_main$1b = {
  __name: "Permissions",
  __ssrInlineRender: true,
  setup(__props) {
    const showForm = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      const _component_Dialog = __unplugin_components_0$2;
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Permissions" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Dialog, {
              visible: showForm.value,
              "onUpdate:visible": ($event) => showForm.value = $event,
              modal: "",
              "dismissable-mask": true,
              header: "Créer une permission",
              style: { width: "25rem" }
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="pt-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$1e, {
                    onCreated: ($event) => showForm.value = false,
                    onCanceled: ($event) => showForm.value = false
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createVNode("div", { class: "pt-2" }, [
                      createVNode(_sfc_main$1e, {
                        onCreated: ($event) => showForm.value = false,
                        onCanceled: ($event) => showForm.value = false
                      }, null, 8, ["onCreated", "onCanceled"])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="card h-full"${_scopeId}><div class="card-header gap-2"${_scopeId}><h3 class="card-title"${_scopeId}> Liste des permissions <span class="text-slate-500"${_scopeId}>${ssrInterpolate(_ctx.$page.props.permissions.total)} au total</span></h3><div class="flex gap-5"${_scopeId}><button disabled type="button" class="btn btn-sm btn-primary shrink-0"${_scopeId}><i class="ki-filled ki-plus"${_scopeId}></i> Nouvelle Permission </button></div></div><div class="card-body"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$1c, {
              "filter-name": filterName$1,
              placeholder: "Rechercher une permission"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$1f, {
              data: _ctx.$page.props.permissions.data,
              "show-delete": true,
              "show-search": false
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="card-footer"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$1d, {
              paginated: _ctx.$page.props.permissions,
              "filter-name": filterName$1
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode(_component_Dialog, {
                visible: showForm.value,
                "onUpdate:visible": ($event) => showForm.value = $event,
                modal: "",
                "dismissable-mask": true,
                header: "Créer une permission",
                style: { width: "25rem" }
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "pt-2" }, [
                    createVNode(_sfc_main$1e, {
                      onCreated: ($event) => showForm.value = false,
                      onCanceled: ($event) => showForm.value = false
                    }, null, 8, ["onCreated", "onCanceled"])
                  ])
                ]),
                _: 1
              }, 8, ["visible", "onUpdate:visible"]),
              createVNode("div", { class: "card h-full" }, [
                createVNode("div", { class: "card-header gap-2" }, [
                  createVNode("h3", { class: "card-title" }, [
                    createTextVNode(" Liste des permissions "),
                    createVNode("span", { class: "text-slate-500" }, toDisplayString(_ctx.$page.props.permissions.total) + " au total", 1)
                  ]),
                  createVNode("div", { class: "flex gap-5" }, [
                    createVNode("button", {
                      disabled: "",
                      type: "button",
                      class: "btn btn-sm btn-primary shrink-0",
                      onClick: ($event) => showForm.value = true
                    }, [
                      createVNode("i", { class: "ki-filled ki-plus" }),
                      createTextVNode(" Nouvelle Permission ")
                    ], 8, ["onClick"])
                  ])
                ]),
                createVNode("div", { class: "card-body" }, [
                  createVNode(_sfc_main$1c, {
                    "filter-name": filterName$1,
                    placeholder: "Rechercher une permission"
                  }),
                  createVNode(_sfc_main$1f, {
                    data: _ctx.$page.props.permissions.data,
                    "show-delete": true,
                    "show-search": false
                  }, null, 8, ["data"])
                ]),
                createVNode("div", { class: "card-footer" }, [
                  createVNode(_sfc_main$1d, {
                    paginated: _ctx.$page.props.permissions,
                    "filter-name": filterName$1
                  }, null, 8, ["paginated"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Permissions.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
const __vite_glob_0_67 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$1b
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1a = {
  __name: "RoleForm",
  __ssrInlineRender: true,
  props: {
    item: { type: Object, default: null }
  },
  emits: ["created", "updated", "canceled"],
  setup(__props, { emit: __emit }) {
    var _a, _b;
    const props = __props;
    usePage();
    useToast();
    const form = useForm({
      _method: props.item ? "PUT" : "POST",
      name: ((_a = props.item) == null ? void 0 : _a.name) || null,
      description: ((_b = props.item) == null ? void 0 : _b.description) || null
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_InputText = __unplugin_components_1$2;
      const _component_InputError = resolveComponent("InputError");
      const _component_Textarea = __unplugin_components_2$3;
      const _component_FormButtonGroup = resolveComponent("FormButtonGroup");
      _push(`<form${ssrRenderAttrs(_attrs)}>`);
      _push(ssrRenderComponent(_component_FloatLabel, {
        variant: "on",
        class: "mb-4"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_InputText, {
              modelValue: unref(form).name,
              "onUpdate:modelValue": ($event) => unref(form).name = $event,
              id: "name",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="name"${_scopeId}>Nom du role</label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "",
              message: unref(form).errors.name
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_InputText, {
                modelValue: unref(form).name,
                "onUpdate:modelValue": ($event) => unref(form).name = $event,
                id: "name",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "name" }, "Nom du role"),
              createVNode(_component_InputError, {
                class: "",
                message: unref(form).errors.name
              }, null, 8, ["message"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FloatLabel, {
        variant: "on",
        class: "mb-4"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Textarea, {
              modelValue: unref(form).description,
              "onUpdate:modelValue": ($event) => unref(form).description = $event,
              id: "description",
              fluid: ""
            }, null, _parent2, _scopeId));
            _push2(`<label for="description"${_scopeId}>Description du role (facultatif)</label>`);
            _push2(ssrRenderComponent(_component_InputError, {
              class: "",
              message: unref(form).errors.description
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_Textarea, {
                modelValue: unref(form).description,
                "onUpdate:modelValue": ($event) => unref(form).description = $event,
                id: "description",
                fluid: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode("label", { for: "description" }, "Description du role (facultatif)"),
              createVNode(_component_InputError, {
                class: "",
                message: unref(form).errors.description
              }, null, 8, ["message"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_FormButtonGroup, {
        form: unref(form),
        onCanceled: ($event) => _ctx.$emit("canceled")
      }, null, _parent));
      _push(`</form>`);
    };
  }
};
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Roles/RoleForm.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
const _sfc_main$19 = /* @__PURE__ */ defineComponent({
  __name: "RolePerms",
  __ssrInlineRender: true,
  props: {
    permissions: Array,
    role: Object
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const toast = useToast$1();
    const permissions = ref([]);
    const loading = ref(false);
    const form = useForm({
      permissions: {}
    });
    const updatePermissions = (status) => {
      form.transform((data) => ({
        permissions: {
          value: permissions.value.map((item) => item.id),
          status
        }
      })).put(route(page2.props.routePrefix + "role.update", props.role.id), {
        only: ["flash", "roles"],
        onSuccess: (page22) => {
          toast.add({
            severity: "success",
            summary: "Success",
            detail: page22.props.flash.success,
            life: 3e3
          });
          getPerms();
        }
      });
    };
    onMounted(() => {
      getPerms();
    });
    async function getPerms() {
      loading.value = true;
      const url = route(page2.props.routePrefix + "permission.index");
      await axios.get(url).then((response) => {
        permissions.value = response.data;
      }).catch((error) => {
        console.log("Error while fetching permissions", error);
      }).finally(() => {
        loading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Loader = resolveComponent("Loader");
      const _component_Button = __unplugin_components_0$1;
      if (loading.value) {
        _push(ssrRenderComponent(_component_Loader, _attrs, null, _parent));
      } else {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "card" }, _attrs))}><div class="card-header justify-between">`);
        _push(ssrRenderComponent(_component_Button, {
          onClick: ($event) => updatePermissions(true),
          loading: unref(form).processing,
          label: "Tout attribuer",
          class: "btn btn-primary btn-sm btn-outline"
        }, null, _parent));
        _push(ssrRenderComponent(_component_Button, {
          onClick: ($event) => updatePermissions(false),
          loading: unref(form).processing,
          label: "Tout retirer",
          class: "btn btn-danger btn-sm btn-outline"
        }, null, _parent));
        _push(`</div><div class="card-body">`);
        _push(ssrRenderComponent(_sfc_main$1f, {
          data: permissions.value,
          roleId: __props.role.id,
          "show-search": true
        }, null, _parent));
        _push(`</div></div>`);
      }
    };
  }
});
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Roles/RolePerms.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
const __default__ = {
  name: "RolesRepeater"
};
const _sfc_main$18 = /* @__PURE__ */ defineComponent({
  ...__default__,
  __ssrInlineRender: true,
  props: {
    data: { type: Object, default: null },
    showEdit: { type: Boolean, default: false },
    showSearch: { type: Boolean, default: true }
  },
  setup(__props) {
    const props = __props;
    const userStore = useUserStore();
    const items = ref([]);
    const edit = ref(false);
    const showPermissions = ref(false);
    const role = ref(null);
    const formCancel = () => {
      role.value = null;
      edit.value = false;
    };
    watch(
      () => props.data,
      (newData) => {
        items.value = newData;
      },
      { immediate: true, deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_ToastError = resolveComponent("ToastError");
      const _component_Dialog = __unplugin_components_0$2;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_ToastError, {
        errors: _ctx.$page.props.errors
      }, null, _parent));
      if (__props.showSearch && __props.data.length) {
        _push(`<div class="flex justify-between items-center"><div class="input input-sm max-w-56"><i class="ki-filled ki-magnifier"></i><input placeholder="Rechercher un role" type="text"></div><span class="font-bold">${ssrInterpolate(items.value.length)} résultats </span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-5 lg:gap-7.5 py-2">`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: showPermissions.value,
        "onUpdate:visible": ($event) => showPermissions.value = $event,
        onHide: ($event) => role.value = null,
        modal: "",
        maximizable: "",
        "dismissable-mask": true,
        header: "Permissions du role " + ((_a = role.value) == null ? void 0 : _a.name),
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$19, { role: role.value }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$19, { role: role.value }, null, 8, ["role"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Dialog, {
        visible: edit.value,
        "onUpdate:visible": ($event) => edit.value = $event,
        modal: "",
        "dismissable-mask": true,
        header: "Modifier un role",
        style: { width: "25rem" }
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="pt-2"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$1a, {
              item: role.value,
              onUpdated: formCancel,
              onCanceled: formCancel
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "pt-2" }, [
                createVNode(_sfc_main$1a, {
                  item: role.value,
                  onUpdated: formCancel,
                  onCanceled: formCancel
                }, null, 8, ["item"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--[-->`);
      ssrRenderList(items.value, (item, index) => {
        _push(`<div class="card flex flex-col gap-5 p-5 lg:p-7.5"><div class="flex items-center flex-wrap justify-between gap-1"><div class="flex items-center gap-2.5"><div class="relative size-[44px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="${ssrRenderClass([unref(getIcon)("role"), "text-1.5xl text-gray-500"])}"></i></div></div><div class="flex flex-col"><span class="text-md font-medium text-gray-900 hover:text-primary-active mb-px capitalize">${ssrInterpolate(item.name)}</span>`);
        if (unref(userStore).hasPermission("view_permissions")) {
          _push(`<span class="text-2sm hover:text-gray-700 text-primary">${ssrInterpolate(item.permissions.length)} Permissions </span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div></div><div class="menu inline-flex" data-menu="true"><div class="menu-item menu-item-dropdown" data-menu-item-offset="0, 10px" data-menu-item-placement="bottom-end" data-menu-item-placement-rtl="bottom-start" data-menu-item-toggle="dropdown" data-menu-item-trigger="click|lg:click"><button class="menu-toggle btn btn-sm btn-icon btn-light btn-clear"><i class="ki-filled ki-dots-vertical"></i></button><div class="menu-dropdown menu-default w-full max-w-[175px]" data-menu-dismiss="true">`);
        if (__props.showEdit && unref(userStore).hasPermission("edit_role")) {
          _push(`<div class="menu-item"><button class="menu-link" type="button"><span class="menu-icon"><i class="ki-filled ki-notepad-edit"></i></span><span class="menu-title"> Modifier </span></button></div>`);
        } else {
          _push(`<!---->`);
        }
        if (unref(userStore).hasPermission("view_permissions")) {
          _push(`<div class="menu-item"><button class="menu-link" type="button"><span class="menu-icon"><i class="ki-filled ki-key-square"></i></span><span class="menu-title"> Permissions </span></button></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div></div></div></div>`);
        if (item.description) {
          _push(`<p class="text-2sm text-gray-700">${ssrInterpolate(item.description)}</p>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<p class="text-2sm text-gray-800 flex flex-col gap-1"><span> Crée le ${ssrInterpolate(item.created)}</span><span>Modifié ${ssrInterpolate(item.updated)}</span></p></div>`);
      });
      _push(`<!--]--></div><!--]-->`);
    };
  }
});
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Roles/Repeater.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
const filterName = "roles";
const _sfc_main$17 = {
  __name: "Roles",
  __ssrInlineRender: true,
  setup(__props) {
    const showForm = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      const _component_Dialog = __unplugin_components_0$2;
      const _component_SearchInput = resolveComponent("SearchInput");
      const _component_Pagination = resolveComponent("Pagination");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Roles" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_Dialog, {
              visible: showForm.value,
              "onUpdate:visible": ($event) => showForm.value = $event,
              modal: "",
              "dismissable-mask": true,
              header: "Créer un role",
              style: { width: "25rem" }
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="pt-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$1a, {
                    onCreated: ($event) => showForm.value = false,
                    onCanceled: ($event) => showForm.value = false
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createVNode("div", { class: "pt-2" }, [
                      createVNode(_sfc_main$1a, {
                        onCreated: ($event) => showForm.value = false,
                        onCanceled: ($event) => showForm.value = false
                      }, null, 8, ["onCreated", "onCanceled"])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="card"${_scopeId}><div class="card-header gap-2"${_scopeId}><h3 class="card-title"${_scopeId}>Liste des roles</h3><div class="flex gap-5"${_scopeId}><button${ssrIncludeBooleanAttr(!_ctx.$page.props.can.create) ? " disabled" : ""} type="button" class="btn btn-sm btn-primary shrink-0"${_scopeId}><i class="ki-filled ki-plus"${_scopeId}></i> Nouveau Role </button></div></div><div class="card-body"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_SearchInput, {
              "filter-name": filterName,
              placeholder: "Rechercher une permission"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$18, {
              data: _ctx.$page.props.roles.data,
              "show-edit": true,
              "show-search": false
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="card-footer justify-center md:justify-end"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Pagination, {
              paginated: _ctx.$page.props.roles,
              "filter-name": filterName
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode(_component_Dialog, {
                visible: showForm.value,
                "onUpdate:visible": ($event) => showForm.value = $event,
                modal: "",
                "dismissable-mask": true,
                header: "Créer un role",
                style: { width: "25rem" }
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "pt-2" }, [
                    createVNode(_sfc_main$1a, {
                      onCreated: ($event) => showForm.value = false,
                      onCanceled: ($event) => showForm.value = false
                    }, null, 8, ["onCreated", "onCanceled"])
                  ])
                ]),
                _: 1
              }, 8, ["visible", "onUpdate:visible"]),
              createVNode("div", { class: "card" }, [
                createVNode("div", { class: "card-header gap-2" }, [
                  createVNode("h3", { class: "card-title" }, "Liste des roles"),
                  createVNode("div", { class: "flex gap-5" }, [
                    createVNode("button", {
                      disabled: !_ctx.$page.props.can.create,
                      type: "button",
                      class: "btn btn-sm btn-primary shrink-0",
                      onClick: ($event) => showForm.value = true
                    }, [
                      createVNode("i", { class: "ki-filled ki-plus" }),
                      createTextVNode(" Nouveau Role ")
                    ], 8, ["disabled", "onClick"])
                  ])
                ]),
                createVNode("div", { class: "card-body" }, [
                  createVNode(_component_SearchInput, {
                    "filter-name": filterName,
                    placeholder: "Rechercher une permission"
                  }),
                  createVNode(_sfc_main$18, {
                    data: _ctx.$page.props.roles.data,
                    "show-edit": true,
                    "show-search": false
                  }, null, 8, ["data"])
                ]),
                createVNode("div", { class: "card-footer justify-center md:justify-end" }, [
                  createVNode(_component_Pagination, {
                    paginated: _ctx.$page.props.roles,
                    "filter-name": filterName
                  }, null, 8, ["paginated"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Roles.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
const __vite_glob_0_68 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$17
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$16 = {
  __name: "Users",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_PageLayout = resolveComponent("PageLayout");
      _push(ssrRenderComponent(_component_PageLayout, mergeProps({
        title: "Utilisateurs",
        "component-props": {
          data: _ctx.$page.props.users,
          canShow: _ctx.$page.props.can.viewUsers
        }
      }, _attrs), null, _parent));
    };
  }
};
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Gestion/Users.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
const __vite_glob_0_69 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$16
}, Symbol.toStringTag, { value: "Module" }));
function useBodyClasses(classNames) {
  const classes = classNames.split(/\s+/).filter(Boolean);
  const addClasses = () => {
    classes.forEach((className) => document.body.classList.add(className));
  };
  const removeClasses = () => {
    classes.forEach(
      (className) => document.body.classList.remove(className)
    );
  };
  onMounted(addClasses);
  onUnmounted(removeClasses);
  watch(
    () => classNames,
    (newClasses, oldClasses) => {
      if (newClasses !== oldClasses) {
        removeClasses();
        classNames = newClasses;
        addClasses();
      }
    }
  );
}
const _sfc_main$15 = {};
function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    class: "sidebar-header hidden lg:flex items-center relative justify-between px-3 lg:px-6 shrink-0",
    id: "sidebar_header"
  }, _attrs))}><a class="dark:hidden" href="/"><img class="default-logo min-h-[22px] max-w-none" src="/images/logo.png"><img class="small-logo min-h-[22px]" width="32" src="/images/favicon.png"></a><a class="hidden dark:block" href="/"><img class="default-logo min-h-[22px] max-w-none" src="/images/logo.png"><img class="small-logo min-h-[22px] max-w-none" width="32" src="/images/favicon.png"></a><button class="btn btn-icon btn-icon-md size-[30px] rounded-lg border border-gray-200 dark:border-gray-300 bg-light text-gray-500 hover:text-gray-700 toggle absolute start-4/5 top-1/4" data-toggle="body" data-toggle-class="sidebar-collapse" id="sidebar_toggle"><i class="ki-filled ki-black-left-line toggle-active:rotate-180 transition-all duration-300 rtl:translate rtl:rotate-180 rtl:toggle-active:rotate-0"></i></button></div>`);
}
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/SidebarHeader.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
const SidebarHeader = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$9]]);
const _sfc_main$14 = /* @__PURE__ */ defineComponent({
  __name: "Sidebar",
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarStore = useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "sidebar dark:bg-coal-600 bg-light border-e border-e-gray-200 dark:border-e-coal-100 fixed z-20 hidden lg:flex flex-col items-stretch shrink-0",
        "data-drawer": "true",
        "data-drawer-class": "drawer drawer-start top-0 bottom-0",
        "data-drawer-enable": "true|lg:false",
        id: "sidebar"
      }, _attrs))}>`);
      _push(ssrRenderComponent(SidebarHeader, null, null, _parent));
      _push(`<div class="sidebar-content flex grow shrink-0 py-5 pe-2" id="sidebar_content"><div class="scrollable-y-hover grow shrink-0 flex ps-2 lg:ps-5 pe-1 lg:pe-3" data-scrollable="true" data-scrollable-dependencies="#sidebar_header" data-scrollable-height="auto" data-scrollable-offset="0px" data-scrollable-wrappers="#sidebar_content" id="sidebar_scrollable" style="${ssrRenderStyle({ "height": "801px" })}"><div class="menu flex flex-col grow gap-0.5" data-menu="true" data-menu-accordion-expand-all="false" id="sidebar_menu"><!--[-->`);
      ssrRenderList(unref(sidebarStore).menus, (menu, index) => {
        _push(`<!--[-->`);
        if (!menu.items) {
          _push(`<div class="${ssrRenderClass([{
            active: _ctx.route().current(menu.route)
          }, "menu-item"])}"><a class="menu-label border border-transparent gap-[10px] ps-[10px] pe-[10px] py-[6px]" href="#" tabindex="0"><span class="menu-icon items-start text-gray-500 dark:text-gray-400 w-[20px]"><i class="${ssrRenderClass([menu.icon, "ki-filled text-lg"])}"></i></span><span class="menu-title text-sm font-medium text-gray-800 menu-item-active:text-primary menu-link-hover:!text-primary hover:text-primary">${ssrInterpolate(menu.title)}</span></a></div>`);
        } else {
          _push(`<div class="${ssrRenderClass([{
            here: unref(sidebarStore).isActive(menu)
          }, "menu-item show menu-item-accordion"])}" data-menu-item-toggle="accordion" data-menu-item-trigger="click"><div class="menu-link flex items-center grow cursor-pointer border border-transparent gap-[10px] ps-[10px] pe-[10px] py-[6px]" tabindex="0"><span class="menu-icon items-start text-gray-500 dark:text-gray-400 w-[20px]"><i class="${ssrRenderClass([menu.icon, "ki-filled text-lg"])}"></i></span><span class="menu-title text-sm font-medium text-gray-800 menu-item-active:text-primary menu-link-hover:!text-primary">${ssrInterpolate(menu.title)}</span><span class="menu-arrow text-gray-400 w-[20px] shrink-0 justify-end ms-1 me-[-10px]"><i class="ki-filled ki-plus text-2xs menu-item-show:hidden"></i><i class="ki-filled ki-minus text-2xs hidden menu-item-show:inline-flex"></i></span></div><div class="menu-accordion gap-0.5 ps-[10px] relative before:absolute before:start-[20px] before:top-0 before:bottom-0 before:border-s before:border-gray-200"><!--[-->`);
          ssrRenderList(menu.items, (item, itemIndex) => {
            var _a;
            _push(`<div class="${ssrRenderClass([{
              active: unref(sidebarStore).isActive(menu) && ((_a = unref(sidebarStore).currentMenu) == null ? void 0 : _a.selected) === itemIndex
            }, "menu-item"])}"><a class="menu-link border border-transparent items-center grow menu-item-active:bg-secondary-active dark:menu-item-active:bg-coal-300 dark:menu-item-active:border-gray-100 menu-item-active:rounded-lg hover:bg-secondary-active dark:hover:bg-coal-300 dark:hover:border-gray-100 hover:rounded-lg gap-[14px] ps-[10px] pe-[10px] py-[8px]" href="#" tabindex="0"><span class="menu-bullet flex w-[6px] -start-[3px] rtl:start-0 relative before:absolute before:top-0 before:size-[6px] before:rounded-full rtl:before:translate-x-1/2 before:-translate-y-1/2 menu-item-active:before:bg-primary menu-item-hover:before:bg-primary"></span><span class="menu-title text-2sm font-normal text-gray-800 menu-item-active:text-primary menu-item-active:font-semibold menu-link-hover:!text-primary">${ssrInterpolate(item.name)}</span></a></div>`);
          });
          _push(`<!--]--></div></div>`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div></div></div>`);
    };
  }
});
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/Sidebar.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
const _sfc_main$13 = {
  __name: "NotificationRepeater",
  __ssrInlineRender: true,
  props: {
    item: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex grow gap-2.5 px-5" }, _attrs))}><div class="relative shrink-0 mt-0.5"><img alt="" class="rounded-full size-8" src="/static/media/avatars/300-5.png"><span class="size-1.5 badge badge-circle badge-success absolute top-7 end-0.5 ring-1 ring-light transform -translate-y-1/2"></span></div><div class="flex flex-col gap-3.5"><div class="flex flex-col gap-1"><div class="text-2sm font-medium mb-px"><a class="hover:text-primary-active text-gray-900 font-semibold" href="#"> Leslie Alexander </a><span class="text-gray-700"> added new tags to </span><a class="hover:text-primary-active text-primary" href="#"> Web Redesign 2024 </a></div><span class="flex items-center text-2xs font-medium text-gray-500"> 53 mins ago <span class="badge badge-circle bg-gray-500 size-1 mx-1.5"></span> ACME </span></div><div class="flex flex-wrap gap-2.5"><span class="badge badge-sm badge-info badge-outline"> Client-Request </span><span class="badge badge-sm badge-warning badge-outline"> Figma </span><span class="badge badge-sm badge-light badge-outline"> Redesign </span></div></div></div>`);
    };
  }
};
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/NotificationRepeater.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
function useNotification(toast) {
  const notify = (type, message) => {
    toast.add({
      severity: type,
      summary: type.charAt(0).toUpperCase() + type.slice(1),
      detail: message,
      life: 3e3
    });
  };
  const read = async (id) => {
    try {
      const { data } = await axios$1.post(route("notifications.read", id));
      if (data.success) notify("success", data.message);
      if (data.fail) notify("error", data.fail);
    } catch (error) {
      notify(
        "error",
        "Une erreur est survenue lors de la lecture de la notification."
      );
    }
  };
  const readAll = async () => {
    try {
      await axios$1.post(route("notifications.readAll"));
      notify(
        "success",
        "Toutes les notifications ont été marquées comme lues."
      );
    } catch (error) {
      notify(
        "error",
        "Impossible de marquer toutes les notifications comme lues."
      );
    }
  };
  const archive = async () => {
    try {
      await axios$1.post(route("notifications.archiveAll"));
      notify("success", "Les notifications ont été archivées.");
    } catch (error) {
      notify("error", "Erreur lors de l’archivage des notifications.");
    }
  };
  return {
    read,
    readAll,
    archive
  };
}
const _sfc_main$12 = {
  __name: "DropdownNotification",
  __ssrInlineRender: true,
  setup(__props) {
    const userStore = useUserStore();
    const toast = useToast$1();
    const { readAll, archive } = useNotification(toast);
    const loading = ref(false);
    const items = ref([]);
    const tabs = [
      {
        label: "Tout",
        value: "all"
      },
      {
        label: "Non Lus",
        value: "unread"
      },
      {
        label: "Lus",
        value: "read"
      }
    ];
    const currentTab = ref(tabs[0]);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_OverlayBadge = __unplugin_components_0$9;
      const _component_Loader = resolveComponent("Loader");
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "dropdown",
        "data-dropdown": "true",
        "data-dropdown-offset": "-10px, 10px",
        "data-dropdown-placement": "bottom-end",
        "data-dropdown-placement-rtl": "bottom-start",
        "data-dropdown-trigger": "click|lg:click"
      }, _attrs))}><button class="dropdown-toggle btn btn-icon btn-icon-lg size-9 rounded-md hover:bg-gray-200 dropdown-open:bg-gray-200 hover:text-primary text-gray-600">`);
      if (unref(userStore).unreadNotif) {
        _push(ssrRenderComponent(_component_OverlayBadge, { severity: "danger" }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<i class="ki-filled ki-notification-bing"${ssrRenderAttr("data-count", unref(userStore).getUnreadNotif)}${_scopeId}></i>`);
            } else {
              return [
                createVNode("i", {
                  class: "ki-filled ki-notification-bing",
                  "data-count": unref(userStore).getUnreadNotif
                }, null, 8, ["data-count"])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<i class="ki-filled ki-notification"></i>`);
      }
      _push(`</button><div class="dropdown-content light:border-gray-300 w-full max-w-[460px]"><div class="flex items-center justify-between gap-2.5 text-sm text-gray-900 font-semibold px-5 py-2.5 border-b border-b-gray-200" id="notifications_header"> Notifications <button class="btn btn-sm btn-icon btn-light btn-clear shrink-0" data-dropdown-dismiss="true"><i class="ki-filled ki-cross"></i></button></div><div class="tabs justify-between px-5 mb-2" data-tabs="true" id="notifications_tabs"><div class="flex items-center gap-5"><!--[-->`);
      ssrRenderList(tabs, (tab, index) => {
        _push(`<button class="${ssrRenderClass([{
          active: currentTab.value.value == tab.value,
          relative: tab.value == "unread"
        }, "tab"])}"${ssrRenderAttr("data-tab-toggle", `#notifications_tab_${tab.value}`)}>${ssrInterpolate(tab.label)} `);
        if (tab.value == "unread" && unref(userStore).unreadNotif) {
          _push(`<span class="badge badge-dot badge-success size-[5px] absolute top-2 rtl:start-0 end-0 transform translate-y-1/2 translate-x-full"></span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</button>`);
      });
      _push(`<!--]--></div></div><!--[-->`);
      ssrRenderList(tabs, (tab, index) => {
        _push(`<div class="${ssrRenderClass([{ hidden: tab.value != currentTab.value.value }, "grow"])}"${ssrRenderAttr("id", `notifications_tab_${tab.value}`)}><div class="flex flex-col"><div class="scrollable-y-auto" data-scrollable="true" data-scrollable-dependencies="#header" data-scrollable-max-height="auto" data-scrollable-offset="200px" style="${ssrRenderStyle({ "max-height": "366px" })}">`);
        if (loading.value) {
          _push(ssrRenderComponent(_component_Loader, null, null, _parent));
        } else {
          _push(`<div class="flex flex-col gap-5 pt-3 pb-4 divider-y divider-gray-200"><!--[-->`);
          ssrRenderList(items.value, (item, index2) => {
            _push(`<!--[-->`);
            if (index2 > 0) {
              _push(`<div class="border-b border-b-gray-200"></div>`);
            } else {
              _push(`<!---->`);
            }
            _push(ssrRenderComponent(_sfc_main$13, { item }, null, _parent));
            _push(`<!--]-->`);
          });
          _push(`<!--]--><div class="border-b border-b-gray-200"></div></div>`);
        }
        _push(`</div><div class="grid grid-cols-2 p-5 gap-2.5"${ssrRenderAttr("id", `#notifications_tab_${tab.value}_footer`)}>`);
        _push(ssrRenderComponent(_component_Button, {
          class: "btn btn-sm btn-light justify-center",
          label: "Tout archiver",
          unstyled: "",
          loading: loading.value,
          onClick: unref(archive)
        }, null, _parent));
        _push(ssrRenderComponent(_component_Button, {
          class: "btn btn-sm btn-light justify-center",
          label: "Tout marqué comme lu",
          unstyled: "",
          loading: loading.value,
          onClick: unref(readAll)
        }, null, _parent));
        _push(`</div></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    };
  }
};
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/DropdownNotification.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
const useDarkModeStore = defineStore("darkMode", () => {
  const isDark = ref(localStorage.getItem("theme") == "dark");
  document.documentElement.classList.toggle("dark", isDark.value);
  function toggleDarkMode() {
    isDark.value = !isDark.value;
    document.documentElement.classList.toggle("dark", isDark.value);
  }
  return { isDark, toggleDarkMode };
});
const useLanguageStore = defineStore("language", () => {
  const languages = [
    {
      name: "Français",
      code: "fr",
      flag: "https://keenthemes.com/static/metronic/tailwind/dist/assets/media/flags/france.svg"
    },
    {
      name: "English",
      code: "en",
      flag: "https://keenthemes.com/static/metronic/tailwind/dist/assets/media/flags/united-states.svg"
    }
    // {
    //     name: "Spanish",
    //     flag: "https://keenthemes.com/static/metronic/tailwind/dist/assets/media/flags/spain.svg",
    //     code: "es",
    // },
    // {
    //     name: "German",
    //     flag: "https://keenthemes.com/static/metronic/tailwind/dist/assets/media/flags/germany.svg",
    //     code: "de",
    // },
  ];
  const currentLanguage = useStorage("currentLanguage", languages[0]);
  function changeLanguage(item) {
    currentLanguage.value = item;
    window.location.reload();
  }
  return { currentLanguage, languages, changeLanguage };
});
const _sfc_main$11 = /* @__PURE__ */ defineComponent({
  __name: "RolesPerms",
  __ssrInlineRender: true,
  setup(__props) {
    const userStore = useUserStore();
    const loading = ref(false);
    onMounted(async () => {
      loading.value = true;
      await userStore.fetchPermissions();
      await userStore.fetchRoles();
      loading.value = false;
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Loader = resolveComponent("Loader");
      const _component_Card = __unplugin_components_0$5;
      const _component_Stepper = __unplugin_components_1$3;
      const _component_StepItem = __unplugin_components_2$2;
      const _component_Step = __unplugin_components_3;
      const _component_StepPanel = __unplugin_components_4;
      const _component_Tag = __unplugin_components_2$4;
      if (loading.value) {
        _push(ssrRenderComponent(_component_Loader, _attrs, null, _parent));
      } else if (_ctx.$page.props.app.env == "local") {
        _push(ssrRenderComponent(_component_Card, _attrs, {
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_Stepper, { value: "1" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_StepItem, { value: "1" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`Roles (${ssrInterpolate(unref(userStore).roles.length)})`);
                              } else {
                                return [
                                  createTextVNode("Roles (" + toDisplayString(unref(userStore).roles.length) + ")", 1)
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`<div class="flex flex-wrap justify-around items-center gap-2"${_scopeId4}><!--[-->`);
                                ssrRenderList(unref(userStore).roles, (item) => {
                                  _push5(ssrRenderComponent(_component_Tag, {
                                    key: item.id,
                                    severity: "secondary",
                                    value: item.name
                                  }, null, _parent5, _scopeId4));
                                });
                                _push5(`<!--]--></div>`);
                              } else {
                                return [
                                  createVNode("div", { class: "flex flex-wrap justify-around items-center gap-2" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList(unref(userStore).roles, (item) => {
                                      return openBlock(), createBlock(_component_Tag, {
                                        key: item.id,
                                        severity: "secondary",
                                        value: item.name
                                      }, null, 8, ["value"]);
                                    }), 128))
                                  ])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => [
                                createTextVNode("Roles (" + toDisplayString(unref(userStore).roles.length) + ")", 1)
                              ]),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex flex-wrap justify-around items-center gap-2" }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList(unref(userStore).roles, (item) => {
                                    return openBlock(), createBlock(_component_Tag, {
                                      key: item.id,
                                      severity: "secondary",
                                      value: item.name
                                    }, null, 8, ["value"]);
                                  }), 128))
                                ])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_StepItem, { value: "2" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(`Direct Permissions (${ssrInterpolate((_a = unref(userStore).permissions.direct) == null ? void 0 : _a.length)})`);
                              } else {
                                return [
                                  createTextVNode("Direct Permissions (" + toDisplayString((_b = unref(userStore).permissions.direct) == null ? void 0 : _b.length) + ")", 1)
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.direct || []
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1f, {
                                    "show-search": true,
                                    data: unref(userStore).permissions.direct || []
                                  }, null, 8, ["data"])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => {
                                var _a;
                                return [
                                  createTextVNode("Direct Permissions (" + toDisplayString((_a = unref(userStore).permissions.direct) == null ? void 0 : _a.length) + ")", 1)
                                ];
                              }),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.direct || []
                                }, null, 8, ["data"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_StepItem, { value: "3" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(`Permissions via Roles (${ssrInterpolate((_a = unref(userStore).permissions.via_roles) == null ? void 0 : _a.length)})`);
                              } else {
                                return [
                                  createTextVNode("Permissions via Roles (" + toDisplayString((_b = unref(userStore).permissions.via_roles) == null ? void 0 : _b.length) + ")", 1)
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.via_roles || []
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1f, {
                                    "show-search": true,
                                    data: unref(userStore).permissions.via_roles || []
                                  }, null, 8, ["data"])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => {
                                var _a;
                                return [
                                  createTextVNode("Permissions via Roles (" + toDisplayString((_a = unref(userStore).permissions.via_roles) == null ? void 0 : _a.length) + ")", 1)
                                ];
                              }),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.via_roles || []
                                }, null, 8, ["data"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(ssrRenderComponent(_component_StepItem, { value: "4" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_Step, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              var _a, _b;
                              if (_push5) {
                                _push5(`All Permissions (${ssrInterpolate((_a = unref(userStore).permissions.all) == null ? void 0 : _a.length)})`);
                              } else {
                                return [
                                  createTextVNode("All Permissions (" + toDisplayString((_b = unref(userStore).permissions.all) == null ? void 0 : _b.length) + ")", 1)
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_StepPanel, null, {
                            default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.all || []
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_sfc_main$1f, {
                                    "show-search": true,
                                    data: unref(userStore).permissions.all || []
                                  }, null, 8, ["data"])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_Step, null, {
                              default: withCtx(() => {
                                var _a;
                                return [
                                  createTextVNode("All Permissions (" + toDisplayString((_a = unref(userStore).permissions.all) == null ? void 0 : _a.length) + ")", 1)
                                ];
                              }),
                              _: 1
                            }),
                            createVNode(_component_StepPanel, null, {
                              default: withCtx(() => [
                                createVNode(_sfc_main$1f, {
                                  "show-search": true,
                                  data: unref(userStore).permissions.all || []
                                }, null, 8, ["data"])
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_StepItem, { value: "1" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => [
                              createTextVNode("Roles (" + toDisplayString(unref(userStore).roles.length) + ")", 1)
                            ]),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex flex-wrap justify-around items-center gap-2" }, [
                                (openBlock(true), createBlock(Fragment, null, renderList(unref(userStore).roles, (item) => {
                                  return openBlock(), createBlock(_component_Tag, {
                                    key: item.id,
                                    severity: "secondary",
                                    value: item.name
                                  }, null, 8, ["value"]);
                                }), 128))
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(_component_StepItem, { value: "2" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => {
                              var _a;
                              return [
                                createTextVNode("Direct Permissions (" + toDisplayString((_a = unref(userStore).permissions.direct) == null ? void 0 : _a.length) + ")", 1)
                              ];
                            }),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1f, {
                                "show-search": true,
                                data: unref(userStore).permissions.direct || []
                              }, null, 8, ["data"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(_component_StepItem, { value: "3" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => {
                              var _a;
                              return [
                                createTextVNode("Permissions via Roles (" + toDisplayString((_a = unref(userStore).permissions.via_roles) == null ? void 0 : _a.length) + ")", 1)
                              ];
                            }),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1f, {
                                "show-search": true,
                                data: unref(userStore).permissions.via_roles || []
                              }, null, 8, ["data"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }),
                      createVNode(_component_StepItem, { value: "4" }, {
                        default: withCtx(() => [
                          createVNode(_component_Step, null, {
                            default: withCtx(() => {
                              var _a;
                              return [
                                createTextVNode("All Permissions (" + toDisplayString((_a = unref(userStore).permissions.all) == null ? void 0 : _a.length) + ")", 1)
                              ];
                            }),
                            _: 1
                          }),
                          createVNode(_component_StepPanel, null, {
                            default: withCtx(() => [
                              createVNode(_sfc_main$1f, {
                                "show-search": true,
                                data: unref(userStore).permissions.all || []
                              }, null, 8, ["data"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode(_component_Stepper, { value: "1" }, {
                  default: withCtx(() => [
                    createVNode(_component_StepItem, { value: "1" }, {
                      default: withCtx(() => [
                        createVNode(_component_Step, null, {
                          default: withCtx(() => [
                            createTextVNode("Roles (" + toDisplayString(unref(userStore).roles.length) + ")", 1)
                          ]),
                          _: 1
                        }),
                        createVNode(_component_StepPanel, null, {
                          default: withCtx(() => [
                            createVNode("div", { class: "flex flex-wrap justify-around items-center gap-2" }, [
                              (openBlock(true), createBlock(Fragment, null, renderList(unref(userStore).roles, (item) => {
                                return openBlock(), createBlock(_component_Tag, {
                                  key: item.id,
                                  severity: "secondary",
                                  value: item.name
                                }, null, 8, ["value"]);
                              }), 128))
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(_component_StepItem, { value: "2" }, {
                      default: withCtx(() => [
                        createVNode(_component_Step, null, {
                          default: withCtx(() => {
                            var _a;
                            return [
                              createTextVNode("Direct Permissions (" + toDisplayString((_a = unref(userStore).permissions.direct) == null ? void 0 : _a.length) + ")", 1)
                            ];
                          }),
                          _: 1
                        }),
                        createVNode(_component_StepPanel, null, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1f, {
                              "show-search": true,
                              data: unref(userStore).permissions.direct || []
                            }, null, 8, ["data"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(_component_StepItem, { value: "3" }, {
                      default: withCtx(() => [
                        createVNode(_component_Step, null, {
                          default: withCtx(() => {
                            var _a;
                            return [
                              createTextVNode("Permissions via Roles (" + toDisplayString((_a = unref(userStore).permissions.via_roles) == null ? void 0 : _a.length) + ")", 1)
                            ];
                          }),
                          _: 1
                        }),
                        createVNode(_component_StepPanel, null, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1f, {
                              "show-search": true,
                              data: unref(userStore).permissions.via_roles || []
                            }, null, 8, ["data"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(_component_StepItem, { value: "4" }, {
                      default: withCtx(() => [
                        createVNode(_component_Step, null, {
                          default: withCtx(() => {
                            var _a;
                            return [
                              createTextVNode("All Permissions (" + toDisplayString((_a = unref(userStore).permissions.all) == null ? void 0 : _a.length) + ")", 1)
                            ];
                          }),
                          _: 1
                        }),
                        createVNode(_component_StepPanel, null, {
                          default: withCtx(() => [
                            createVNode(_sfc_main$1f, {
                              "show-search": true,
                              data: unref(userStore).permissions.all || []
                            }, null, 8, ["data"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/RolesPerms.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
const _sfc_main$10 = /* @__PURE__ */ Object.assign({
  inheritAttrs: false
}, {
  __name: "DropdownUser",
  __ssrInlineRender: true,
  props: {
    rounded: {
      type: Boolean,
      default: true
    },
    imgSize: {
      type: String,
      default: "size-9"
    }
  },
  setup(__props) {
    const { isDark, toggleDarkMode } = useDarkModeStore();
    const { currentLanguage, languages, changeLanguage } = useLanguageStore();
    const editProfilePic = ref(false);
    const showRolesPerms = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      const _component_Link = resolveComponent("Link");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: editProfilePic.value,
        "onUpdate:visible": ($event) => editProfilePic.value = $event,
        modal: "",
        "dismissable-mask": "",
        header: "Modifier la photo de profil",
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2s, {
              user: _ctx.$page.props.auth.user,
              onUpdated: ($event) => editProfilePic.value = false
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2s, {
                user: _ctx.$page.props.auth.user,
                onUpdated: ($event) => editProfilePic.value = false
              }, null, 8, ["user", "onUpdated"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Dialog, {
        visible: showRolesPerms.value,
        "onUpdate:visible": ($event) => showRolesPerms.value = $event,
        modal: "",
        "dismissable-mask": "",
        header: "Roles & Permissions",
        style: { width: "50rem" },
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$11, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$11)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="menu" data-menu="true"><div${ssrRenderAttrs(mergeProps({ class: "menu-item menu-item-dropdown" }, _ctx.$attrs))}><div class="${ssrRenderClass([{ "rounded-full": __props.rounded, "rounded-lg": !__props.rounded }, "menu-toggle btn btn-icon"])}"><img alt="" class="${ssrRenderClass([{
        imgSize: __props.imgSize,
        "rounded-full": __props.rounded,
        "rounded-lg": !__props.rounded
      }, "justify-center border border-gray-500 shrink-0"])}"${ssrRenderAttr("src", _ctx.$page.props.auth.user.profile_photo_url)}></div><div class="menu-dropdown menu-default light:border-gray-300 w-screen max-w-[250px]"><div class="relative"><button class="absolute end-3 top-0 btn btn-icon btn-sm" data-menu-dismiss="true"><i class="pi pi-times"></i></button></div><div class="flex items-center justify-between px-5 py-1.5 gap-1.5"><div class="flex items-center gap-2"><img alt="" class="size-9 rounded-full border-2 border-success"${ssrRenderAttr("src", _ctx.$page.props.auth.user.profile_photo_url)}><div class="flex flex-col gap-1.5"><span class="text-sm text-gray-800 font-semibold leading-none">${ssrInterpolate(_ctx.$page.props.auth.user.info.full_name)}</span><a class="text-xs text-gray-600 hover:text-primary font-medium leading-none" href="#">${ssrInterpolate(_ctx.$page.props.auth.user.email)}</a><span class="${ssrRenderClass([
        _ctx.$page.props.auth.user.email_verified_at ? "text-success" : "text-danger",
        "text-xs flex items-center gap-1"
      ])}"><i class="${ssrRenderClass([
        _ctx.$page.props.auth.user.email_verified_at ? "ki-verify" : "ki-shield-cross",
        "ki-filled"
      ])}"></i> email ${ssrInterpolate(_ctx.$page.props.auth.user.email_verified_at ? "vérifié" : "non vérifié")}</span></div></div></div><div class="menu-separator"></div><div class="flex flex-col"><div class="menu-item"><a class="menu-link" href="javascript:void(0);"><span class="menu-icon"><i class="${ssrRenderClass(unref(getIcon)("profile_pic"))}"></i></span><span class="menu-title"> Ma photo de profil </span></a></div><div class="menu-item">`);
      _push(ssrRenderComponent(_component_Link, {
        class: "menu-link",
        href: _ctx.route("profile.show")
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-icon"${_scopeId}><i class="${ssrRenderClass(unref(getIcon)("profile"))}"${_scopeId}></i></span><span class="menu-title"${_scopeId}> Mes informations </span>`);
          } else {
            return [
              createVNode("span", { class: "menu-icon" }, [
                createVNode("i", {
                  class: unref(getIcon)("profile")
                }, null, 2)
              ]),
              createVNode("span", { class: "menu-title" }, " Mes informations ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
      if (_ctx.$page.props.app.env = "local") {
        _push(`<div class="menu-item"><a class="menu-link" href="javascript:void(0);"><span class="menu-icon"><i class="${ssrRenderClass(unref(getIcon)("role"))}"></i></span><span class="menu-title"> Roles &amp; Permissions </span></a></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="menu-item menu-item-dropdown" data-menu-item-offset="-10px, 0" data-menu-item-placement="left-start" data-menu-item-toggle="dropdown" data-menu-item-trigger="click|lg:hover"><div class="menu-link"><span class="menu-icon"><i class="ki-filled ki-icon"></i></span><span class="menu-title"> Langage </span><div class="flex items-center gap-1.5 rounded-md border border-gray-300 text-gray-600 p-1.5 text-2xs font-medium shrink-0">${ssrInterpolate(unref(currentLanguage).name)} <img alt="" class="inline-block size-3.5 rounded-full"${ssrRenderAttr("src", unref(currentLanguage).flag)}></div></div><div class="menu-dropdown menu-default light:border-gray-300 w-full max-w-[170px]"><!--[-->`);
      ssrRenderList(unref(languages), (item, index) => {
        _push(`<div class="${ssrRenderClass([{
          active: item.code === unref(currentLanguage).code
        }, "menu-item"])}"><a class="menu-link h-10" href="#"><span class="menu-icon"><img alt="" class="inline-block size-4 rounded-full"${ssrRenderAttr("src", item.flag)}></span><span class="menu-title">${ssrInterpolate(item.name)}</span>`);
        if (item.code === unref(currentLanguage).code) {
          _push(`<span class="menu-badge"><i class="ki-solid ki-check-circle text-success text-base"></i></span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</a></div>`);
      });
      _push(`<!--]--></div></div></div><div class="menu-separator"></div><div class="flex flex-col"><div class="menu-item mb-0.5"><div class="menu-link"><span class="menu-icon"><i class="ki-filled ki-moon"></i></span><span class="menu-title"> Mode Sombre </span><label class="switch switch-sm"><input data-theme-state="dark" data-theme-toggle="true" name="check" type="checkbox" value="1"${ssrIncludeBooleanAttr(unref(isDark)) ? " checked" : ""}></label></div></div><div class="menu-item px-4 py-1.5" data-menu-dismiss="true">`);
      _push(ssrRenderComponent(_component_Link, {
        class: "btn btn-sm btn-light justify-center",
        href: _ctx.route("logout"),
        method: "post",
        as: "button"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<i class="pi pi-power-off" style="${ssrRenderStyle({ "color": "red" })}"${_scopeId}></i> Déconnexion `);
          } else {
            return [
              createVNode("i", {
                class: "pi pi-power-off",
                style: { "color": "red" }
              }),
              createTextVNode(" Déconnexion ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div><!--]-->`);
    };
  }
});
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/DropdownUser.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
const _sfc_main$$ = {};
function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    class: "menu-item",
    "data-menu-item-offset": "0,0|lg:-20px, 0",
    "data-menu-item-offset-rtl": "0,0|lg:20px, 0",
    "data-menu-item-overflow": "true",
    "data-menu-item-placement": "bottom-start",
    "data-menu-item-placement-rtl": "bottom-end",
    "data-menu-item-toggle": "dropdown",
    "data-menu-item-trigger": "click|lg:hover"
  }, _attrs))}><div class="menu-link text-sm text-gray-700 font-medium menu-link-hover:text-primary menu-item-active:text-gray-900 menu-item-show:text-primary menu-item-here:text-gray-900 menu-item-active:font-semibold menu-item-here:font-semibold"><span class="menu-title text-nowrap"> Besoin d&#39;aide ? </span><span class="menu-arrow flex lg:hidden"><i class="ki-filled ki-plus text-2xs menu-item-show:hidden"></i><i class="ki-filled ki-minus text-2xs hidden menu-item-show:inline-flex"></i></span></div><div class="menu-dropdown menu-default py-2.5 w-full max-w-[220px]" style="${ssrRenderStyle({})}"><div class="menu-item"><a class="menu-link" href="#" tabindex="0"><span class="menu-icon"><i class="ki-filled ki-questionnaire-tablet"></i></span><span class="menu-title grow-0"> Par où commencer </span></a></div><div class="menu-item"><a class="menu-link" href="#" tabindex="0"><span class="menu-icon"><i class="ki-filled ki-message-question"></i></span><span class="menu-title grow-0"> Foire aux questions </span></a></div><div class="menu-separator"></div><div class="menu-item"><a class="menu-link"${ssrRenderAttr(
    "href",
    _ctx.$page.props.config.contact_url || "mailto:" + _ctx.$page.props.config.site_email
  )} target="_blank" tabindex="0"><span class="menu-icon"><i class="ki-filled ki-message-text-2"></i></span><span class="menu-title grow-0"> Nous Contacter </span></a></div></div></div>`);
}
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/MegamenuHelp.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
const MegamenuHelp = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["ssrRender", _sfc_ssrRender$8]]);
const _sfc_main$_ = /* @__PURE__ */ defineComponent({
  __name: "Megamenu",
  __ssrInlineRender: true,
  setup(__props) {
    const page2 = usePage();
    useStorage("megamenu_active", null);
    const items = [
      {
        title: "Accueil",
        url: page2.props.app.frontend_url,
        target: "_blank"
      },
      {
        title: "Profil",
        route: "profil"
      },
      {
        title: "Compte",
        route: "account"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "hidden lg:flex lg:items-stretch",
        "data-drawer": "true",
        "data-drawer-class": "drawer drawer-start fixed z-10 top-0 bottom-0 w-full me-5 max-w-[250px] p-5 lg:p-0 overflow-auto",
        "data-drawer-enable": "true|lg:false",
        id: "mega_menu_wrapper"
      }, _attrs))}><div class="menu flex-col lg:flex-row gap-5 lg:gap-7.5" data-menu="true" id="mega_menu"><!--[-->`);
      ssrRenderList(items, (item, index) => {
        _push(`<div class="${ssrRenderClass([{
          active: item.route && _ctx.route().current(item.route)
        }, "menu-item"])}"><a class="menu-link text-nowrap text-sm text-gray-700 font-medium hover:text-primary menu-item-active:text-gray-900 menu-item-active:font-medium"${ssrRenderAttr("href", item.url || _ctx.route(item.route))}${ssrRenderAttr("target", item.target || "_self")}><span class="menu-title text-nowrap">${ssrInterpolate(item.title)}</span></a></div>`);
      });
      _push(`<!--]-->`);
      _push(ssrRenderComponent(MegamenuHelp, null, null, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/Megamenu.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
const _sfc_main$Z = /* @__PURE__ */ defineComponent({
  __name: "Header",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<header${ssrRenderAttrs(mergeProps({
        class: "header fixed top-0 z-10 start-0 end-0 flex items-stretch shrink-0 bg-[--tw-page-bg] dark:bg-[--tw-page-bg-dark]",
        "data-sticky": "true",
        "data-sticky-class": "shadow-sm",
        "data-sticky-name": "header",
        id: "header"
      }, _attrs))}><div class="container-fixed flex justify-between items-stretch lg:gap-4" id="header_container"><div class="flex gap-1 lg:hidden items-center -ms-1"><a class="shrink-0" href="/"><img class="max-h-[25px] w-full" src="/images/favicon.png"></a><div class="flex items-center"><button class="btn btn-icon btn-light btn-clear btn-sm" data-drawer-toggle="#sidebar"><i class="ki-filled ki-menu"></i></button><button class="btn btn-icon btn-light btn-clear btn-sm" data-drawer-toggle="#mega_menu_wrapper"><i class="ki-filled ki-burger-menu-2"></i></button></div></div><div class="flex items-stretch" id="mega_menu_container"><div class="flex items-stretch" data-reparent="true" data-reparent-mode="prepend|lg:prepend" data-reparent-target="body|lg:#mega_menu_container">`);
      _push(ssrRenderComponent(_sfc_main$_, null, null, _parent));
      _push(`</div></div><div class="flex items-center gap-2 lg:gap-3.5"><button class="btn btn-icon btn-icon-lg size-9 rounded-full hover:bg-primary-light hover:text-primary text-gray-500" data-modal-toggle="#search_modal"><i class="ki-filled ki-magnifier"></i></button>`);
      _push(ssrRenderComponent(_sfc_main$12, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$10, {
        "data-menu-item-offset": "20px, 10px",
        "data-menu-item-offset-rtl": "-20px, 10px",
        "data-menu-item-placement": "bottom-end",
        "data-menu-item-placement-rtl": "bottom-start",
        "data-menu-item-toggle": "dropdown",
        "data-menu-item-trigger": "click|lg:click"
      }, null, _parent));
      _push(`</div></div></header>`);
    };
  }
});
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/Header.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
const _sfc_main$Y = {
  __name: "Footer",
  __ssrInlineRender: true,
  props: {
    footerLinks: {
      type: Array,
      default: []
    }
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const links = [
      {
        title: "A Propos",
        url: "#"
      },
      {
        title: "Faq",
        url: "#"
      },
      {
        title: "Contact",
        url: "#"
      },
      {
        title: "Support",
        url: `mailto:${page2.props.config.site_email}`
      },
      ...props.footerLinks
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<footer${ssrRenderAttrs(mergeProps({ class: "footer" }, _attrs))}><div class="container-fluid"><div class="flex flex-col md:flex-row justify-center md:justify-between items-center gap-3 py-5"><div class="flex order-2 md:order-1 gap-2 font-normal text-2sm"><span class="text-gray-500">${ssrInterpolate((/* @__PURE__ */ new Date()).getFullYear())} © </span><span class="hidden md:block">Tous droits réservés. </span><a class="text-gray-600 hover:text-primary underline"${ssrRenderAttr("href", unref(page2).props.app.frontend_url || "")}>${ssrInterpolate(_ctx.$page.props.app.name)}</a></div><nav class="flex order-1 md:order-2 gap-4 font-normal text-xs text-gray-600"><!--[-->`);
      ssrRenderList(links, (link, index) => {
        _push(`<a class="hover:text-primary"${ssrRenderAttr("href", link.url)}>${ssrInterpolate(link.title)}</a>`);
      });
      _push(`<!--]--></nav></div></div></footer>`);
    };
  }
};
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/Footer.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
const _sfc_main$X = {
  __name: "Breadcrumb",
  __ssrInlineRender: true,
  props: {
    title: String,
    description: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Link = resolveComponent("Link");
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "container-fixed" }, _attrs))}><div class="flex flex-wrap items-center lg:items-end justify-between gap-5 pb-7.5"><div class="flex flex-col justify-center gap-2"><div class="flex items-center gap-2">`);
      _push(ssrRenderComponent(_component_Link, {
        href: "/",
        class: "btn btn-icon btn-sm"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<i class="ki-filled ki-home"${_scopeId}></i><span class="ml-2"${_scopeId}>/</span>`);
          } else {
            return [
              createVNode("i", { class: "ki-filled ki-home" }),
              createVNode("span", { class: "ml-2" }, "/")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<h1 class="text-xl font-medium leading-none text-gray-900">${ssrInterpolate(__props.title)}</h1></div><div class="flex items-center gap-2 text-sm font-normal text-gray-700">${ssrInterpolate(__props.description)}</div></div><div class="flex items-center gap-2.5">`);
      if (!_ctx.route().current("profil")) {
        _push(ssrRenderComponent(_component_Link, {
          class: "btn btn-sm btn-light",
          href: _ctx.route("profil")
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Mon Profil `);
            } else {
              return [
                createTextVNode(" Mon Profil ")
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/App/Breadcrumb.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
const _sfc_main$W = {
  __name: "AppLayout",
  __ssrInlineRender: true,
  props: {
    title: String,
    description: String
  },
  setup(__props) {
    useBodyClasses(`
    [--tw-page-bg:#fefefe]
    [--tw-page-bg-dark:var(--tw-coal-500)]
    demo1
    sidebar-fixed
    header-fixed
    bg-[--tw-page-bg]
    dark:bg-[--tw-page-bg-dark]
  `);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), {
        title: __props.title + " (App)"
      }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$14, null, null, _parent));
      _push(`<div class="wrapper flex grow flex-col">`);
      _push(ssrRenderComponent(_sfc_main$Z, null, null, _parent));
      _push(`<div class="grow content pt-5" id="content" role="content"><div class="container-fixed" id="content_container"></div>`);
      ssrRenderSlot(_ctx.$slots, "topContainer", {}, () => {
        _push(ssrRenderComponent(_sfc_main$X, {
          title: __props.title,
          description: __props.description
        }, null, _parent));
      }, _push, _parent);
      _push(`<div class="container-fixed">`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div></div>`);
      _push(ssrRenderComponent(_sfc_main$Y, null, null, _parent));
      _push(`</div><!--]-->`);
    };
  }
};
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AppLayout.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
const _sfc_main$V = {};
function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs) {
  _push(`<img${ssrRenderAttrs(mergeProps({
    src: "/images/logo.png",
    alt: "Logo du site"
  }, _attrs))}>`);
}
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ApplicationLogo.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
const ApplicationLogo = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["ssrRender", _sfc_ssrRender$7]]);
const _sfc_main$U = {
  __name: "Welcome",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}><div class="p-6 lg:p-8 bg-white border-b border-gray-200">`);
      _push(ssrRenderComponent(ApplicationLogo, { class: "block h-12 w-auto" }, null, _parent));
      _push(`<h1 class="mt-8 text-2xl font-medium text-gray-900"> Welcome to your Jetstream application! </h1><p class="mt-6 text-gray-500 leading-relaxed"> Laravel Jetstream provides a beautiful, robust starting point for your next Laravel application. Laravel is designed to help you build your application using a development environment that is simple, powerful, and enjoyable. We believe you should love expressing your creativity through programming, so we have spent time carefully crafting the Laravel ecosystem to be a breath of fresh air. We hope you love it. </p></div><div class="bg-gray-200 bg-opacity-25 grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8 p-6 lg:p-8"><div><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="size-6 stroke-gray-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25"></path></svg><h2 class="ms-3 text-xl font-semibold text-gray-900"><a href="https://laravel.com/docs">Documentation</a></h2></div><p class="mt-4 text-gray-500 text-sm leading-relaxed"> Laravel has wonderful documentation covering every aspect of the framework. Whether you&#39;re new to the framework or have previous experience, we recommend reading all of the documentation from beginning to end. </p><p class="mt-4 text-sm"><a href="https://laravel.com/docs" class="inline-flex items-center font-semibold text-indigo-700"> Explore the documentation <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 size-5 fill-indigo-500"><path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd"></path></svg></a></p></div><div><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="size-6 stroke-gray-400"><path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z"></path></svg><h2 class="ms-3 text-xl font-semibold text-gray-900"><a href="https://laracasts.com">Laracasts</a></h2></div><p class="mt-4 text-gray-500 text-sm leading-relaxed"> Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process. </p><p class="mt-4 text-sm"><a href="https://laracasts.com" class="inline-flex items-center font-semibold text-indigo-700"> Start watching Laracasts <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 size-5 fill-indigo-500"><path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd"></path></svg></a></p></div><div><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="size-6 stroke-gray-400"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"></path></svg><h2 class="ms-3 text-xl font-semibold text-gray-900"><a href="https://tailwindcss.com/">Tailwind</a></h2></div><p class="mt-4 text-gray-500 text-sm leading-relaxed"> Laravel Jetstream is built with Tailwind, an amazing utility first CSS framework that doesn&#39;t get in your way. You&#39;ll be amazed how easily you can build and maintain fresh, modern designs with this wonderful framework at your fingertips. </p></div><div><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="size-6 stroke-gray-400"><path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"></path></svg><h2 class="ms-3 text-xl font-semibold text-gray-900"> Authentication </h2></div><p class="mt-4 text-gray-500 text-sm leading-relaxed"> Authentication and registration views are included with Laravel Jetstream, as well as support for user email verification and resetting forgotten passwords. So, you&#39;re free to get started with what matters most: building your application. </p></div></div></div>`);
    };
  }
};
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Welcome.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
const _sfc_main$T = {
  __name: "Dashboard",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$W, mergeProps({ title: "Dashboard" }, _attrs), {
        header: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Dashboard </h2>`);
          } else {
            return [
              createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Dashboard ")
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="py-12"${_scopeId}><div class="max-w-7xl mx-auto sm:px-6 lg:px-8"${_scopeId}><div class="bg-white overflow-hidden shadow-xl sm:rounded-lg"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$U, null, null, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "py-12" }, [
                createVNode("div", { class: "max-w-7xl mx-auto sm:px-6 lg:px-8" }, [
                  createVNode("div", { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg" }, [
                    createVNode(_sfc_main$U)
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Jetstream/Dashboard.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
const __vite_glob_0_70 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$T
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$S = {
  __name: "PrivacyPolicy",
  __ssrInlineRender: true,
  props: {
    policy: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Privacy Policy" }, null, _parent));
      _push(`<div class="font-sans text-gray-900 antialiased"><div class="pt-4 bg-gray-100"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
      _push(ssrRenderComponent(_sfc_main$2b, null, null, _parent));
      _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose">${__props.policy ?? ""}</div></div></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Jetstream/PrivacyPolicy.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
const __vite_glob_0_71 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$S
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$R = {
  __name: "TermsOfService",
  __ssrInlineRender: true,
  props: {
    terms: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Terms of Service" }, null, _parent));
      _push(`<div class="font-sans text-gray-900 antialiased"><div class="pt-4 bg-gray-100"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
      _push(ssrRenderComponent(_sfc_main$2b, null, null, _parent));
      _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose">${__props.terms ?? ""}</div></div></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Jetstream/TermsOfService.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
const __vite_glob_0_72 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$R
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$Q = {
  __name: "Welcome",
  __ssrInlineRender: true,
  props: {
    canLogin: {
      type: Boolean
    },
    canRegister: {
      type: Boolean
    },
    laravelVersion: {
      type: String,
      required: true
    },
    phpVersion: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(ssrRenderComponent(unref(Head), { title: "Welcome" }, null, _parent));
      _push(`<div class="bg-gray-50 text-black/50 dark:bg-black dark:text-white/50"><img id="background" class="absolute -left-20 top-0 max-w-[877px]" src="https://laravel.com/assets/img/welcome/background.svg"><div class="relative min-h-screen flex flex-col items-center justify-center selection:bg-[#FF2D20] selection:text-white"><div class="relative w-full max-w-2xl px-6 lg:max-w-7xl"><header class="grid grid-cols-2 items-center gap-2 py-10 lg:grid-cols-3"><div class="flex lg:justify-center lg:col-start-2"><svg class="h-12 w-auto text-white lg:h-16 lg:text-[#FF2D20]" viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="currentColor"></path></svg></div>`);
      if (__props.canLogin) {
        _push(`<nav class="-mx-3 flex flex-1 justify-end">`);
        if (_ctx.$page.props.auth.user) {
          _push(ssrRenderComponent(unref(Link), {
            href: _ctx.route("dashboard"),
            class: "rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(` Dashboard `);
              } else {
                return [
                  createTextVNode(" Dashboard ")
                ];
              }
            }),
            _: 1
          }, _parent));
        } else {
          _push(`<!--[-->`);
          _push(ssrRenderComponent(unref(Link), {
            href: _ctx.route("login"),
            class: "rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(` Log in `);
              } else {
                return [
                  createTextVNode(" Log in ")
                ];
              }
            }),
            _: 1
          }, _parent));
          if (__props.canRegister) {
            _push(ssrRenderComponent(unref(Link), {
              href: _ctx.route("register"),
              class: "rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
            }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  _push2(` Register `);
                } else {
                  return [
                    createTextVNode(" Register ")
                  ];
                }
              }),
              _: 1
            }, _parent));
          } else {
            _push(`<!---->`);
          }
          _push(`<!--]-->`);
        }
        _push(`</nav>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</header><main class="mt-6"><div class="grid gap-6 lg:grid-cols-2 lg:gap-8"><a href="https://laravel.com/docs" id="docs-card" class="flex flex-col items-start gap-6 overflow-hidden rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] md:row-span-3 lg:p-10 lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"><div id="screenshot-container" class="relative flex w-full flex-1 items-stretch"><img src="https://laravel.com/assets/img/welcome/docs-light.svg" alt="Laravel documentation screenshot" class="aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.06)] dark:hidden"><img src="https://laravel.com/assets/img/welcome/docs-dark.svg" alt="Laravel documentation screenshot" class="hidden aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.25)] dark:block"><div class="absolute -bottom-16 -left-16 h-40 w-[calc(100%+8rem)] bg-gradient-to-b from-transparent via-white to-white dark:via-zinc-900 dark:to-zinc-900"></div></div><div class="relative flex items-center gap-6 lg:items-end"><div id="docs-card-content" class="flex items-start gap-6 lg:flex-col"><div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16"><svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="#FF2D20" d="M23 4a1 1 0 0 0-1.447-.894L12.224 7.77a.5.5 0 0 1-.448 0L2.447 3.106A1 1 0 0 0 1 4v13.382a1.99 1.99 0 0 0 1.105 1.79l9.448 4.728c.14.065.293.1.447.1.154-.005.306-.04.447-.105l9.453-4.724a1.99 1.99 0 0 0 1.1-1.789V4ZM3 6.023a.25.25 0 0 1 .362-.223l7.5 3.75a.251.251 0 0 1 .138.223v11.2a.25.25 0 0 1-.362.224l-7.5-3.75a.25.25 0 0 1-.138-.22V6.023Zm18 11.2a.25.25 0 0 1-.138.224l-7.5 3.75a.249.249 0 0 1-.329-.099.249.249 0 0 1-.033-.12V9.772a.251.251 0 0 1 .138-.224l7.5-3.75a.25.25 0 0 1 .362.224v11.2Z"></path><path fill="#FF2D20" d="m3.55 1.893 8 4.048a1.008 1.008 0 0 0 .9 0l8-4.048a1 1 0 0 0-.9-1.785l-7.322 3.706a.506.506 0 0 1-.452 0L4.454.108a1 1 0 0 0-.9 1.785H3.55Z"></path></svg></div><div class="pt-3 sm:pt-5 lg:pt-0"><h2 class="text-xl font-semibold text-black dark:text-white">Documentation</h2><p class="mt-4 text-sm/relaxed"> Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end. </p></div></div><svg class="size-6 shrink-0 stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"></path></svg></div></a><a href="https://laracasts.com" class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"><div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16"><svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M24 8.25a.5.5 0 0 0-.5-.5H.5a.5.5 0 0 0-.5.5v12a2.5 2.5 0 0 0 2.5 2.5h19a2.5 2.5 0 0 0 2.5-2.5v-12Zm-7.765 5.868a1.221 1.221 0 0 1 0 2.264l-6.626 2.776A1.153 1.153 0 0 1 8 18.123v-5.746a1.151 1.151 0 0 1 1.609-1.035l6.626 2.776ZM19.564 1.677a.25.25 0 0 0-.177-.427H15.6a.106.106 0 0 0-.072.03l-4.54 4.543a.25.25 0 0 0 .177.427h3.783c.027 0 .054-.01.073-.03l4.543-4.543ZM22.071 1.318a.047.047 0 0 0-.045.013l-4.492 4.492a.249.249 0 0 0 .038.385.25.25 0 0 0 .14.042h5.784a.5.5 0 0 0 .5-.5v-2a2.5 2.5 0 0 0-1.925-2.432ZM13.014 1.677a.25.25 0 0 0-.178-.427H9.101a.106.106 0 0 0-.073.03l-4.54 4.543a.25.25 0 0 0 .177.427H8.4a.106.106 0 0 0 .073-.03l4.54-4.543ZM6.513 1.677a.25.25 0 0 0-.177-.427H2.5A2.5 2.5 0 0 0 0 3.75v2a.5.5 0 0 0 .5.5h1.4a.106.106 0 0 0 .073-.03l4.54-4.543Z"></path></g></svg></div><div class="pt-3 sm:pt-5"><h2 class="text-xl font-semibold text-black dark:text-white">Laracasts</h2><p class="mt-4 text-sm/relaxed"> Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process. </p></div><svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"></path></svg></a><a href="https://laravel-news.com" class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"><div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16"><svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M8.75 4.5H5.5c-.69 0-1.25.56-1.25 1.25v4.75c0 .69.56 1.25 1.25 1.25h3.25c.69 0 1.25-.56 1.25-1.25V5.75c0-.69-.56-1.25-1.25-1.25Z"></path><path d="M24 10a3 3 0 0 0-3-3h-2V2.5a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2V20a3.5 3.5 0 0 0 3.5 3.5h17A3.5 3.5 0 0 0 24 20V10ZM3.5 21.5A1.5 1.5 0 0 1 2 20V3a.5.5 0 0 1 .5-.5h14a.5.5 0 0 1 .5.5v17c0 .295.037.588.11.874a.5.5 0 0 1-.484.625L3.5 21.5ZM22 20a1.5 1.5 0 1 1-3 0V9.5a.5.5 0 0 1 .5-.5H21a1 1 0 0 1 1 1v10Z"></path><path d="M12.751 6.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 7.3v-.5a.75.75 0 0 1 .751-.753ZM12.751 10.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 11.3v-.5a.75.75 0 0 1 .751-.753ZM4.751 14.047h10a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-10A.75.75 0 0 1 4 15.3v-.5a.75.75 0 0 1 .751-.753ZM4.75 18.047h7.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-7.5A.75.75 0 0 1 4 19.3v-.5a.75.75 0 0 1 .75-.753Z"></path></g></svg></div><div class="pt-3 sm:pt-5"><h2 class="text-xl font-semibold text-black dark:text-white">Laravel News</h2><p class="mt-4 text-sm/relaxed"> Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials. </p></div><svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"></path></svg></a><div class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800"><div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16"><svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M16.597 12.635a.247.247 0 0 0-.08-.237 2.234 2.234 0 0 1-.769-1.68c.001-.195.03-.39.084-.578a.25.25 0 0 0-.09-.267 8.8 8.8 0 0 0-4.826-1.66.25.25 0 0 0-.268.181 2.5 2.5 0 0 1-2.4 1.824.045.045 0 0 0-.045.037 12.255 12.255 0 0 0-.093 3.86.251.251 0 0 0 .208.214c2.22.366 4.367 1.08 6.362 2.118a.252.252 0 0 0 .32-.079 10.09 10.09 0 0 0 1.597-3.733ZM13.616 17.968a.25.25 0 0 0-.063-.407A19.697 19.697 0 0 0 8.91 15.98a.25.25 0 0 0-.287.325c.151.455.334.898.548 1.328.437.827.981 1.594 1.619 2.28a.249.249 0 0 0 .32.044 29.13 29.13 0 0 0 2.506-1.99ZM6.303 14.105a.25.25 0 0 0 .265-.274 13.048 13.048 0 0 1 .205-4.045.062.062 0 0 0-.022-.07 2.5 2.5 0 0 1-.777-.982.25.25 0 0 0-.271-.149 11 11 0 0 0-5.6 2.815.255.255 0 0 0-.075.163c-.008.135-.02.27-.02.406.002.8.084 1.598.246 2.381a.25.25 0 0 0 .303.193 19.924 19.924 0 0 1 5.746-.438ZM9.228 20.914a.25.25 0 0 0 .1-.393 11.53 11.53 0 0 1-1.5-2.22 12.238 12.238 0 0 1-.91-2.465.248.248 0 0 0-.22-.187 18.876 18.876 0 0 0-5.69.33.249.249 0 0 0-.179.336c.838 2.142 2.272 4 4.132 5.353a.254.254 0 0 0 .15.048c1.41-.01 2.807-.282 4.117-.802ZM18.93 12.957l-.005-.008a.25.25 0 0 0-.268-.082 2.21 2.21 0 0 1-.41.081.25.25 0 0 0-.217.2c-.582 2.66-2.127 5.35-5.75 7.843a.248.248 0 0 0-.09.299.25.25 0 0 0 .065.091 28.703 28.703 0 0 0 2.662 2.12.246.246 0 0 0 .209.037c2.579-.701 4.85-2.242 6.456-4.378a.25.25 0 0 0 .048-.189 13.51 13.51 0 0 0-2.7-6.014ZM5.702 7.058a.254.254 0 0 0 .2-.165A2.488 2.488 0 0 1 7.98 5.245a.093.093 0 0 0 .078-.062 19.734 19.734 0 0 1 3.055-4.74.25.25 0 0 0-.21-.41 12.009 12.009 0 0 0-10.4 8.558.25.25 0 0 0 .373.281 12.912 12.912 0 0 1 4.826-1.814ZM10.773 22.052a.25.25 0 0 0-.28-.046c-.758.356-1.55.635-2.365.833a.25.25 0 0 0-.022.48c1.252.43 2.568.65 3.893.65.1 0 .2 0 .3-.008a.25.25 0 0 0 .147-.444c-.526-.424-1.1-.917-1.673-1.465ZM18.744 8.436a.249.249 0 0 0 .15.228 2.246 2.246 0 0 1 1.352 2.054c0 .337-.08.67-.23.972a.25.25 0 0 0 .042.28l.007.009a15.016 15.016 0 0 1 2.52 4.6.25.25 0 0 0 .37.132.25.25 0 0 0 .096-.114c.623-1.464.944-3.039.945-4.63a12.005 12.005 0 0 0-5.78-10.258.25.25 0 0 0-.373.274c.547 2.109.85 4.274.901 6.453ZM9.61 5.38a.25.25 0 0 0 .08.31c.34.24.616.561.8.935a.25.25 0 0 0 .3.127.631.631 0 0 1 .206-.034c2.054.078 4.036.772 5.69 1.991a.251.251 0 0 0 .267.024c.046-.024.093-.047.141-.067a.25.25 0 0 0 .151-.23A29.98 29.98 0 0 0 15.957.764a.25.25 0 0 0-.16-.164 11.924 11.924 0 0 0-2.21-.518.252.252 0 0 0-.215.076A22.456 22.456 0 0 0 9.61 5.38Z"></path></g></svg></div><div class="pt-3 sm:pt-5"><h2 class="text-xl font-semibold text-black dark:text-white">Vibrant Ecosystem</h2><p class="mt-4 text-sm/relaxed"> Laravel&#39;s robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white dark:focus-visible:ring-[#FF2D20]">Forge</a>, <a href="https://vapor.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Vapor</a>, <a href="https://nova.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Nova</a>, and <a href="https://envoyer.io" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Echo</a>, <a href="https://laravel.com/docs/horizon" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Telescope</a>, and more. </p></div></div></div></main><footer class="py-16 text-center text-sm text-black dark:text-white/70"> Laravel v${ssrInterpolate(__props.laravelVersion)} (PHP v${ssrInterpolate(__props.phpVersion)}) </footer></div></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Jetstream/Welcome.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
const __vite_glob_0_73 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$Q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$P = /* @__PURE__ */ defineComponent({
  __name: "Overview",
  __ssrInlineRender: true,
  props: {
    user: { type: Object, required: true }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "bg-center bg-cover bg-no-repeat hero-bg" }, _attrs))}><div class="flex flex-col items-center gap-2 lg:gap-3.5 py-4 lg:pt-5 lg:pb-10"><img class="rounded-full border-3 border-success size-[100px] shrink-0"${ssrRenderAttr("src", __props.user.profile_photo_url)} alt="Photo de profil"><div class="flex items-center gap-1.5"><div class="text-lg leading-5 font-semibold text-gray-900">${ssrInterpolate(__props.user.info.full_name)}</div><svg class="text-primary" fill="none" height="16" viewBox="0 0 15 16" width="15" xmlns="http://www.w3.org/2000/svg"><path d="M14.5425 6.89749L13.5 5.83999C13.4273 5.76877 13.3699 5.6835 13.3312 5.58937C13.2925 5.49525 13.2734 5.39424 13.275 5.29249V3.79249C13.274 3.58699 13.2324 3.38371 13.1527 3.19432C13.0729 3.00494 12.9565 2.83318 12.8101 2.68892C12.6638 2.54466 12.4904 2.43073 12.2998 2.35369C12.1093 2.27665 11.9055 2.23801 11.7 2.23999H10.2C10.0982 2.24159 9.99722 2.22247 9.9031 2.18378C9.80898 2.1451 9.72371 2.08767 9.65249 2.01499L8.60249 0.957487C8.30998 0.665289 7.91344 0.50116 7.49999 0.50116C7.08654 0.50116 6.68999 0.665289 6.39749 0.957487L5.33999 1.99999C5.26876 2.07267 5.1835 2.1301 5.08937 2.16879C4.99525 2.20747 4.89424 2.22659 4.79249 2.22499H3.29249C3.08699 2.22597 2.88371 2.26754 2.69432 2.34731C2.50494 2.42709 2.33318 2.54349 2.18892 2.68985C2.04466 2.8362 1.93073 3.00961 1.85369 3.20013C1.77665 3.39064 1.73801 3.5945 1.73999 3.79999V5.29999C1.74159 5.40174 1.72247 5.50275 1.68378 5.59687C1.6451 5.691 1.58767 5.77627 1.51499 5.84749L0.457487 6.89749C0.165289 7.19 0.00115967 7.58654 0.00115967 7.99999C0.00115967 8.41344 0.165289 8.80998 0.457487 9.10249L1.49999 10.16C1.57267 10.2312 1.6301 10.3165 1.66878 10.4106C1.70747 10.5047 1.72659 10.6057 1.72499 10.7075V12.2075C1.72597 12.413 1.76754 12.6163 1.84731 12.8056C1.92709 12.995 2.04349 13.1668 2.18985 13.3111C2.3362 13.4553 2.50961 13.5692 2.70013 13.6463C2.89064 13.7233 3.0945 13.762 3.29999 13.76H4.79999C4.90174 13.7584 5.00275 13.7775 5.09687 13.8162C5.191 13.8549 5.27627 13.9123 5.34749 13.985L6.40499 15.0425C6.69749 15.3347 7.09404 15.4988 7.50749 15.4988C7.92094 15.4988 8.31748 15.3347 8.60999 15.0425L9.65999 14C9.73121 13.9273 9.81647 13.8699 9.9106 13.8312C10.0047 13.7925 10.1057 13.7734 10.2075 13.775H11.7075C12.1212 13.775 12.518 13.6106 12.8106 13.3181C13.1031 13.0255 13.2675 12.6287 13.2675 12.215V10.715C13.2659 10.6132 13.285 10.5122 13.3237 10.4181C13.3624 10.324 13.4198 10.2387 13.4925 10.1675L14.55 9.10999C14.6953 8.96452 14.8104 8.79176 14.8887 8.60164C14.9671 8.41152 15.007 8.20779 15.0063 8.00218C15.0056 7.79656 14.9643 7.59311 14.8847 7.40353C14.8051 7.21394 14.6888 7.04197 14.5425 6.89749ZM10.635 6.64999L6.95249 10.25C6.90055 10.3026 6.83864 10.3443 6.77038 10.3726C6.70212 10.4009 6.62889 10.4153 6.55499 10.415C6.48062 10.4139 6.40719 10.3982 6.33896 10.3685C6.27073 10.3389 6.20905 10.2961 6.15749 10.2425L4.37999 8.44249C4.32532 8.39044 4.28169 8.32793 4.25169 8.25867C4.22169 8.18941 4.20593 8.11482 4.20536 8.03934C4.20479 7.96387 4.21941 7.88905 4.24836 7.81934C4.27731 7.74964 4.31999 7.68647 4.37387 7.63361C4.42774 7.58074 4.4917 7.53926 4.56194 7.51163C4.63218 7.484 4.70726 7.47079 4.78271 7.47278C4.85816 7.47478 4.93244 7.49194 5.00112 7.52324C5.0698 7.55454 5.13148 7.59935 5.18249 7.65499L6.56249 9.05749L9.84749 5.84749C9.95296 5.74215 10.0959 5.68298 10.245 5.68298C10.394 5.68298 10.537 5.74215 10.6425 5.84749C10.6953 5.90034 10.737 5.96318 10.7653 6.03234C10.7935 6.1015 10.8077 6.1756 10.807 6.25031C10.8063 6.32502 10.7908 6.39884 10.7612 6.46746C10.7317 6.53608 10.6888 6.59813 10.635 6.64999Z" fill="currentColor"></path></svg></div><div class="flex flex-wrap justify-center gap-1 lg:gap-4.5 text-sm"><div class="flex gap-1.25 items-center"><i class="ki-filled ki-user text-gray-500 text-sm"></i><span class="text-gray-600 font-medium">${ssrInterpolate(__props.user.info.profession)}</span></div><div class="flex gap-1.25 items-center"><i class="ki-filled ki-geolocation text-gray-500 text-sm"></i><span class="text-gray-600 font-medium">${ssrInterpolate(`${__props.user.info.ville}, ${__props.user.info.quartier}`)}</span></div><div class="flex gap-1.25 items-center"><i class="ki-filled ki-sms text-gray-500 text-sm"></i><a class="text-gray-600 font-medium hover:text-primary"${ssrRenderAttr("href", `mailto:${__props.user.email}`)}>${ssrInterpolate(__props.user.email)}</a></div></div></div></div>`);
    };
  }
});
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Member/Partials/Overview.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
const __vite_glob_0_74 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$P
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$O = /* @__PURE__ */ defineComponent({
  __name: "ProfileTabs",
  __ssrInlineRender: true,
  props: {
    user: { type: Object, required: true }
  },
  setup(__props) {
    const tabs = [
      {
        title: "Formations",
        url: ""
      },
      {
        title: "Curriculum Vitae (CV)",
        url: ""
      },
      {
        title: "Jobs",
        url: ""
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center flex-wrap md:flex-nowrap lg:items-end justify-between border-b border-b-gray-200 dark:border-b-coal-100 gap-3 lg:gap-6 mb-5 lg:mb-10" }, _attrs))}><div class="grid"><div class="scrollable-x-auto"><div class="menu gap-3" data-menu="true"><!--[-->`);
      ssrRenderList(tabs, (tab, index) => {
        _push(`<div class="menu-item border-b-2 border-b-transparent menu-item-active:border-b-primary menu-item-here:border-b-primary"><a class="menu-link gap-1.5 pb-2 lg:pb-4 px-2" href="#"><span class="menu-title text-nowrap font-medium text-sm text-gray-700 menu-item-active:text-primary menu-item-active:font-semibold menu-item-here:text-primary menu-item-here:font-semibold menu-item-show:text-primary menu-link-hover:text-primary">${ssrInterpolate(tab.title)}</span></a></div>`);
      });
      _push(`<!--]--></div></div></div><div class="flex items-center justify-end grow lg:grow-0 lg:pb-4 gap-2.5 mb-3 lg:mb-0"><button class="btn btn-sm btn-primary"><i class="ki-filled ki-user-edit"></i> Modifier </button><div class="dropdown" data-dropdown="true" data-dropdown-placement="bottom-end" data-dropdown-placement-rtl="bottom-start" data-dropdown-trigger="click"><button class="dropdown-toggle btn btn-sm btn-icon btn-light"><i class="ki-filled ki-dots-vertical"></i></button><div class="dropdown-content menu-default w-full max-w-[220px] hidden" style="${ssrRenderStyle({ "opacity": "0" })}"><div class="menu-item" data-dropdown-dismiss="true"><button class="menu-link" data-modal-toggle="#share_profile_modal"><span class="menu-icon"><i class="ki-filled ki-coffee"></i></span><span class="menu-title"> Share Profile </span></button></div><div class="menu-item" data-dropdown-dismiss="true"><a class="menu-link" data-modal-toggle="#give_award_modal" href="#"><span class="menu-icon"><i class="ki-filled ki-award"></i></span><span class="menu-title"> Give Award </span></a></div><div class="menu-item" data-dropdown-dismiss="true"><button class="menu-link"><span class="menu-icon"><i class="ki-filled ki-chart-line"></i></span><span class="menu-title"> Stay Updated </span><label class="switch switch-sm"><input name="check" type="checkbox" value="1"></label></button></div><div class="menu-item" data-dropdown-dismiss="true"><button class="menu-link" data-modal-toggle="#report_user_modal"><span class="menu-icon"><i class="ki-filled ki-information-2"></i></span><span class="menu-title"> Report User </span></button></div></div></div></div></div>`);
    };
  }
});
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Member/Partials/ProfileTabs.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
const __vite_glob_0_75 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$O
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$N = {
  __name: "Profile",
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Mon Profil Membre" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$P, {
              user: _ctx.$page.props.auth.user
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$O, {
              user: _ctx.$page.props.auth.user
            }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$P, {
                user: _ctx.$page.props.auth.user
              }, null, 8, ["user"]),
              createVNode(_sfc_main$O, {
                user: _ctx.$page.props.auth.user
              }, null, 8, ["user"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Member/Profile.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
const __vite_glob_0_76 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$N
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$M = {
  __name: "DeleteUserForm",
  __ssrInlineRender: true,
  setup(__props) {
    const confirmingUserDeletion = ref(false);
    const passwordInput = ref(null);
    const form = useForm({
      password: ""
    });
    const confirmUserDeletion = () => {
      confirmingUserDeletion.value = true;
      setTimeout(() => passwordInput.value.focus(), 250);
    };
    const deleteUser = () => {
      form.delete(route("current-user.destroy"), {
        preserveScroll: true,
        onSuccess: () => closeModal(),
        onError: () => passwordInput.value.focus(),
        onFinish: () => form.reset()
      });
    };
    const closeModal = () => {
      confirmingUserDeletion.value = false;
      form.reset();
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Delete Account `);
          } else {
            return [
              createTextVNode(" Delete Account ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Permanently delete your account. `);
          } else {
            return [
              createTextVNode(" Permanently delete your account. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2I, { onClick: confirmUserDeletion }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Delete Account `);
                } else {
                  return [
                    createTextVNode(" Delete Account ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_sfc_main$2H, {
              show: confirmingUserDeletion.value,
              onClose: closeModal
            }, {
              title: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Delete Account `);
                } else {
                  return [
                    createTextVNode(" Delete Account ")
                  ];
                }
              }),
              content: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$2A, {
                    ref_key: "passwordInput",
                    ref: passwordInput,
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    autocomplete: "current-password",
                    onKeyup: deleteUser
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(form).errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_sfc_main$2A, {
                        ref_key: "passwordInput",
                        ref: passwordInput,
                        modelValue: unref(form).password,
                        "onUpdate:modelValue": ($event) => unref(form).password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        autocomplete: "current-password",
                        onKeyup: withKeys(deleteUser, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode(_sfc_main$2F, {
                        message: unref(form).errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ];
                }
              }),
              footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Cancel `);
                      } else {
                        return [
                          createTextVNode(" Cancel ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2I, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: deleteUser
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Delete Account `);
                      } else {
                        return [
                          createTextVNode(" Delete Account ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$2C, { onClick: closeModal }, {
                      default: withCtx(() => [
                        createTextVNode(" Cancel ")
                      ]),
                      _: 1
                    }),
                    createVNode(_sfc_main$2I, {
                      class: ["ms-3", { "opacity-25": unref(form).processing }],
                      disabled: unref(form).processing,
                      onClick: deleteUser
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Delete Account ")
                      ]),
                      _: 1
                    }, 8, ["class", "disabled"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. "),
              createVNode("div", { class: "mt-5" }, [
                createVNode(_sfc_main$2I, { onClick: confirmUserDeletion }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Account ")
                  ]),
                  _: 1
                })
              ]),
              createVNode(_sfc_main$2H, {
                show: confirmingUserDeletion.value,
                onClose: closeModal
              }, {
                title: withCtx(() => [
                  createTextVNode(" Delete Account ")
                ]),
                content: withCtx(() => [
                  createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_sfc_main$2A, {
                      ref_key: "passwordInput",
                      ref: passwordInput,
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      autocomplete: "current-password",
                      onKeyup: withKeys(deleteUser, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(form).errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ]),
                footer: withCtx(() => [
                  createVNode(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$2I, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: deleteUser
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Delete Account ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["show"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Partials/DeleteUserForm.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
const __vite_glob_0_77 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$M
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$L = {
  __name: "LogoutOtherBrowserSessionsForm",
  __ssrInlineRender: true,
  props: {
    sessions: Array
  },
  setup(__props) {
    const confirmingLogout = ref(false);
    const passwordInput = ref(null);
    const form = useForm({
      password: ""
    });
    const confirmLogout = () => {
      confirmingLogout.value = true;
      setTimeout(() => passwordInput.value.focus(), 250);
    };
    const logoutOtherBrowserSessions = () => {
      form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => closeModal(),
        onError: () => passwordInput.value.focus(),
        onFinish: () => form.reset()
      });
    };
    const closeModal = () => {
      confirmingLogout.value = false;
      form.reset();
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Browser Sessions `);
          } else {
            return [
              createTextVNode(" Browser Sessions ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Manage and log out your active sessions on other browsers and devices. `);
          } else {
            return [
              createTextVNode(" Manage and log out your active sessions on other browsers and devices. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. </div>`);
            if (__props.sessions.length > 0) {
              _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.sessions, (session, i2) => {
                _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
                if (session.agent.is_desktop) {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"${_scopeId}></path></svg>`);
                } else {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"${_scopeId}></path></svg>`);
                }
                _push2(`</div><div class="ms-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${ssrInterpolate(session.agent.platform ? session.agent.platform : "Unknown")} - ${ssrInterpolate(session.agent.browser ? session.agent.browser : "Unknown")}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${ssrInterpolate(session.ip_address)}, `);
                if (session.is_current_device) {
                  _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
                } else {
                  _push2(`<span${_scopeId}>Last active ${ssrInterpolate(session.last_active)}</span>`);
                }
                _push2(`</div></div></div></div>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex items-center mt-5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, { onClick: confirmLogout }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out Other Browser Sessions `);
                } else {
                  return [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "ms-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Done. `);
                } else {
                  return [
                    createTextVNode(" Done. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_sfc_main$2H, {
              show: confirmingLogout.value,
              onClose: closeModal
            }, {
              title: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out Other Browser Sessions `);
                } else {
                  return [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ];
                }
              }),
              content: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$2A, {
                    ref_key: "passwordInput",
                    ref: passwordInput,
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    autocomplete: "current-password",
                    onKeyup: logoutOtherBrowserSessions
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(form).errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_sfc_main$2A, {
                        ref_key: "passwordInput",
                        ref: passwordInput,
                        modelValue: unref(form).password,
                        "onUpdate:modelValue": ($event) => unref(form).password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        autocomplete: "current-password",
                        onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode(_sfc_main$2F, {
                        message: unref(form).errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ];
                }
              }),
              footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Cancel `);
                      } else {
                        return [
                          createTextVNode(" Cancel ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Log Out Other Browser Sessions `);
                      } else {
                        return [
                          createTextVNode(" Log Out Other Browser Sessions ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$2C, { onClick: closeModal }, {
                      default: withCtx(() => [
                        createTextVNode(" Cancel ")
                      ]),
                      _: 1
                    }),
                    createVNode(_sfc_main$2D, {
                      class: ["ms-3", { "opacity-25": unref(form).processing }],
                      disabled: unref(form).processing,
                      onClick: logoutOtherBrowserSessions
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Log Out Other Browser Sessions ")
                      ]),
                      _: 1
                    }, 8, ["class", "disabled"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. "),
              __props.sessions.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-5 space-y-6"
              }, [
                (openBlock(true), createBlock(Fragment, null, renderList(__props.sessions, (session, i2) => {
                  return openBlock(), createBlock("div", {
                    key: i2,
                    class: "flex items-center"
                  }, [
                    createVNode("div", null, [
                      session.agent.is_desktop ? (openBlock(), createBlock("svg", {
                        key: 0,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
                        })
                      ])) : (openBlock(), createBlock("svg", {
                        key: 1,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"
                        })
                      ]))
                    ]),
                    createVNode("div", { class: "ms-3" }, [
                      createVNode("div", { class: "text-sm text-gray-600" }, toDisplayString(session.agent.platform ? session.agent.platform : "Unknown") + " - " + toDisplayString(session.agent.browser ? session.agent.browser : "Unknown"), 1),
                      createVNode("div", null, [
                        createVNode("div", { class: "text-xs text-gray-500" }, [
                          createTextVNode(toDisplayString(session.ip_address) + ", ", 1),
                          session.is_current_device ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: "text-green-500 font-semibold"
                          }, "This device")) : (openBlock(), createBlock("span", { key: 1 }, "Last active " + toDisplayString(session.last_active), 1))
                        ])
                      ])
                    ])
                  ]);
                }), 128))
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "flex items-center mt-5" }, [
                createVNode(_sfc_main$2D, { onClick: confirmLogout }, {
                  default: withCtx(() => [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ]),
                  _: 1
                }),
                createVNode(_sfc_main$2O, {
                  on: unref(form).recentlySuccessful,
                  class: "ms-3"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Done. ")
                  ]),
                  _: 1
                }, 8, ["on"])
              ]),
              createVNode(_sfc_main$2H, {
                show: confirmingLogout.value,
                onClose: closeModal
              }, {
                title: withCtx(() => [
                  createTextVNode(" Log Out Other Browser Sessions ")
                ]),
                content: withCtx(() => [
                  createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_sfc_main$2A, {
                      ref_key: "passwordInput",
                      ref: passwordInput,
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      autocomplete: "current-password",
                      onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(form).errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ]),
                footer: withCtx(() => [
                  createVNode(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Log Out Other Browser Sessions ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["show"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Partials/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
const __vite_glob_0_78 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$L
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$K = {
  __name: "TwoFactorAuthenticationForm",
  __ssrInlineRender: true,
  props: {
    requiresConfirmation: Boolean
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const enabling = ref(false);
    const confirming = ref(false);
    const disabling = ref(false);
    const qrCode = ref(null);
    const setupKey = ref(null);
    const recoveryCodes = ref([]);
    const confirmationForm = useForm({
      code: ""
    });
    const twoFactorEnabled = computed(
      () => {
        var _a;
        return !enabling.value && ((_a = page2.props.auth.user) == null ? void 0 : _a.two_factor_enabled);
      }
    );
    watch(twoFactorEnabled, () => {
      if (!twoFactorEnabled.value) {
        confirmationForm.reset();
        confirmationForm.clearErrors();
      }
    });
    const enableTwoFactorAuthentication = () => {
      enabling.value = true;
      router.post(route("two-factor.enable"), {}, {
        preserveScroll: true,
        onSuccess: () => Promise.all([
          showQrCode(),
          showSetupKey(),
          showRecoveryCodes()
        ]),
        onFinish: () => {
          enabling.value = false;
          confirming.value = props.requiresConfirmation;
        }
      });
    };
    const showQrCode = () => {
      return axios.get(route("two-factor.qr-code")).then((response) => {
        qrCode.value = response.data.svg;
      });
    };
    const showSetupKey = () => {
      return axios.get(route("two-factor.secret-key")).then((response) => {
        setupKey.value = response.data.secretKey;
      });
    };
    const showRecoveryCodes = () => {
      return axios.get(route("two-factor.recovery-codes")).then((response) => {
        recoveryCodes.value = response.data;
      });
    };
    const confirmTwoFactorAuthentication = () => {
      confirmationForm.post(route("two-factor.confirm"), {
        errorBag: "confirmTwoFactorAuthentication",
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => {
          confirming.value = false;
          qrCode.value = null;
          setupKey.value = null;
        }
      });
    };
    const regenerateRecoveryCodes = () => {
      axios.post(route("two-factor.recovery-codes")).then(() => showRecoveryCodes());
    };
    const disableTwoFactorAuthentication = () => {
      disabling.value = true;
      router.delete(route("two-factor.disable"), {
        preserveScroll: true,
        onSuccess: () => {
          disabling.value = false;
          confirming.value = false;
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Two Factor Authentication `);
          } else {
            return [
              createTextVNode(" Two Factor Authentication ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Add additional security to your account using two factor authentication. `);
          } else {
            return [
              createTextVNode(" Add additional security to your account using two factor authentication. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (twoFactorEnabled.value && !confirming.value) {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have enabled two factor authentication. </h3>`);
            } else if (twoFactorEnabled.value && confirming.value) {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> Finish enabling two factor authentication. </h3>`);
            } else {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have not enabled two factor authentication. </h3>`);
            }
            _push2(`<div class="mt-3 max-w-xl text-sm text-gray-600"${_scopeId}><p${_scopeId}> When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone&#39;s Google Authenticator application. </p></div>`);
            if (twoFactorEnabled.value) {
              _push2(`<div${_scopeId}>`);
              if (qrCode.value) {
                _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}>`);
                if (confirming.value) {
                  _push2(`<p class="font-semibold"${_scopeId}> To finish enabling two factor authentication, scan the following QR code using your phone&#39;s authenticator application or enter the setup key and provide the generated OTP code. </p>`);
                } else {
                  _push2(`<p${_scopeId}> Two factor authentication is now enabled. Scan the following QR code using your phone&#39;s authenticator application or enter the setup key. </p>`);
                }
                _push2(`</div><div class="mt-4 p-2 inline-block bg-white"${_scopeId}>${qrCode.value ?? ""}</div>`);
                if (setupKey.value) {
                  _push2(`<div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Setup Key: <span${_scopeId}>${setupKey.value ?? ""}</span></p></div>`);
                } else {
                  _push2(`<!---->`);
                }
                if (confirming.value) {
                  _push2(`<div class="mt-4"${_scopeId}>`);
                  _push2(ssrRenderComponent(_sfc_main$2E, {
                    for: "code",
                    value: "Code"
                  }, null, _parent2, _scopeId));
                  _push2(ssrRenderComponent(_sfc_main$2A, {
                    id: "code",
                    modelValue: unref(confirmationForm).code,
                    "onUpdate:modelValue": ($event) => unref(confirmationForm).code = $event,
                    type: "text",
                    name: "code",
                    class: "block mt-1 w-1/2",
                    inputmode: "numeric",
                    autofocus: "",
                    autocomplete: "one-time-code",
                    onKeyup: confirmTwoFactorAuthentication
                  }, null, _parent2, _scopeId));
                  _push2(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(confirmationForm).errors.code,
                    class: "mt-2"
                  }, null, _parent2, _scopeId));
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`</div>`);
              } else {
                _push2(`<!---->`);
              }
              if (recoveryCodes.value.length > 0 && !confirming.value) {
                _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. </p></div><div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg"${_scopeId}><!--[-->`);
                ssrRenderList(recoveryCodes.value, (code) => {
                  _push2(`<div${_scopeId}>${ssrInterpolate(code)}</div>`);
                });
                _push2(`<!--]--></div></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="mt-5"${_scopeId}>`);
            if (!twoFactorEnabled.value) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: enableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$2D, {
                      type: "button",
                      class: { "opacity-25": enabling.value },
                      disabled: enabling.value
                    }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(` Enable `);
                        } else {
                          return [
                            createTextVNode(" Enable ")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$2D, {
                        type: "button",
                        class: { "opacity-25": enabling.value },
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Enable ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: confirmTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2D, {
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Confirm `);
                          } else {
                            return [
                              createTextVNode(" Confirm ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2D, {
                        key: 0,
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Confirm ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: regenerateRecoveryCodes }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (recoveryCodes.value.length > 0 && !confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, { class: "me-3" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Regenerate Recovery Codes `);
                          } else {
                            return [
                              createTextVNode(" Regenerate Recovery Codes ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Regenerate Recovery Codes ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: showRecoveryCodes }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (recoveryCodes.value.length === 0 && !confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, { class: "me-3" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Show Recovery Codes `);
                          } else {
                            return [
                              createTextVNode(" Show Recovery Codes ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      recoveryCodes.value.length === 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Show Recovery Codes ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, {
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Cancel `);
                          } else {
                            return [
                              createTextVNode(" Cancel ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Cancel ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (!confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2I, {
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Disable `);
                          } else {
                            return [
                              createTextVNode(" Disable ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      !confirming.value ? (openBlock(), createBlock(_sfc_main$2I, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Disable ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            }
            _push2(`</div>`);
          } else {
            return [
              twoFactorEnabled.value && !confirming.value ? (openBlock(), createBlock("h3", {
                key: 0,
                class: "text-lg font-medium text-gray-900"
              }, " You have enabled two factor authentication. ")) : twoFactorEnabled.value && confirming.value ? (openBlock(), createBlock("h3", {
                key: 1,
                class: "text-lg font-medium text-gray-900"
              }, " Finish enabling two factor authentication. ")) : (openBlock(), createBlock("h3", {
                key: 2,
                class: "text-lg font-medium text-gray-900"
              }, " You have not enabled two factor authentication. ")),
              createVNode("div", { class: "mt-3 max-w-xl text-sm text-gray-600" }, [
                createVNode("p", null, " When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application. ")
              ]),
              twoFactorEnabled.value ? (openBlock(), createBlock("div", { key: 3 }, [
                qrCode.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                    confirming.value ? (openBlock(), createBlock("p", {
                      key: 0,
                      class: "font-semibold"
                    }, " To finish enabling two factor authentication, scan the following QR code using your phone's authenticator application or enter the setup key and provide the generated OTP code. ")) : (openBlock(), createBlock("p", { key: 1 }, " Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application or enter the setup key. "))
                  ]),
                  createVNode("div", {
                    class: "mt-4 p-2 inline-block bg-white",
                    innerHTML: qrCode.value
                  }, null, 8, ["innerHTML"]),
                  setupKey.value ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "mt-4 max-w-xl text-sm text-gray-600"
                  }, [
                    createVNode("p", { class: "font-semibold" }, [
                      createTextVNode(" Setup Key: "),
                      createVNode("span", { innerHTML: setupKey.value }, null, 8, ["innerHTML"])
                    ])
                  ])) : createCommentVNode("", true),
                  confirming.value ? (openBlock(), createBlock("div", {
                    key: 1,
                    class: "mt-4"
                  }, [
                    createVNode(_sfc_main$2E, {
                      for: "code",
                      value: "Code"
                    }),
                    createVNode(_sfc_main$2A, {
                      id: "code",
                      modelValue: unref(confirmationForm).code,
                      "onUpdate:modelValue": ($event) => unref(confirmationForm).code = $event,
                      type: "text",
                      name: "code",
                      class: "block mt-1 w-1/2",
                      inputmode: "numeric",
                      autofocus: "",
                      autocomplete: "one-time-code",
                      onKeyup: withKeys(confirmTwoFactorAuthentication, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(confirmationForm).errors.code,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])) : createCommentVNode("", true)
                ])) : createCommentVNode("", true),
                recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                    createVNode("p", { class: "font-semibold" }, " Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. ")
                  ]),
                  createVNode("div", { class: "grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList(recoveryCodes.value, (code) => {
                      return openBlock(), createBlock("div", { key: code }, toDisplayString(code), 1);
                    }), 128))
                  ])
                ])) : createCommentVNode("", true)
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "mt-5" }, [
                !twoFactorEnabled.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_sfc_main$1h, { onConfirmed: enableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$2D, {
                        type: "button",
                        class: { "opacity-25": enabling.value },
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Enable ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])
                    ]),
                    _: 1
                  })
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode(_sfc_main$1h, { onConfirmed: confirmTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2D, {
                        key: 0,
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Confirm ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: regenerateRecoveryCodes }, {
                    default: withCtx(() => [
                      recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Regenerate Recovery Codes ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: showRecoveryCodes }, {
                    default: withCtx(() => [
                      recoveryCodes.value.length === 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Show Recovery Codes ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Cancel ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      !confirming.value ? (openBlock(), createBlock(_sfc_main$2I, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Disable ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  })
                ]))
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Partials/TwoFactorAuthenticationForm.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
const __vite_glob_0_79 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$K
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$J = {
  __name: "UpdatePasswordForm",
  __ssrInlineRender: true,
  setup(__props) {
    const passwordInput = ref(null);
    const currentPasswordInput = ref(null);
    const form = useForm({
      current_password: "",
      password: "",
      password_confirmation: ""
    });
    const updatePassword = () => {
      form.put(route("user-password.update"), {
        errorBag: "updatePassword",
        preserveScroll: true,
        onSuccess: () => form.reset(),
        onError: () => {
          if (form.errors.password) {
            form.reset("password", "password_confirmation");
            passwordInput.value.focus();
          }
          if (form.errors.current_password) {
            form.reset("current_password");
            currentPasswordInput.value.focus();
          }
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2G, mergeProps({ onSubmitted: updatePassword }, _attrs), {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Update Password `);
          } else {
            return [
              createTextVNode(" Update Password ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Ensure your account is using a long, random password to stay secure. `);
          } else {
            return [
              createTextVNode(" Ensure your account is using a long, random password to stay secure. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "current_password",
              value: "Current Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "current_password",
              ref_key: "currentPasswordInput",
              ref: currentPasswordInput,
              modelValue: unref(form).current_password,
              "onUpdate:modelValue": ($event) => unref(form).current_password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "current-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.current_password,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password",
              value: "New Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password",
              ref_key: "passwordInput",
              ref: passwordInput,
              modelValue: unref(form).password,
              "onUpdate:modelValue": ($event) => unref(form).password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.password,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "password_confirmation",
              value: "Confirm Password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "password_confirmation",
              modelValue: unref(form).password_confirmation,
              "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.password_confirmation,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "current_password",
                  value: "Current Password"
                }),
                createVNode(_sfc_main$2A, {
                  id: "current_password",
                  ref_key: "currentPasswordInput",
                  ref: currentPasswordInput,
                  modelValue: unref(form).current_password,
                  "onUpdate:modelValue": ($event) => unref(form).current_password = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "current-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.current_password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "password",
                  value: "New Password"
                }),
                createVNode(_sfc_main$2A, {
                  id: "password",
                  ref_key: "passwordInput",
                  ref: passwordInput,
                  modelValue: unref(form).password,
                  "onUpdate:modelValue": ($event) => unref(form).password = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "new-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "password_confirmation",
                  value: "Confirm Password"
                }),
                createVNode(_sfc_main$2A, {
                  id: "password_confirmation",
                  modelValue: unref(form).password_confirmation,
                  "onUpdate:modelValue": ($event) => unref(form).password_confirmation = $event,
                  type: "password",
                  class: "mt-1 block w-full",
                  autocomplete: "new-password"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.password_confirmation,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Saved. `);
                } else {
                  return [
                    createTextVNode(" Saved. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Save `);
                } else {
                  return [
                    createTextVNode(" Save ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(form).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Saved. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(form).processing },
                disabled: unref(form).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Save ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Partials/UpdatePasswordForm.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
const __vite_glob_0_80 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$J
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$I = {
  __name: "UpdateProfileInformationForm",
  __ssrInlineRender: true,
  props: {
    user: Object
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      _method: "PUT",
      name: props.user.name,
      email: props.user.email,
      photo: null
    });
    const verificationLinkSent = ref(null);
    const photoPreview = ref(null);
    const photoInput = ref(null);
    const updateProfileInformation = () => {
      if (photoInput.value) {
        form.photo = photoInput.value.files[0];
      }
      form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => clearPhotoFileInput()
      });
    };
    const sendEmailVerification = () => {
      verificationLinkSent.value = true;
    };
    const selectNewPhoto = () => {
      photoInput.value.click();
    };
    const updatePhotoPreview = () => {
      const photo = photoInput.value.files[0];
      if (!photo) return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        photoPreview.value = e2.target.result;
      };
      reader.readAsDataURL(photo);
    };
    const deletePhoto = () => {
      router.delete(route("current-user-photo.destroy"), {
        preserveScroll: true,
        onSuccess: () => {
          photoPreview.value = null;
          clearPhotoFileInput();
        }
      });
    };
    const clearPhotoFileInput = () => {
      var _a;
      if ((_a = photoInput.value) == null ? void 0 : _a.value) {
        photoInput.value.value = null;
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2G, mergeProps({ onSubmitted: updateProfileInformation }, _attrs), {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Profile Information `);
          } else {
            return [
              createTextVNode(" Profile Information ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Update your account&#39;s profile information and email address. `);
          } else {
            return [
              createTextVNode(" Update your account's profile information and email address. ")
            ];
          }
        }),
        form: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (_ctx.$page.props.jetstream.managesProfilePhotos) {
              _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}><input id="photo" type="file" class="hidden"${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$2E, {
                for: "photo",
                value: "Photo"
              }, null, _parent2, _scopeId));
              _push2(`<div style="${ssrRenderStyle(!photoPreview.value ? null : { display: "none" })}" class="mt-2"${_scopeId}><img${ssrRenderAttr("src", __props.user.profile_photo_url)}${ssrRenderAttr("alt", __props.user.name)} class="rounded-full size-20 object-cover"${_scopeId}></div><div style="${ssrRenderStyle(photoPreview.value ? null : { display: "none" })}" class="mt-2"${_scopeId}><span class="block rounded-full size-20 bg-cover bg-no-repeat bg-center" style="${ssrRenderStyle("background-image: url('" + photoPreview.value + "');")}"${_scopeId}></span></div>`);
              _push2(ssrRenderComponent(_sfc_main$2C, {
                class: "mt-2 me-2",
                type: "button",
                onClick: selectNewPhoto
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Select A New Photo `);
                  } else {
                    return [
                      createTextVNode(" Select A New Photo ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              if (__props.user.profile_photo_path) {
                _push2(ssrRenderComponent(_sfc_main$2C, {
                  type: "button",
                  class: "mt-2",
                  onClick: deletePhoto
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Remove Photo `);
                    } else {
                      return [
                        createTextVNode(" Remove Photo ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(ssrRenderComponent(_sfc_main$2F, {
                message: unref(form).errors.photo,
                class: "mt-2"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "name",
              value: "Name"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "name",
              modelValue: unref(form).name,
              "onUpdate:modelValue": ($event) => unref(form).name = $event,
              type: "text",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "name"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2E, {
              for: "email",
              value: "Email"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2A, {
              id: "email",
              modelValue: unref(form).email,
              "onUpdate:modelValue": ($event) => unref(form).email = $event,
              type: "email",
              class: "mt-1 block w-full",
              required: "",
              autocomplete: "username"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2F, {
              message: unref(form).errors.email,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            if (_ctx.$page.props.jetstream.hasEmailVerification && __props.user.email_verified_at === null) {
              _push2(`<div${_scopeId}><p class="text-sm mt-2"${_scopeId}> Your email address is unverified. `);
              _push2(ssrRenderComponent(unref(Link), {
                href: _ctx.route("verification.send"),
                method: "post",
                as: "button",
                class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                onClick: sendEmailVerification
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Click here to re-send the verification email. `);
                  } else {
                    return [
                      createTextVNode(" Click here to re-send the verification email. ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</p><div style="${ssrRenderStyle(verificationLinkSent.value ? null : { display: "none" })}" class="mt-2 font-medium text-sm text-green-600"${_scopeId}> A new verification link has been sent to your email address. </div></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          } else {
            return [
              _ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock("div", {
                key: 0,
                class: "col-span-6 sm:col-span-4"
              }, [
                createVNode("input", {
                  id: "photo",
                  ref_key: "photoInput",
                  ref: photoInput,
                  type: "file",
                  class: "hidden",
                  onChange: updatePhotoPreview
                }, null, 544),
                createVNode(_sfc_main$2E, {
                  for: "photo",
                  value: "Photo"
                }),
                withDirectives(createVNode("div", { class: "mt-2" }, [
                  createVNode("img", {
                    src: __props.user.profile_photo_url,
                    alt: __props.user.name,
                    class: "rounded-full size-20 object-cover"
                  }, null, 8, ["src", "alt"])
                ], 512), [
                  [vShow, !photoPreview.value]
                ]),
                withDirectives(createVNode("div", { class: "mt-2" }, [
                  createVNode("span", {
                    class: "block rounded-full size-20 bg-cover bg-no-repeat bg-center",
                    style: "background-image: url('" + photoPreview.value + "');"
                  }, null, 4)
                ], 512), [
                  [vShow, photoPreview.value]
                ]),
                createVNode(_sfc_main$2C, {
                  class: "mt-2 me-2",
                  type: "button",
                  onClick: withModifiers(selectNewPhoto, ["prevent"])
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Select A New Photo ")
                  ]),
                  _: 1
                }),
                __props.user.profile_photo_path ? (openBlock(), createBlock(_sfc_main$2C, {
                  key: 0,
                  type: "button",
                  class: "mt-2",
                  onClick: withModifiers(deletePhoto, ["prevent"])
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Remove Photo ")
                  ]),
                  _: 1
                })) : createCommentVNode("", true),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.photo,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "name",
                  value: "Name"
                }),
                createVNode(_sfc_main$2A, {
                  id: "name",
                  modelValue: unref(form).name,
                  "onUpdate:modelValue": ($event) => unref(form).name = $event,
                  type: "text",
                  class: "mt-1 block w-full",
                  required: "",
                  autocomplete: "name"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
                createVNode(_sfc_main$2E, {
                  for: "email",
                  value: "Email"
                }),
                createVNode(_sfc_main$2A, {
                  id: "email",
                  modelValue: unref(form).email,
                  "onUpdate:modelValue": ($event) => unref(form).email = $event,
                  type: "email",
                  class: "mt-1 block w-full",
                  required: "",
                  autocomplete: "username"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_sfc_main$2F, {
                  message: unref(form).errors.email,
                  class: "mt-2"
                }, null, 8, ["message"]),
                _ctx.$page.props.jetstream.hasEmailVerification && __props.user.email_verified_at === null ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("p", { class: "text-sm mt-2" }, [
                    createTextVNode(" Your email address is unverified. "),
                    createVNode(unref(Link), {
                      href: _ctx.route("verification.send"),
                      method: "post",
                      as: "button",
                      class: "underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                      onClick: withModifiers(sendEmailVerification, ["prevent"])
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Click here to re-send the verification email. ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  withDirectives(createVNode("div", { class: "mt-2 font-medium text-sm text-green-600" }, " A new verification link has been sent to your email address. ", 512), [
                    [vShow, verificationLinkSent.value]
                  ])
                ])) : createCommentVNode("", true)
              ])
            ];
          }
        }),
        actions: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "me-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Saved. `);
                } else {
                  return [
                    createTextVNode(" Saved. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2D, {
              class: { "opacity-25": unref(form).processing },
              disabled: unref(form).processing
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Save `);
                } else {
                  return [
                    createTextVNode(" Save ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2O, {
                on: unref(form).recentlySuccessful,
                class: "me-3"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Saved. ")
                ]),
                _: 1
              }, 8, ["on"]),
              createVNode(_sfc_main$2D, {
                class: { "opacity-25": unref(form).processing },
                disabled: unref(form).processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Save ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Partials/UpdateProfileInformationForm.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
const __vite_glob_0_81 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$I
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$H = {};
function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs) {
  _push(`<img${ssrRenderAttrs(mergeProps({
    src: "/images/favicon.png",
    alt: "Logo du site"
  }, _attrs))}>`);
}
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ApplicationMark.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
const ApplicationMark = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["ssrRender", _sfc_ssrRender$6]]);
const _sfc_main$G = {
  __name: "Banner",
  __ssrInlineRender: true,
  setup(__props) {
    const page2 = usePage();
    const show = ref(true);
    const style = ref("success");
    const message = ref("");
    watchEffect(async () => {
      var _a, _b;
      style.value = ((_a = page2.props.jetstream.flash) == null ? void 0 : _a.bannerStyle) || "success";
      message.value = ((_b = page2.props.jetstream.flash) == null ? void 0 : _b.banner) || "";
      show.value = true;
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      if (show.value && message.value) {
        _push(`<div class="${ssrRenderClass({ "bg-indigo-500": style.value == "success", "bg-red-700": style.value == "danger" })}"><div class="max-w-screen-xl mx-auto py-2 px-3 sm:px-6 lg:px-8"><div class="flex items-center justify-between flex-wrap"><div class="w-0 flex-1 flex items-center min-w-0"><span class="${ssrRenderClass([{ "bg-indigo-600": style.value == "success", "bg-red-600": style.value == "danger" }, "flex p-2 rounded-lg"])}">`);
        if (style.value == "success") {
          _push(`<svg class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`);
        } else {
          _push(`<!---->`);
        }
        if (style.value == "danger") {
          _push(`<svg class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path></svg>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</span><p class="ms-3 font-medium text-sm text-white truncate">${ssrInterpolate(message.value)}</p></div><div class="shrink-0 sm:ms-3"><button type="button" class="${ssrRenderClass([{ "hover:bg-indigo-600 focus:bg-indigo-600": style.value == "success", "hover:bg-red-600 focus:bg-red-600": style.value == "danger" }, "-me-1 flex p-2 rounded-md focus:outline-none sm:-me-2 transition"])}" aria-label="Dismiss"><svg class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path></svg></button></div></div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Banner.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
const _sfc_main$F = {
  __name: "Dropdown",
  __ssrInlineRender: true,
  props: {
    align: {
      type: String,
      default: "right"
    },
    width: {
      type: String,
      default: "48"
    },
    contentClasses: {
      type: Array,
      default: () => ["py-1", "bg-white"]
    }
  },
  setup(__props) {
    const props = __props;
    let open = ref(false);
    const closeOnEscape = (e2) => {
      if (open.value && e2.key === "Escape") {
        open.value = false;
      }
    };
    onMounted(() => document.addEventListener("keydown", closeOnEscape));
    onUnmounted(() => document.removeEventListener("keydown", closeOnEscape));
    const widthClass = computed(() => {
      return {
        "48": "w-48"
      }[props.width.toString()];
    });
    const alignmentClasses = computed(() => {
      if (props.align === "left") {
        return "ltr:origin-top-left rtl:origin-top-right start-0";
      }
      if (props.align === "right") {
        return "ltr:origin-top-right rtl:origin-top-left end-0";
      }
      return "origin-top";
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "relative" }, _attrs))}><div>`);
      ssrRenderSlot(_ctx.$slots, "trigger", {}, null, _push, _parent);
      _push(`</div><div style="${ssrRenderStyle(unref(open) ? null : { display: "none" })}" class="fixed inset-0 z-40"></div><div style="${ssrRenderStyle([
        unref(open) ? null : { display: "none" },
        { "display": "none" }
      ])}" class="${ssrRenderClass([[widthClass.value, alignmentClasses.value], "absolute z-50 mt-2 rounded-md shadow-lg"])}"><div class="${ssrRenderClass([__props.contentClasses, "rounded-md ring-1 ring-black ring-opacity-5"])}">`);
      ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Dropdown.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
const _sfc_main$E = {
  __name: "DropdownLink",
  __ssrInlineRender: true,
  props: {
    href: String,
    as: String
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      if (__props.as == "button") {
        _push(`<button type="submit" class="block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</button>`);
      } else if (__props.as == "a") {
        _push(`<a${ssrRenderAttr("href", __props.href)} class="block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</a>`);
      } else {
        _push(ssrRenderComponent(unref(Link), {
          href: __props.href,
          class: "block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out"
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent));
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/DropdownLink.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
const _sfc_main$D = {
  __name: "NavLink",
  __ssrInlineRender: true,
  props: {
    href: String,
    active: Boolean
  },
  setup(__props) {
    const props = __props;
    const classes = computed(() => {
      return props.active ? "inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out" : "inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out";
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Link), mergeProps({
        href: __props.href,
        class: classes.value
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/NavLink.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
const _sfc_main$C = {
  __name: "ResponsiveNavLink",
  __ssrInlineRender: true,
  props: {
    active: Boolean,
    href: String,
    as: String
  },
  setup(__props) {
    const props = __props;
    const classes = computed(() => {
      return props.active ? "block w-full ps-3 pe-4 py-2 border-l-4 border-indigo-400 text-start text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out" : "block w-full ps-3 pe-4 py-2 border-l-4 border-transparent text-start text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out";
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      if (__props.as == "button") {
        _push(`<button class="${ssrRenderClass([classes.value, "w-full text-start"])}">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</button>`);
      } else if (__props.as == "a") {
        _push(`<a class="${ssrRenderClass([classes.value, "w-full text-start"])}"${ssrRenderAttr("href", __props.href)}>`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</a>`);
      } else {
        _push(ssrRenderComponent(unref(Link), {
          href: __props.href,
          class: classes.value
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent));
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ResponsiveNavLink.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
const _sfc_main$B = {
  __name: "JetstreamLayout",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    const showingNavigationDropdown = ref(false);
    const switchToTeam = (team) => {
      router.put(
        route("current-team.update"),
        {
          team_id: team.id
        },
        {
          preserveState: false
        }
      );
    };
    const logout = () => {
      router.post(route("logout"));
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(_attrs)}>`);
      _push(ssrRenderComponent(unref(Head), { title: __props.title }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<link rel="preconnect" href="https://fonts.bunny.net"${_scopeId}><link href="https://fonts.bunny.net/css?family=figtree:400,500,600&amp;display=swap" rel="stylesheet"${_scopeId}>`);
          } else {
            return [
              createVNode("link", {
                rel: "preconnect",
                href: "https://fonts.bunny.net"
              }),
              createVNode("link", {
                href: "https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap",
                rel: "stylesheet"
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_sfc_main$G, null, null, _parent));
      _push(`<div class="min-h-screen bg-gray-100"><nav class="bg-white border-b border-gray-100"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"><div class="flex justify-between h-16"><div class="flex"><div class="shrink-0 flex items-center">`);
      _push(ssrRenderComponent(unref(Link), { href: "/" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(ApplicationMark, { class: "block h-9 w-auto" }, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(ApplicationMark, { class: "block h-9 w-auto" })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="hidden space-x-8 sm:-my-px sm:ms-10 sm:flex">`);
      _push(ssrRenderComponent(_sfc_main$D, {
        href: "/",
        active: _ctx.route().current("dashboard")
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Dashboard `);
          } else {
            return [
              createTextVNode(" Dashboard ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="hidden sm:flex sm:items-center sm:ms-6"><div class="ms-3 relative">`);
      if (_ctx.$page.props.jetstream.hasTeamFeatures) {
        _push(ssrRenderComponent(_sfc_main$F, {
          align: "right",
          width: "60"
        }, {
          trigger: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<span class="inline-flex rounded-md"${_scopeId}><button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150"${_scopeId}>${ssrInterpolate(_ctx.$page.props.auth.user.current_team.name)} <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"${_scopeId}></path></svg></button></span>`);
            } else {
              return [
                createVNode("span", { class: "inline-flex rounded-md" }, [
                  createVNode("button", {
                    type: "button",
                    class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150"
                  }, [
                    createTextVNode(toDisplayString(_ctx.$page.props.auth.user.current_team.name) + " ", 1),
                    (openBlock(), createBlock("svg", {
                      class: "ms-2 -me-0.5 size-4",
                      xmlns: "http://www.w3.org/2000/svg",
                      fill: "none",
                      viewBox: "0 0 24 24",
                      "stroke-width": "1.5",
                      stroke: "currentColor"
                    }, [
                      createVNode("path", {
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        d: "M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"
                      })
                    ]))
                  ])
                ])
              ];
            }
          }),
          content: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="w-60"${_scopeId}><div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Manage Team </div>`);
              _push2(ssrRenderComponent(_sfc_main$E, {
                href: _ctx.route(
                  "teams.show",
                  _ctx.$page.props.auth.user.current_team
                )
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Team Settings `);
                  } else {
                    return [
                      createTextVNode(" Team Settings ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              if (_ctx.$page.props.jetstream.canCreateTeams) {
                _push2(ssrRenderComponent(_sfc_main$E, {
                  href: _ctx.route("teams.create")
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Create New Team `);
                    } else {
                      return [
                        createTextVNode(" Create New Team ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              if (_ctx.$page.props.auth.user.all_teams.length > 1) {
                _push2(`<!--[--><div class="border-t border-gray-200"${_scopeId}></div><div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Switch Teams </div><!--[-->`);
                ssrRenderList(_ctx.$page.props.auth.user.all_teams, (team) => {
                  _push2(`<form${_scopeId}>`);
                  _push2(ssrRenderComponent(_sfc_main$E, { as: "button" }, {
                    default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                      if (_push3) {
                        _push3(`<div class="flex items-center"${_scopeId2}>`);
                        if (team.id == _ctx.$page.props.auth.user.current_team_id) {
                          _push3(`<svg class="me-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId2}></path></svg>`);
                        } else {
                          _push3(`<!---->`);
                        }
                        _push3(`<div${_scopeId2}>${ssrInterpolate(team.name)}</div></div>`);
                      } else {
                        return [
                          createVNode("div", { class: "flex items-center" }, [
                            team.id == _ctx.$page.props.auth.user.current_team_id ? (openBlock(), createBlock("svg", {
                              key: 0,
                              class: "me-2 size-5 text-green-400",
                              xmlns: "http://www.w3.org/2000/svg",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              "stroke-width": "1.5",
                              stroke: "currentColor"
                            }, [
                              createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                              })
                            ])) : createCommentVNode("", true),
                            createVNode("div", null, toDisplayString(team.name), 1)
                          ])
                        ];
                      }
                    }),
                    _: 2
                  }, _parent2, _scopeId));
                  _push2(`</form>`);
                });
                _push2(`<!--]--><!--]-->`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            } else {
              return [
                createVNode("div", { class: "w-60" }, [
                  createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Manage Team "),
                  createVNode(_sfc_main$E, {
                    href: _ctx.route(
                      "teams.show",
                      _ctx.$page.props.auth.user.current_team
                    )
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Team Settings ")
                    ]),
                    _: 1
                  }, 8, ["href"]),
                  _ctx.$page.props.jetstream.canCreateTeams ? (openBlock(), createBlock(_sfc_main$E, {
                    key: 0,
                    href: _ctx.route("teams.create")
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Create New Team ")
                    ]),
                    _: 1
                  }, 8, ["href"])) : createCommentVNode("", true),
                  _ctx.$page.props.auth.user.all_teams.length > 1 ? (openBlock(), createBlock(Fragment, { key: 1 }, [
                    createVNode("div", { class: "border-t border-gray-200" }),
                    createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Switch Teams "),
                    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.auth.user.all_teams, (team) => {
                      return openBlock(), createBlock("form", {
                        key: team.id,
                        onSubmit: withModifiers(($event) => switchToTeam(team), ["prevent"])
                      }, [
                        createVNode(_sfc_main$E, { as: "button" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "flex items-center" }, [
                              team.id == _ctx.$page.props.auth.user.current_team_id ? (openBlock(), createBlock("svg", {
                                key: 0,
                                class: "me-2 size-5 text-green-400",
                                xmlns: "http://www.w3.org/2000/svg",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                "stroke-width": "1.5",
                                stroke: "currentColor"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                                })
                              ])) : createCommentVNode("", true),
                              createVNode("div", null, toDisplayString(team.name), 1)
                            ])
                          ]),
                          _: 2
                        }, 1024)
                      ], 40, ["onSubmit"]);
                    }), 128))
                  ], 64)) : createCommentVNode("", true)
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="ms-3 relative">`);
      _push(ssrRenderComponent(_sfc_main$F, {
        align: "right",
        width: "48"
      }, {
        trigger: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (_ctx.$page.props.jetstream.managesProfilePhotos) {
              _push2(`<button class="flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition"${_scopeId}><img class="size-8 rounded-full object-cover"${ssrRenderAttr(
                "src",
                _ctx.$page.props.auth.user.profile_photo_url
              )}${ssrRenderAttr(
                "alt",
                _ctx.$page.props.auth.user.name
              )}${_scopeId}></button>`);
            } else {
              _push2(`<span class="inline-flex rounded-md"${_scopeId}><button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150"${_scopeId}>${ssrInterpolate(_ctx.$page.props.auth.user.name)} <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"${_scopeId}></path></svg></button></span>`);
            }
          } else {
            return [
              _ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock("button", {
                key: 0,
                class: "flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition"
              }, [
                createVNode("img", {
                  class: "size-8 rounded-full object-cover",
                  src: _ctx.$page.props.auth.user.profile_photo_url,
                  alt: _ctx.$page.props.auth.user.name
                }, null, 8, ["src", "alt"])
              ])) : (openBlock(), createBlock("span", {
                key: 1,
                class: "inline-flex rounded-md"
              }, [
                createVNode("button", {
                  type: "button",
                  class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150"
                }, [
                  createTextVNode(toDisplayString(_ctx.$page.props.auth.user.name) + " ", 1),
                  (openBlock(), createBlock("svg", {
                    class: "ms-2 -me-0.5 size-4",
                    xmlns: "http://www.w3.org/2000/svg",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    "stroke-width": "1.5",
                    stroke: "currentColor"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M19.5 8.25l-7.5 7.5-7.5-7.5"
                    })
                  ]))
                ])
              ]))
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Manage Account </div>`);
            _push2(ssrRenderComponent(_sfc_main$E, {
              href: _ctx.route("profile.show")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Profile `);
                } else {
                  return [
                    createTextVNode(" Profile ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            if (_ctx.$page.props.jetstream.hasApiFeatures) {
              _push2(ssrRenderComponent(_sfc_main$E, {
                href: _ctx.route("api-tokens.index")
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` API Tokens `);
                  } else {
                    return [
                      createTextVNode(" API Tokens ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="border-t border-gray-200"${_scopeId}></div><form${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$E, { as: "button" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out `);
                } else {
                  return [
                    createTextVNode(" Log Out ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</form>`);
          } else {
            return [
              createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Manage Account "),
              createVNode(_sfc_main$E, {
                href: _ctx.route("profile.show")
              }, {
                default: withCtx(() => [
                  createTextVNode(" Profile ")
                ]),
                _: 1
              }, 8, ["href"]),
              _ctx.$page.props.jetstream.hasApiFeatures ? (openBlock(), createBlock(_sfc_main$E, {
                key: 0,
                href: _ctx.route("api-tokens.index")
              }, {
                default: withCtx(() => [
                  createTextVNode(" API Tokens ")
                ]),
                _: 1
              }, 8, ["href"])) : createCommentVNode("", true),
              createVNode("div", { class: "border-t border-gray-200" }),
              createVNode("form", {
                onSubmit: withModifiers(logout, ["prevent"])
              }, [
                createVNode(_sfc_main$E, { as: "button" }, {
                  default: withCtx(() => [
                    createTextVNode(" Log Out ")
                  ]),
                  _: 1
                })
              ], 32)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="-me-2 flex items-center sm:hidden"><button class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out"><svg class="size-6" stroke="currentColor" fill="none" viewBox="0 0 24 24"><path class="${ssrRenderClass({
        hidden: showingNavigationDropdown.value,
        "inline-flex": !showingNavigationDropdown.value
      })}" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path><path class="${ssrRenderClass({
        hidden: !showingNavigationDropdown.value,
        "inline-flex": showingNavigationDropdown.value
      })}" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></button></div></div></div><div class="${ssrRenderClass([{
        block: showingNavigationDropdown.value,
        hidden: !showingNavigationDropdown.value
      }, "sm:hidden"])}"><div class="pt-2 pb-3 space-y-1">`);
      _push(ssrRenderComponent(_sfc_main$C, {
        href: "/",
        active: _ctx.route().current("dashboard")
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Dashboard `);
          } else {
            return [
              createTextVNode(" Dashboard ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="pt-4 pb-1 border-t border-gray-200"><div class="flex items-center px-4">`);
      if (_ctx.$page.props.jetstream.managesProfilePhotos) {
        _push(`<div class="shrink-0 me-3"><img class="size-10 rounded-full object-cover"${ssrRenderAttr(
          "src",
          _ctx.$page.props.auth.user.profile_photo_url
        )}${ssrRenderAttr("alt", _ctx.$page.props.auth.user.name)}></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div><div class="font-medium text-base text-gray-800">${ssrInterpolate(_ctx.$page.props.auth.user.name)}</div><div class="font-medium text-sm text-gray-500">${ssrInterpolate(_ctx.$page.props.auth.user.email)}</div></div></div><div class="mt-3 space-y-1">`);
      _push(ssrRenderComponent(_sfc_main$C, {
        href: _ctx.route("profile.show"),
        active: _ctx.route().current("profile.show")
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Profile `);
          } else {
            return [
              createTextVNode(" Profile ")
            ];
          }
        }),
        _: 1
      }, _parent));
      if (_ctx.$page.props.jetstream.hasApiFeatures) {
        _push(ssrRenderComponent(_sfc_main$C, {
          href: _ctx.route("api-tokens.index"),
          active: _ctx.route().current("api-tokens.index")
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` API Tokens `);
            } else {
              return [
                createTextVNode(" API Tokens ")
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<form method="POST">`);
      _push(ssrRenderComponent(_sfc_main$C, { as: "button" }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Log Out `);
          } else {
            return [
              createTextVNode(" Log Out ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</form>`);
      if (_ctx.$page.props.jetstream.hasTeamFeatures) {
        _push(`<!--[--><div class="border-t border-gray-200"></div><div class="block px-4 py-2 text-xs text-gray-400"> Manage Team </div>`);
        _push(ssrRenderComponent(_sfc_main$C, {
          href: _ctx.route(
            "teams.show",
            _ctx.$page.props.auth.user.current_team
          ),
          active: _ctx.route().current("teams.show")
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Team Settings `);
            } else {
              return [
                createTextVNode(" Team Settings ")
              ];
            }
          }),
          _: 1
        }, _parent));
        if (_ctx.$page.props.jetstream.canCreateTeams) {
          _push(ssrRenderComponent(_sfc_main$C, {
            href: _ctx.route("teams.create"),
            active: _ctx.route().current("teams.create")
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(` Create New Team `);
              } else {
                return [
                  createTextVNode(" Create New Team ")
                ];
              }
            }),
            _: 1
          }, _parent));
        } else {
          _push(`<!---->`);
        }
        if (_ctx.$page.props.auth.user.all_teams.length > 1) {
          _push(`<!--[--><div class="border-t border-gray-200"></div><div class="block px-4 py-2 text-xs text-gray-400"> Switch Teams </div><!--[-->`);
          ssrRenderList(_ctx.$page.props.auth.user.all_teams, (team) => {
            _push(`<form>`);
            _push(ssrRenderComponent(_sfc_main$C, { as: "button" }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  _push2(`<div class="flex items-center"${_scopeId}>`);
                  if (team.id == _ctx.$page.props.auth.user.current_team_id) {
                    _push2(`<svg class="me-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`<div${_scopeId}>${ssrInterpolate(team.name)}</div></div>`);
                } else {
                  return [
                    createVNode("div", { class: "flex items-center" }, [
                      team.id == _ctx.$page.props.auth.user.current_team_id ? (openBlock(), createBlock("svg", {
                        key: 0,
                        class: "me-2 size-5 text-green-400",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                        })
                      ])) : createCommentVNode("", true),
                      createVNode("div", null, toDisplayString(team.name), 1)
                    ])
                  ];
                }
              }),
              _: 2
            }, _parent));
            _push(`</form>`);
          });
          _push(`<!--]--><!--]-->`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div></nav>`);
      if (_ctx.$slots.header) {
        _push(`<header class="bg-white shadow"><div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">`);
        ssrRenderSlot(_ctx.$slots, "header", {}, null, _push, _parent);
        _push(`</div></header>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<main>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</main></div></div>`);
    };
  }
};
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/JetstreamLayout.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
const _sfc_main$A = {
  __name: "Show",
  __ssrInlineRender: true,
  props: {
    confirmsTwoFactorAuthentication: Boolean,
    sessions: Array
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$B, mergeProps({ title: "Profile" }, _attrs), {
        header: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Profile </h2>`);
          } else {
            return [
              createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Profile ")
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
            if (_ctx.$page.props.jetstream.canUpdateProfileInformation) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$I, {
                user: _ctx.$page.props.auth.user
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.$page.props.jetstream.canUpdatePassword) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$J, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.$page.props.jetstream.canManageTwoFactorAuthentication) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$K, {
                "requires-confirmation": __props.confirmsTwoFactorAuthentication,
                class: "mt-10 sm:mt-0"
              }, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(_sfc_main$L, {
              sessions: __props.sessions,
              class: "mt-10 sm:mt-0"
            }, null, _parent2, _scopeId));
            if (_ctx.$page.props.jetstream.hasAccountDeletionFeatures) {
              _push2(`<!--[-->`);
              _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$M, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
              _push2(`<!--]-->`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          } else {
            return [
              createVNode("div", null, [
                createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
                  _ctx.$page.props.jetstream.canUpdateProfileInformation ? (openBlock(), createBlock("div", { key: 0 }, [
                    createVNode(_sfc_main$I, {
                      user: _ctx.$page.props.auth.user
                    }, null, 8, ["user"]),
                    createVNode(SectionBorder)
                  ])) : createCommentVNode("", true),
                  _ctx.$page.props.jetstream.canUpdatePassword ? (openBlock(), createBlock("div", { key: 1 }, [
                    createVNode(_sfc_main$J, { class: "mt-10 sm:mt-0" }),
                    createVNode(SectionBorder)
                  ])) : createCommentVNode("", true),
                  _ctx.$page.props.jetstream.canManageTwoFactorAuthentication ? (openBlock(), createBlock("div", { key: 2 }, [
                    createVNode(_sfc_main$K, {
                      "requires-confirmation": __props.confirmsTwoFactorAuthentication,
                      class: "mt-10 sm:mt-0"
                    }, null, 8, ["requires-confirmation"]),
                    createVNode(SectionBorder)
                  ])) : createCommentVNode("", true),
                  createVNode(_sfc_main$L, {
                    sessions: __props.sessions,
                    class: "mt-10 sm:mt-0"
                  }, null, 8, ["sessions"]),
                  _ctx.$page.props.jetstream.hasAccountDeletionFeatures ? (openBlock(), createBlock(Fragment, { key: 3 }, [
                    createVNode(SectionBorder),
                    createVNode(_sfc_main$M, { class: "mt-10 sm:mt-0" })
                  ], 64)) : createCommentVNode("", true)
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Jetstream/Show.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
const __vite_glob_0_82 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$A
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$z = {
  __name: "Show",
  __ssrInlineRender: true,
  props: {
    confirmsTwoFactorAuthentication: Boolean,
    sessions: Array
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      const _component_Message = __unplugin_components_0;
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "A propos de moi" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="w-full md:w-[80%] lg:w-[60%] mx-auto"${_scopeId}>`);
            if (_ctx.$page.props.flash.status) {
              _push2(ssrRenderComponent(_component_Message, { severity: "info" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${ssrInterpolate(_ctx.$page.props.flash.status)}`);
                  } else {
                    return [
                      createTextVNode(toDisplayString(_ctx.$page.props.flash.status), 1)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="card"${_scopeId}><div class="card-body px-0 pr-5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2o, {
              user: _ctx.$page.props.auth.user
            }, null, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "w-full md:w-[80%] lg:w-[60%] mx-auto" }, [
                _ctx.$page.props.flash.status ? (openBlock(), createBlock(_component_Message, {
                  key: 0,
                  severity: "info"
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString(_ctx.$page.props.flash.status), 1)
                  ]),
                  _: 1
                })) : createCommentVNode("", true),
                createVNode("div", { class: "card" }, [
                  createVNode("div", { class: "card-body px-0 pr-5" }, [
                    createVNode(_sfc_main$2o, {
                      user: _ctx.$page.props.auth.user
                    }, null, 8, ["user"])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Show.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
const __vite_glob_0_87 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$z
}, Symbol.toStringTag, { value: "Module" }));
const stickySidebarClasses = {
  "demo1-layout": "top-[calc(var(--tw-header-height)+1rem)]",
  "demo2-layout": "top-[calc(var(--tw-header-height)+1rem)]",
  "demo3-layout": "top-[calc(var(--tw-header-height)+var(--tw-navbar-height)+1rem)]",
  "demo4-layout": "top-[3rem]",
  "demo5-layout": "top-[calc(var(--tw-header-height)+1.5rem)]",
  "demo6-layout": "top-[3rem]",
  "demo7-layout": "top-[calc(var(--tw-header-height)+1rem)]",
  "demo8-layout": "top-[3rem]",
  "demo9-layout": "top-[calc(var(--tw-header-height)+1rem)]",
  "demo10-layout": "top-[1.5rem]",
  "gestion.": "top-[8rem]",
  "app.": "top-[calc(var(--tw-header-height)+5rem)]"
};
const _sfc_main$y = /* @__PURE__ */ defineComponent({
  __name: "ScrollspyItem",
  __ssrInlineRender: true,
  props: {
    item: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<a${ssrRenderAttrs(mergeProps({
        "data-scrollspy-anchor": "true",
        href: __props.item.target,
        class: [
          "flex items-center rounded-lg pl-2.5 pr-2.5 py-2.5 border border-transparent text-gray-800 scrollspy-active:bg-secondary-active scrollspy-active:text-primary scrollspy-active:font-medium dark:hover:bg-coal-300 dark:hover:border-gray-100 hover:rounded-lg dark:scrollspy-active:bg-coal-300 dark:scrollspy-active:border-gray-100",
          {
            "gap-3.5": true,
            "gap-1.5": false
          },
          "text-2sm hover:text-primary"
        ],
        "scrollspy-active": __props.item.active
      }, _attrs))}><span class="flex w-1.5 relative before:absolute start-px rtl:-start-[5px] before:top-0 before:size-1.5 before:rounded-full before:-translate-x-2/4 before:-translate-y-2/4 scrollspy-active:before:bg-primary"></span> ${ssrInterpolate(__props.item.title)}</a>`);
    };
  }
});
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Scrollspy/ScrollspyItem.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
const _sfc_main$x = defineComponent({
  name: "ScrollspyMenu",
  components: { ScrollspyItem: _sfc_main$y },
  props: {
    items: {
      type: Array,
      required: true
    }
  },
  setup(props) {
    const elements = ref(props.items);
    const setActive = (target) => {
      elements.value = elements.value.map((i2) => ({
        ...i2,
        active: i2.target === target,
        // Vérifie si l'élément principal est cliqué
        children: i2.children ? i2.children.map((c2) => ({
          ...c2,
          active: c2.target === target
          // Vérifie si un sous-élément est cliqué
        })) : void 0
      }));
    };
    return { elements, setActive };
  }
});
function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ScrollspyItem = resolveComponent("ScrollspyItem");
  _push(`<!--[-->`);
  ssrRenderList(_ctx.elements, (item, index) => {
    _push(`<div>`);
    if (item.children) {
      _push(`<div class="flex flex-col" data-scrollspy-group="true"><div class="ps-6 pe-2.5 py-2.5 text-2sm font-semibold text-gray-900">${ssrInterpolate(item.title)}</div><div class="flex flex-col"><!--[-->`);
      ssrRenderList(item.children, (child, childIndex) => {
        _push(ssrRenderComponent(_component_ScrollspyItem, {
          onClick: ($event) => _ctx.setActive(child.target),
          item: child
        }, null, _parent));
      });
      _push(`<!--]--></div></div>`);
    } else {
      _push(ssrRenderComponent(_component_ScrollspyItem, {
        item,
        onClick: ($event) => _ctx.setActive(item.target)
      }, null, _parent));
    }
    _push(`</div>`);
  });
  _push(`<!--]-->`);
}
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Scrollspy/ScrollspyMenu.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
const ScrollspyMenu = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["ssrRender", _sfc_ssrRender$5]]);
const _sfc_main$w = /* @__PURE__ */ defineComponent({
  __name: "ScrollspyIndex",
  __ssrInlineRender: true,
  props: {
    target: {
      type: String,
      default: "#scrollable_content"
    },
    smooth: {
      type: Boolean,
      default: true
    },
    offset: {
      type: String,
      default: 0
    },
    items: {
      type: Array,
      required: false,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const scrollspyRef = ref();
    const init = () => {
      if (!scrollspyRef.value) return;
      const options = {
        target: props.target,
        offset: props.offset,
        smooth: props.smooth
      };
      new KTScrollspy(scrollspyRef.value, options);
    };
    onMounted(() => {
      nextTick(() => {
        init();
        const scrollspy = KTScrollspy.getInstance(scrollspyRef.value);
        scrollspy.on("activate", (element) => {
        });
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        "data-scrollspy": "false",
        "data-scrollspy-target": __props.target,
        "data-scrollspy-smooth": __props.smooth,
        "data-scrollspy-offset": __props.offset,
        ref_key: "scrollspyRef",
        ref: scrollspyRef
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, () => {
        if (__props.items) {
          _push(ssrRenderComponent(ScrollspyMenu, { items: __props.items }, null, _parent));
        } else {
          _push(`<!---->`);
        }
      }, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Scrollspy/ScrollspyIndex.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
const _sfc_main$v = defineComponent({
  name: "App",
  components: {
    Scrollspy: _sfc_main$w
  },
  setup() {
    const page2 = usePage();
    const stickyClass = page2.props.routePrefix ? stickySidebarClasses[page2.props.routePrefix] || "top-[calc(var(--tw-header-height)+1rem)]" : "top-[calc(var(--tw-header-height)+1rem)]";
    return {
      stickyClass
    };
  },
  data() {
    return {
      menuItems: [
        {
          title: "Authentification",
          target: "#auth_settings"
        },
        {
          title: "Sécurité",
          target: "#security",
          children: [
            {
              title: "Paramètres du compte",
              target: "#account_settings"
            }
          ]
        },
        {
          title: "Désactivation",
          target: "#delete_account"
        }
      ]
    };
  },
  methods: {
    handleUpdate(id) {
      console.log("Active section:", id);
    }
  }
});
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Scrollspy = resolveComponent("Scrollspy");
  _push(`<div${ssrRenderAttrs(mergeProps({
    class: `w-[230px] fixed z-10 start-auto ${_ctx.stickyClass}`
  }, _attrs))}>`);
  _push(ssrRenderComponent(_component_Scrollspy, {
    offset: "80px|lg:300px",
    class: "flex flex-col grow relative before:absolute before:start-[11px] before:top-0 before:bottom-0 before:border-s before:border-gray-200",
    items: _ctx.menuItems
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/Side.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
const SettingsSide = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["ssrRender", _sfc_ssrRender$4]]);
const __vite_glob_0_93 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SettingsSide
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$u = {
  __name: "DeactivateAccount",
  __ssrInlineRender: true,
  setup(__props) {
    const confirmingUserDeletion = ref(false);
    const form = useForm({
      password: "",
      action: null
    });
    const confirmUserDeletion = (type) => {
      form.action = type;
      confirmingUserDeletion.value = true;
    };
    const deleteUser = () => {
      form.delete(route("current-user.destroy"), {
        preserveScroll: true,
        onStart: () => {
          if (form.action == "delete") {
            form.cancel();
          }
        },
        onSuccess: () => closeModal(),
        onFinish: () => form.reset(),
        onCancel: () => {
          alert("Veuillez contacter le support pour désactiver votre compte");
          closeModal();
        }
      });
    };
    const closeModal = () => {
      confirmingUserDeletion.value = false;
      form.reset();
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Button = __unplugin_components_0$1;
      const _component_FloatLabel = __unplugin_components_0$3;
      const _component_Password = __unplugin_components_2$5;
      const _component_InputError = resolveComponent("InputError");
      const _directive_focustrap = __unplugin_directives_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card" }, _attrs))}><div class="card-header" id="delete_account"><h3 class="card-title">Désactiver le compte</h3></div><div class="card-body flex flex-col lg:py-7.5 lg:gap-7.5 gap-3"><div class="flex flex-col gap-5"><div class="text-2sm text-gray-800"> Au lieu de supprimer définitivement ton compte, tu peux simplement le désactiver et le réactiver plus tard. </div></div><div class="flex justify-end gap-2.5">`);
      _push(ssrRenderComponent(_component_Button, {
        label: "Désactiver temporairement",
        unstyled: "",
        loading: unref(form).processing && unref(form).action == "deactivate",
        class: "btn btn-danger btn-outline",
        onClick: ($event) => confirmUserDeletion("deactivate")
      }, null, _parent));
      _push(`<button${ssrRenderAttr("loading", unref(form).processing && unref(form).action == "deactivate")} class="btn btn-danger"> Supprimer définitivement </button></div></div>`);
      _push(ssrRenderComponent(_sfc_main$2H, {
        show: confirmingUserDeletion.value,
        onClose: closeModal
      }, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(unref(form).action == "delete" ? "Supprimer mon compte" : "Désactiver mon copte")}`);
          } else {
            return [
              createTextVNode(toDisplayString(unref(form).action == "delete" ? "Supprimer mon compte" : "Désactiver mon copte"), 1)
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<p${_scopeId}>Nous regrettons de te voir partir.</p><p${_scopeId}>Entre ton mot de passe pour confirmer ton action action.</p><br${_scopeId}><p${_scopeId}>${ssrInterpolate(unref(form).action == "delete" ? "Sache qu'une fois ton compte supprimé, toutes ses ressources et ses données seront définitivement perdues." : "Tu pourras réactiver votre compte plus tard.")}</p>`);
            if (unref(form).action == "delete") {
              _push2(`<p class="text-danger"${_scopeId}> Cette action est irréversible ! </p>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div${ssrRenderAttrs(mergeProps({ class: "mt-4" }, ssrGetDirectiveProps(_ctx, _directive_focustrap)))}${_scopeId}>`);
            _push2(ssrRenderComponent(_component_FloatLabel, { variant: "on" }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_Password, {
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    toggleMask: "",
                    autofocus: true
                  }, null, _parent3, _scopeId2));
                  _push3(`<label for="password"${_scopeId2}>Mot de passe</label>`);
                } else {
                  return [
                    createVNode(_component_Password, {
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      toggleMask: "",
                      autofocus: true
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode("label", { for: "password" }, "Mot de passe")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_InputError, {
              message: unref(form).errors.password,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("p", null, "Nous regrettons de te voir partir."),
              createVNode("p", null, "Entre ton mot de passe pour confirmer ton action action."),
              createVNode("br"),
              createVNode("p", null, toDisplayString(unref(form).action == "delete" ? "Sache qu'une fois ton compte supprimé, toutes ses ressources et ses données seront définitivement perdues." : "Tu pourras réactiver votre compte plus tard."), 1),
              unref(form).action == "delete" ? (openBlock(), createBlock("p", {
                key: 0,
                class: "text-danger"
              }, " Cette action est irréversible ! ")) : createCommentVNode("", true),
              withDirectives((openBlock(), createBlock("div", { class: "mt-4" }, [
                createVNode(_component_FloatLabel, { variant: "on" }, {
                  default: withCtx(() => [
                    createVNode(_component_Password, {
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      toggleMask: "",
                      autofocus: true
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode("label", { for: "password" }, "Mot de passe")
                  ]),
                  _: 1
                }),
                createVNode(_component_InputError, {
                  message: unref(form).errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])), [
                [_directive_focustrap]
              ])
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex justify-end gap-4"${_scopeId}><button class="btn btn-light"${ssrIncludeBooleanAttr(unref(form).processing) ? " disabled" : ""}${_scopeId}> Annuler </button>`);
            _push2(ssrRenderComponent(_component_Button, {
              loading: unref(form).processing,
              severity: "info",
              label: "Confirmer mon action",
              class: "btn btn-danger",
              onClick: deleteUser
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              createVNode("div", { class: "flex justify-end gap-4" }, [
                createVNode("button", {
                  class: "btn btn-light",
                  disabled: unref(form).processing,
                  onClick: closeModal
                }, " Annuler ", 8, ["disabled"]),
                createVNode(_component_Button, {
                  loading: unref(form).processing,
                  severity: "info",
                  label: "Confirmer mon action",
                  class: "btn btn-danger",
                  onClick: deleteUser
                }, null, 8, ["loading"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/DeactivateAccount.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
const __vite_glob_0_91 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$u
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$t = {
  __name: "TwoFactorAuthenticationForm",
  __ssrInlineRender: true,
  props: {
    requiresConfirmation: Boolean
  },
  setup(__props) {
    const props = __props;
    const page2 = usePage();
    const enabling = ref(false);
    const confirming = ref(false);
    const disabling = ref(false);
    const qrCode = ref(null);
    const setupKey = ref(null);
    const recoveryCodes = ref([]);
    const confirmationForm = useForm({
      code: ""
    });
    const twoFactorEnabled = computed(
      () => {
        var _a;
        return !enabling.value && ((_a = page2.props.auth.user) == null ? void 0 : _a.two_factor_enabled);
      }
    );
    watch(twoFactorEnabled, () => {
      if (!twoFactorEnabled.value) {
        confirmationForm.reset();
        confirmationForm.clearErrors();
      }
    });
    const enableTwoFactorAuthentication = () => {
      enabling.value = true;
      router.post(
        route("two-factor.enable"),
        {},
        {
          preserveScroll: true,
          onSuccess: () => Promise.all([
            showQrCode(),
            showSetupKey(),
            showRecoveryCodes()
          ]),
          onFinish: () => {
            enabling.value = false;
            confirming.value = props.requiresConfirmation;
          }
        }
      );
    };
    const showQrCode = () => {
      return axios.get(route("two-factor.qr-code")).then((response) => {
        qrCode.value = response.data.svg;
      });
    };
    const showSetupKey = () => {
      return axios.get(route("two-factor.secret-key")).then((response) => {
        setupKey.value = response.data.secretKey;
      });
    };
    const showRecoveryCodes = () => {
      return axios.get(route("two-factor.recovery-codes")).then((response) => {
        recoveryCodes.value = response.data;
      });
    };
    const confirmTwoFactorAuthentication = () => {
      confirmationForm.post(route("two-factor.confirm"), {
        errorBag: "confirmTwoFactorAuthentication",
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => {
          confirming.value = false;
          qrCode.value = null;
          setupKey.value = null;
        }
      });
    };
    const regenerateRecoveryCodes = () => {
      axios.post(route("two-factor.recovery-codes")).then(() => showRecoveryCodes());
    };
    const disableTwoFactorAuthentication = () => {
      disabling.value = true;
      router.delete(route("two-factor.disable"), {
        preserveScroll: true,
        onSuccess: () => {
          disabling.value = false;
          confirming.value = false;
        }
      });
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Authentification à Deux Facteurs `);
          } else {
            return [
              createTextVNode(" Authentification à Deux Facteurs ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Ajoutez une sécurité supplémentaire à votre compte grâce à l&#39;authentification à deux facteurs. `);
          } else {
            return [
              createTextVNode(" Ajoutez une sécurité supplémentaire à votre compte grâce à l'authentification à deux facteurs. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (twoFactorEnabled.value && !confirming.value) {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> Vous avez activé l&#39;authentification à deux facteurs. </h3>`);
            } else if (twoFactorEnabled.value && confirming.value) {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> Terminez l&#39;activation de l&#39;authentification à deux facteurs. </h3>`);
            } else {
              _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> Vous n&#39;avez pas activé l&#39;authentification à deux facteurs. </h3>`);
            }
            _push2(`<div class="mt-3 max-w-xl text-sm text-gray-600"${_scopeId}><p${_scopeId}> Lorsque l&#39;authentification à deux facteurs est activée, un code sécurisé et aléatoire vous sera demandé lors de la connexion. Vous pourrez récupérer ce code via l&#39;application Google Authenticator de votre téléphone. </p></div>`);
            if (twoFactorEnabled.value) {
              _push2(`<div${_scopeId}>`);
              if (qrCode.value) {
                _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}>`);
                if (confirming.value) {
                  _push2(`<p class="font-semibold"${_scopeId}> Pour terminer l&#39;activation de l&#39;authentification à deux facteurs, scannez le QR code ci-dessous avec votre application d&#39;authentification ou entrez la clé de configuration et saisissez le code OTP généré. </p>`);
                } else {
                  _push2(`<p${_scopeId}> L&#39;authentification à deux facteurs est maintenant activée. Scannez le QR code ci-dessous avec votre application d&#39;authentification ou entrez la clé de configuration. </p>`);
                }
                _push2(`</div><div class="mt-4 p-2 inline-block bg-white"${_scopeId}>${qrCode.value ?? ""}</div>`);
                if (setupKey.value) {
                  _push2(`<div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Clé de configuration : <span${_scopeId}>${setupKey.value ?? ""}</span></p></div>`);
                } else {
                  _push2(`<!---->`);
                }
                if (confirming.value) {
                  _push2(`<div class="mt-4"${_scopeId}>`);
                  _push2(ssrRenderComponent(_sfc_main$2E, {
                    for: "code",
                    value: "Code"
                  }, null, _parent2, _scopeId));
                  _push2(ssrRenderComponent(_sfc_main$2A, {
                    id: "code",
                    modelValue: unref(confirmationForm).code,
                    "onUpdate:modelValue": ($event) => unref(confirmationForm).code = $event,
                    type: "text",
                    name: "code",
                    class: "block mt-1 w-1/2",
                    inputmode: "numeric",
                    autofocus: "",
                    autocomplete: "one-time-code",
                    onKeyup: confirmTwoFactorAuthentication
                  }, null, _parent2, _scopeId));
                  _push2(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(confirmationForm).errors.code,
                    class: "mt-2"
                  }, null, _parent2, _scopeId));
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`</div>`);
              } else {
                _push2(`<!---->`);
              }
              if (recoveryCodes.value.length > 0 && !confirming.value) {
                _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Stockez ces codes de récupération dans un gestionnaire de mots de passe sécurisé. Ils vous permettront d&#39;accéder à votre compte en cas de perte de votre appareil d&#39;authentification à deux facteurs. </p></div><div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg"${_scopeId}><!--[-->`);
                ssrRenderList(recoveryCodes.value, (code) => {
                  _push2(`<div${_scopeId}>${ssrInterpolate(code)}</div>`);
                });
                _push2(`<!--]--></div></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="mt-5"${_scopeId}>`);
            if (!twoFactorEnabled.value) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: enableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_sfc_main$2D, {
                      type: "button",
                      class: { "opacity-25": enabling.value },
                      disabled: enabling.value
                    }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(` Activer `);
                        } else {
                          return [
                            createTextVNode(" Activer ")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_sfc_main$2D, {
                        type: "button",
                        class: { "opacity-25": enabling.value },
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Activer ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: confirmTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2D, {
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Confirmer `);
                          } else {
                            return [
                              createTextVNode(" Confirmer ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2D, {
                        key: 0,
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Confirmer ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: regenerateRecoveryCodes }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (recoveryCodes.value.length > 0 && !confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, { class: "me-3" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Régénérer les codes de récupération `);
                          } else {
                            return [
                              createTextVNode(" Régénérer les codes de récupération ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Régénérer les codes de récupération ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: showRecoveryCodes }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (recoveryCodes.value.length === 0 && !confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, { class: "me-3" }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Afficher les codes de récupération `);
                          } else {
                            return [
                              createTextVNode(" Afficher les codes de récupération ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      recoveryCodes.value.length === 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Afficher les codes de récupération ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2C, {
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Annuler `);
                          } else {
                            return [
                              createTextVNode(" Annuler ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Annuler ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if (!confirming.value) {
                      _push3(ssrRenderComponent(_sfc_main$2I, {
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Désactiver `);
                          } else {
                            return [
                              createTextVNode(" Désactiver ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                  } else {
                    return [
                      !confirming.value ? (openBlock(), createBlock(_sfc_main$2I, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Désactiver ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
            }
            _push2(`</div>`);
          } else {
            return [
              twoFactorEnabled.value && !confirming.value ? (openBlock(), createBlock("h3", {
                key: 0,
                class: "text-lg font-medium text-gray-900"
              }, " Vous avez activé l'authentification à deux facteurs. ")) : twoFactorEnabled.value && confirming.value ? (openBlock(), createBlock("h3", {
                key: 1,
                class: "text-lg font-medium text-gray-900"
              }, " Terminez l'activation de l'authentification à deux facteurs. ")) : (openBlock(), createBlock("h3", {
                key: 2,
                class: "text-lg font-medium text-gray-900"
              }, " Vous n'avez pas activé l'authentification à deux facteurs. ")),
              createVNode("div", { class: "mt-3 max-w-xl text-sm text-gray-600" }, [
                createVNode("p", null, " Lorsque l'authentification à deux facteurs est activée, un code sécurisé et aléatoire vous sera demandé lors de la connexion. Vous pourrez récupérer ce code via l'application Google Authenticator de votre téléphone. ")
              ]),
              twoFactorEnabled.value ? (openBlock(), createBlock("div", { key: 3 }, [
                qrCode.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                    confirming.value ? (openBlock(), createBlock("p", {
                      key: 0,
                      class: "font-semibold"
                    }, " Pour terminer l'activation de l'authentification à deux facteurs, scannez le QR code ci-dessous avec votre application d'authentification ou entrez la clé de configuration et saisissez le code OTP généré. ")) : (openBlock(), createBlock("p", { key: 1 }, " L'authentification à deux facteurs est maintenant activée. Scannez le QR code ci-dessous avec votre application d'authentification ou entrez la clé de configuration. "))
                  ]),
                  createVNode("div", {
                    class: "mt-4 p-2 inline-block bg-white",
                    innerHTML: qrCode.value
                  }, null, 8, ["innerHTML"]),
                  setupKey.value ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "mt-4 max-w-xl text-sm text-gray-600"
                  }, [
                    createVNode("p", { class: "font-semibold" }, [
                      createTextVNode(" Clé de configuration : "),
                      createVNode("span", { innerHTML: setupKey.value }, null, 8, ["innerHTML"])
                    ])
                  ])) : createCommentVNode("", true),
                  confirming.value ? (openBlock(), createBlock("div", {
                    key: 1,
                    class: "mt-4"
                  }, [
                    createVNode(_sfc_main$2E, {
                      for: "code",
                      value: "Code"
                    }),
                    createVNode(_sfc_main$2A, {
                      id: "code",
                      modelValue: unref(confirmationForm).code,
                      "onUpdate:modelValue": ($event) => unref(confirmationForm).code = $event,
                      type: "text",
                      name: "code",
                      class: "block mt-1 w-1/2",
                      inputmode: "numeric",
                      autofocus: "",
                      autocomplete: "one-time-code",
                      onKeyup: withKeys(confirmTwoFactorAuthentication, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(confirmationForm).errors.code,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])) : createCommentVNode("", true)
                ])) : createCommentVNode("", true),
                recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                    createVNode("p", { class: "font-semibold" }, " Stockez ces codes de récupération dans un gestionnaire de mots de passe sécurisé. Ils vous permettront d'accéder à votre compte en cas de perte de votre appareil d'authentification à deux facteurs. ")
                  ]),
                  createVNode("div", { class: "grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList(recoveryCodes.value, (code) => {
                      return openBlock(), createBlock("div", { key: code }, toDisplayString(code), 1);
                    }), 128))
                  ])
                ])) : createCommentVNode("", true)
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "mt-5" }, [
                !twoFactorEnabled.value ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_sfc_main$1h, { onConfirmed: enableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      createVNode(_sfc_main$2D, {
                        type: "button",
                        class: { "opacity-25": enabling.value },
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Activer ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])
                    ]),
                    _: 1
                  })
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  createVNode(_sfc_main$1h, { onConfirmed: confirmTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2D, {
                        key: 0,
                        type: "button",
                        class: ["me-3", { "opacity-25": enabling.value }],
                        disabled: enabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Confirmer ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: regenerateRecoveryCodes }, {
                    default: withCtx(() => [
                      recoveryCodes.value.length > 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Régénérer les codes de récupération ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: showRecoveryCodes }, {
                    default: withCtx(() => [
                      recoveryCodes.value.length === 0 && !confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: "me-3"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Afficher les codes de récupération ")
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      confirming.value ? (openBlock(), createBlock(_sfc_main$2C, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Annuler ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$1h, { onConfirmed: disableTwoFactorAuthentication }, {
                    default: withCtx(() => [
                      !confirming.value ? (openBlock(), createBlock(_sfc_main$2I, {
                        key: 0,
                        class: { "opacity-25": disabling.value },
                        disabled: disabling.value
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Désactiver ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled"])) : createCommentVNode("", true)
                    ]),
                    _: 1
                  })
                ]))
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/TwoFactorAuthenticationForm.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
const __vite_glob_0_94 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$t
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$s = {
  __name: "AuthSetting",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    },
    confirmsTwoFactorAuthentication: {
      type: Boolean,
      default: null
    }
  },
  setup(__props) {
    const editPwd = ref(false);
    const setup2fa = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Dialog = __unplugin_components_0$2;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Dialog, {
        visible: setup2fa.value,
        "onUpdate:visible": ($event) => setup2fa.value = $event,
        style: { width: "50rem" },
        modal: "",
        header: "Paramétrer l'authentification à 2 facteurs",
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (_ctx.$page.props.jetstream.canManageTwoFactorAuthentication) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_sfc_main$t, {
                "requires-confirmation": __props.confirmsTwoFactorAuthentication,
                class: "mt-10 sm:mt-0"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              _ctx.$page.props.jetstream.canManageTwoFactorAuthentication ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode(_sfc_main$t, {
                  "requires-confirmation": __props.confirmsTwoFactorAuthentication,
                  class: "mt-10 sm:mt-0"
                }, null, 8, ["requires-confirmation"])
              ])) : createCommentVNode("", true)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(ssrRenderComponent(_component_Dialog, {
        visible: editPwd.value,
        "onUpdate:visible": ($event) => editPwd.value = $event,
        style: { width: "50rem" },
        modal: "",
        breakpoints: unref(dialogBreakpoints)
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_sfc_main$2w, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(_sfc_main$2w)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="flex flex-col gap-5 lg:gap-7.5" id="auth_settings"><div class="card min-w-full"><div class="card-header"><h3 class="card-title">Authentification</h3></div><div class="card-table scrollable-x-auto pb-3"><table class="table align-middle text-sm text-gray-500"><tbody><tr><td class="text-gray-600 font-normal"> Mot de passe </td><td class="text-gray-700 font-normal">${ssrInterpolate(__props.user.last_password_updated_at ?? "A mettre à jour régulièrement")}</td><td class="text-end"><a class="btn btn-sm btn-icon btn-icon-lg link" href="javascript:void(0);"><i class="ki-filled ki-notepad-edit"></i></a></td></tr>`);
      if (typeof __props.confirmsTwoFactorAuthentication === "boolean") {
        _push(`<tr><td class="text-gray-600 font-normal">2FA</td><td class="text-gray-700 font-normal"> Authentification à 2 facteurs </td><td class="text-end"><a class="btn btn-link btn-sm" href="javascript:void(0);"> Paramétrer </a></td></tr>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</tbody></table></div></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/AuthSetting.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
const __vite_glob_0_90 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$s
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$r = {
  __name: "AccountSetting",
  __ssrInlineRender: true,
  props: {
    user: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const form = useForm({
      two_step_verification: Boolean(props.user.account.two_step_verification),
      allow_tracking: Boolean(props.user.account.allow_tracking)
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "flex flex-col gap-5 lg:gap-7.5",
        id: "account_settings"
      }, _attrs))}><div class="card"><div class="card-header"><h3 class="card-title">Paramètres du compte</h3></div><div class="card-group flex items-center justify-between py-4 gap-2.5"><div class="flex items-center gap-3.5"><div class="relative size-[50px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="ki-filled ki-shield-tick text-2xl text-gray-500"></i></div></div><div class="flex flex-col gap-0.5"><span class="flex items-center gap-1.5 leading-none font-medium text-sm text-gray-900"> Activer la vérification à deux étapes </span><span class="text-2sm text-gray-700"> Ajoutes une couche supplémentaire de sécurité avec la verification à deux étapes. </span></div></div><div class="flex items-center gap-2.5"><div class="switch switch-sm"><input${ssrIncludeBooleanAttr(Array.isArray(unref(form).two_step_verification) ? ssrLooseContain(unref(form).two_step_verification, null) : unref(form).two_step_verification) ? " checked" : ""} name="two_step_verification" type="checkbox"></div></div></div><div class="card-group flex items-center justify-between py-4 gap-2.5"><div class="flex items-center gap-3.5"><div class="relative size-[50px] shrink-0"><svg class="w-full h-full stroke-gray-300 fill-gray-100" fill="none" height="48" viewBox="0 0 44 48" width="44" xmlns="http://www.w3.org/2000/svg"><path d="M16 2.4641C19.7128 0.320509 24.2872 0.320508 28 2.4641L37.6506 8.0359C41.3634 10.1795 43.6506 14.141 43.6506
			18.4282V29.5718C43.6506 33.859 41.3634 37.8205 37.6506 39.9641L28 45.5359C24.2872 47.6795 19.7128 47.6795 16 45.5359L6.34937
			39.9641C2.63655 37.8205 0.349365 33.859 0.349365 29.5718V18.4282C0.349365 14.141 2.63655 10.1795 6.34937 8.0359L16 2.4641Z" fill=""></path><path d="M16.25 2.89711C19.8081 0.842838 24.1919 0.842837 27.75 2.89711L37.4006 8.46891C40.9587 10.5232 43.1506 14.3196 43.1506
			18.4282V29.5718C43.1506 33.6804 40.9587 37.4768 37.4006 39.5311L27.75 45.1029C24.1919 47.1572 19.8081 47.1572 16.25 45.1029L6.59937
			39.5311C3.04125 37.4768 0.849365 33.6803 0.849365 29.5718V18.4282C0.849365 14.3196 3.04125 10.5232 6.59937 8.46891L16.25 2.89711Z" stroke=""></path></svg><div class="absolute inset-0 flex items-center justify-center"><i class="ki-filled ki-parcel-tracking text-2xl text-gray-500"></i></div></div><div class="flex flex-col gap-0.5"><span class="flex items-center gap-1.5 leading-none font-medium text-sm text-gray-900"> Autoriser le tracking </span><span class="text-2sm text-gray-700"> Tu autorises le tracking des cookies et des données de localisation </span></div></div><div class="flex items-center gap-2.5"><div class="switch switch-sm"><input${ssrIncludeBooleanAttr(unref(form).allow_tracking ? true : false) ? " checked" : ""}${ssrIncludeBooleanAttr(Array.isArray(unref(form).allow_tracking) ? ssrLooseContain(unref(form).allow_tracking, null) : unref(form).allow_tracking) ? " checked" : ""} name="allow_tracking" type="checkbox"></div></div></div></div></div>`);
    };
  }
};
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/AccountSetting.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
const __vite_glob_0_89 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$r
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$q = {
  __name: "Index",
  __ssrInlineRender: true,
  props: {
    confirmsTwoFactorAuthentication: Boolean,
    sessions: Array
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: "Paramètres" }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex grow gap-5 lg:gap-7.5"${_scopeId}><div class="hidden lg:block w-[230px] shrink-0"${_scopeId}>`);
            _push2(ssrRenderComponent(SettingsSide, null, null, _parent2, _scopeId));
            _push2(`</div><div class="flex flex-col items-stretch grow gap-5 lg:gap-7.5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$s, {
              user: _ctx.$page.props.auth.user,
              "confirms-two-factor-authentication": __props.confirmsTwoFactorAuthentication
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$r, {
              user: _ctx.$page.props.auth.user
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(SectionBorder, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$u, null, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode("div", { class: "flex grow gap-5 lg:gap-7.5" }, [
                createVNode("div", { class: "hidden lg:block w-[230px] shrink-0" }, [
                  createVNode(SettingsSide)
                ]),
                createVNode("div", { class: "flex flex-col items-stretch grow gap-5 lg:gap-7.5" }, [
                  createVNode(_sfc_main$s, {
                    user: _ctx.$page.props.auth.user,
                    "confirms-two-factor-authentication": __props.confirmsTwoFactorAuthentication
                  }, null, 8, ["user", "confirms-two-factor-authentication"]),
                  createVNode(SectionBorder),
                  createVNode(_sfc_main$r, {
                    user: _ctx.$page.props.auth.user
                  }, null, 8, ["user"]),
                  createVNode(SectionBorder),
                  createVNode(_sfc_main$u)
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Index.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
const __vite_glob_0_88 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$p = {
  __name: "LogoutOtherBrowserSessionsForm",
  __ssrInlineRender: true,
  props: {
    sessions: Array
  },
  setup(__props) {
    const confirmingLogout = ref(false);
    const passwordInput = ref(null);
    const form = useForm({
      password: ""
    });
    const confirmLogout = () => {
      confirmingLogout.value = true;
      setTimeout(() => passwordInput.value.focus(), 250);
    };
    const logoutOtherBrowserSessions = () => {
      form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => closeModal(),
        onError: () => passwordInput.value.focus(),
        onFinish: () => form.reset()
      });
    };
    const closeModal = () => {
      confirmingLogout.value = false;
      form.reset();
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$2M, _attrs, {
        title: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Browser Sessions `);
          } else {
            return [
              createTextVNode(" Browser Sessions ")
            ];
          }
        }),
        description: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Manage and log out your active sessions on other browsers and devices. `);
          } else {
            return [
              createTextVNode(" Manage and log out your active sessions on other browsers and devices. ")
            ];
          }
        }),
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. </div>`);
            if (__props.sessions.length > 0) {
              _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
              ssrRenderList(__props.sessions, (session, i2) => {
                _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
                if (session.agent.is_desktop) {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"${_scopeId}></path></svg>`);
                } else {
                  _push2(`<svg class="size-8 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"${_scopeId}></path></svg>`);
                }
                _push2(`</div><div class="ms-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${ssrInterpolate(session.agent.platform ? session.agent.platform : "Unknown")} - ${ssrInterpolate(session.agent.browser ? session.agent.browser : "Unknown")}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${ssrInterpolate(session.ip_address)}, `);
                if (session.is_current_device) {
                  _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
                } else {
                  _push2(`<span${_scopeId}>Last active ${ssrInterpolate(session.last_active)}</span>`);
                }
                _push2(`</div></div></div></div>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex items-center mt-5"${_scopeId}>`);
            _push2(ssrRenderComponent(_sfc_main$2D, { onClick: confirmLogout }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out Other Browser Sessions `);
                } else {
                  return [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$2O, {
              on: unref(form).recentlySuccessful,
              class: "ms-3"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Done. `);
                } else {
                  return [
                    createTextVNode(" Done. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_sfc_main$2H, {
              show: confirmingLogout.value,
              onClose: closeModal
            }, {
              title: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Log Out Other Browser Sessions `);
                } else {
                  return [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ];
                }
              }),
              content: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_sfc_main$2A, {
                    ref_key: "passwordInput",
                    ref: passwordInput,
                    modelValue: unref(form).password,
                    "onUpdate:modelValue": ($event) => unref(form).password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    autocomplete: "current-password",
                    onKeyup: logoutOtherBrowserSessions
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2F, {
                    message: unref(form).errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div>`);
                } else {
                  return [
                    createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_sfc_main$2A, {
                        ref_key: "passwordInput",
                        ref: passwordInput,
                        modelValue: unref(form).password,
                        "onUpdate:modelValue": ($event) => unref(form).password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        autocomplete: "current-password",
                        onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      createVNode(_sfc_main$2F, {
                        message: unref(form).errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ];
                }
              }),
              footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Cancel `);
                      } else {
                        return [
                          createTextVNode(" Cancel ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Log Out Other Browser Sessions `);
                      } else {
                        return [
                          createTextVNode(" Log Out Other Browser Sessions ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_sfc_main$2C, { onClick: closeModal }, {
                      default: withCtx(() => [
                        createTextVNode(" Cancel ")
                      ]),
                      _: 1
                    }),
                    createVNode(_sfc_main$2D, {
                      class: ["ms-3", { "opacity-25": unref(form).processing }],
                      disabled: unref(form).processing,
                      onClick: logoutOtherBrowserSessions
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Log Out Other Browser Sessions ")
                      ]),
                      _: 1
                    }, 8, ["class", "disabled"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. "),
              __props.sessions.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-5 space-y-6"
              }, [
                (openBlock(true), createBlock(Fragment, null, renderList(__props.sessions, (session, i2) => {
                  return openBlock(), createBlock("div", {
                    key: i2,
                    class: "flex items-center"
                  }, [
                    createVNode("div", null, [
                      session.agent.is_desktop ? (openBlock(), createBlock("svg", {
                        key: 0,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
                        })
                      ])) : (openBlock(), createBlock("svg", {
                        key: 1,
                        class: "size-8 text-gray-500",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"
                        })
                      ]))
                    ]),
                    createVNode("div", { class: "ms-3" }, [
                      createVNode("div", { class: "text-sm text-gray-600" }, toDisplayString(session.agent.platform ? session.agent.platform : "Unknown") + " - " + toDisplayString(session.agent.browser ? session.agent.browser : "Unknown"), 1),
                      createVNode("div", null, [
                        createVNode("div", { class: "text-xs text-gray-500" }, [
                          createTextVNode(toDisplayString(session.ip_address) + ", ", 1),
                          session.is_current_device ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: "text-green-500 font-semibold"
                          }, "This device")) : (openBlock(), createBlock("span", { key: 1 }, "Last active " + toDisplayString(session.last_active), 1))
                        ])
                      ])
                    ])
                  ]);
                }), 128))
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "flex items-center mt-5" }, [
                createVNode(_sfc_main$2D, { onClick: confirmLogout }, {
                  default: withCtx(() => [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ]),
                  _: 1
                }),
                createVNode(_sfc_main$2O, {
                  on: unref(form).recentlySuccessful,
                  class: "ms-3"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Done. ")
                  ]),
                  _: 1
                }, 8, ["on"])
              ]),
              createVNode(_sfc_main$2H, {
                show: confirmingLogout.value,
                onClose: closeModal
              }, {
                title: withCtx(() => [
                  createTextVNode(" Log Out Other Browser Sessions ")
                ]),
                content: withCtx(() => [
                  createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_sfc_main$2A, {
                      ref_key: "passwordInput",
                      ref: passwordInput,
                      modelValue: unref(form).password,
                      "onUpdate:modelValue": ($event) => unref(form).password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      autocomplete: "current-password",
                      onKeyup: withKeys(logoutOtherBrowserSessions, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode(_sfc_main$2F, {
                      message: unref(form).errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ]),
                footer: withCtx(() => [
                  createVNode(_sfc_main$2C, { onClick: closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }),
                  createVNode(_sfc_main$2D, {
                    class: ["ms-3", { "opacity-25": unref(form).processing }],
                    disabled: unref(form).processing,
                    onClick: logoutOtherBrowserSessions
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Log Out Other Browser Sessions ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["show"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
};
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Settings/Partials/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
const __vite_glob_0_92 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _sfc_main$p
}, Symbol.toStringTag, { value: "Module" }));
function t() {
  return t = Object.assign ? Object.assign.bind() : function(t4) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var r2 = arguments[e2];
      for (var n2 in r2) ({}).hasOwnProperty.call(r2, n2) && (t4[n2] = r2[n2]);
    }
    return t4;
  }, t.apply(null, arguments);
}
var e = String.prototype.replace, r = /%20/g, n = "RFC3986", o = { default: n, formatters: { RFC1738: function(t4) {
  return e.call(t4, r, "+");
}, RFC3986: function(t4) {
  return String(t4);
} }, RFC1738: "RFC1738" }, i = Object.prototype.hasOwnProperty, u = Array.isArray, a = function() {
  for (var t4 = [], e2 = 0; e2 < 256; ++e2) t4.push("%" + ((e2 < 16 ? "0" : "") + e2.toString(16)).toUpperCase());
  return t4;
}(), s = function(t4, e2) {
  for (var r2 = e2 && e2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, n2 = 0; n2 < t4.length; ++n2) void 0 !== t4[n2] && (r2[n2] = t4[n2]);
  return r2;
}, f = { arrayToObject: s, assign: function(t4, e2) {
  return Object.keys(e2).reduce(function(t5, r2) {
    return t5[r2] = e2[r2], t5;
  }, t4);
}, combine: function(t4, e2) {
  return [].concat(t4, e2);
}, compact: function(t4) {
  for (var e2 = [{ obj: { o: t4 }, prop: "o" }], r2 = [], n2 = 0; n2 < e2.length; ++n2) for (var o2 = e2[n2], i2 = o2.obj[o2.prop], a2 = Object.keys(i2), s2 = 0; s2 < a2.length; ++s2) {
    var f2 = a2[s2], c2 = i2[f2];
    "object" == typeof c2 && null !== c2 && -1 === r2.indexOf(c2) && (e2.push({ obj: i2, prop: f2 }), r2.push(c2));
  }
  return function(t5) {
    for (; t5.length > 1; ) {
      var e3 = t5.pop(), r3 = e3.obj[e3.prop];
      if (u(r3)) {
        for (var n3 = [], o3 = 0; o3 < r3.length; ++o3) void 0 !== r3[o3] && n3.push(r3[o3]);
        e3.obj[e3.prop] = n3;
      }
    }
  }(e2), t4;
}, decode: function(t4, e2, r2) {
  var n2 = t4.replace(/\+/g, " ");
  if ("iso-8859-1" === r2) return n2.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(n2);
  } catch (t5) {
    return n2;
  }
}, encode: function(t4, e2, r2, n2, i2) {
  if (0 === t4.length) return t4;
  var u2 = t4;
  if ("symbol" == typeof t4 ? u2 = Symbol.prototype.toString.call(t4) : "string" != typeof t4 && (u2 = String(t4)), "iso-8859-1" === r2) return escape(u2).replace(/%u[0-9a-f]{4}/gi, function(t5) {
    return "%26%23" + parseInt(t5.slice(2), 16) + "%3B";
  });
  for (var s2 = "", f2 = 0; f2 < u2.length; ++f2) {
    var c2 = u2.charCodeAt(f2);
    45 === c2 || 46 === c2 || 95 === c2 || 126 === c2 || c2 >= 48 && c2 <= 57 || c2 >= 65 && c2 <= 90 || c2 >= 97 && c2 <= 122 || i2 === o.RFC1738 && (40 === c2 || 41 === c2) ? s2 += u2.charAt(f2) : c2 < 128 ? s2 += a[c2] : c2 < 2048 ? s2 += a[192 | c2 >> 6] + a[128 | 63 & c2] : c2 < 55296 || c2 >= 57344 ? s2 += a[224 | c2 >> 12] + a[128 | c2 >> 6 & 63] + a[128 | 63 & c2] : (c2 = 65536 + ((1023 & c2) << 10 | 1023 & u2.charCodeAt(f2 += 1)), s2 += a[240 | c2 >> 18] + a[128 | c2 >> 12 & 63] + a[128 | c2 >> 6 & 63] + a[128 | 63 & c2]);
  }
  return s2;
}, isBuffer: function(t4) {
  return !(!t4 || "object" != typeof t4 || !(t4.constructor && t4.constructor.isBuffer && t4.constructor.isBuffer(t4)));
}, isRegExp: function(t4) {
  return "[object RegExp]" === Object.prototype.toString.call(t4);
}, maybeMap: function(t4, e2) {
  if (u(t4)) {
    for (var r2 = [], n2 = 0; n2 < t4.length; n2 += 1) r2.push(e2(t4[n2]));
    return r2;
  }
  return e2(t4);
}, merge: function t2(e2, r2, n2) {
  if (!r2) return e2;
  if ("object" != typeof r2) {
    if (u(e2)) e2.push(r2);
    else {
      if (!e2 || "object" != typeof e2) return [e2, r2];
      (n2 && (n2.plainObjects || n2.allowPrototypes) || !i.call(Object.prototype, r2)) && (e2[r2] = true);
    }
    return e2;
  }
  if (!e2 || "object" != typeof e2) return [e2].concat(r2);
  var o2 = e2;
  return u(e2) && !u(r2) && (o2 = s(e2, n2)), u(e2) && u(r2) ? (r2.forEach(function(r3, o3) {
    if (i.call(e2, o3)) {
      var u2 = e2[o3];
      u2 && "object" == typeof u2 && r3 && "object" == typeof r3 ? e2[o3] = t2(u2, r3, n2) : e2.push(r3);
    } else e2[o3] = r3;
  }), e2) : Object.keys(r2).reduce(function(e3, o3) {
    var u2 = r2[o3];
    return e3[o3] = i.call(e3, o3) ? t2(e3[o3], u2, n2) : u2, e3;
  }, o2);
} }, c = Object.prototype.hasOwnProperty, l = { brackets: function(t4) {
  return t4 + "[]";
}, comma: "comma", indices: function(t4, e2) {
  return t4 + "[" + e2 + "]";
}, repeat: function(t4) {
  return t4;
} }, p = Array.isArray, h = String.prototype.split, y = Array.prototype.push, d = function(t4, e2) {
  y.apply(t4, p(e2) ? e2 : [e2]);
}, g = Date.prototype.toISOString, b = o.default, v = { addQueryPrefix: false, allowDots: false, charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encoder: f.encode, encodeValuesOnly: false, format: b, formatter: o.formatters[b], indices: false, serializeDate: function(t4) {
  return g.call(t4);
}, skipNulls: false, strictNullHandling: false }, m = function t3(e2, r2, n2, o2, i2, u2, a2, s2, c2, l2, y2, g2, b2, m2) {
  var j2, w2 = e2;
  if ("function" == typeof a2 ? w2 = a2(r2, w2) : w2 instanceof Date ? w2 = l2(w2) : "comma" === n2 && p(w2) && (w2 = f.maybeMap(w2, function(t4) {
    return t4 instanceof Date ? l2(t4) : t4;
  })), null === w2) {
    if (o2) return u2 && !b2 ? u2(r2, v.encoder, m2, "key", y2) : r2;
    w2 = "";
  }
  if ("string" == typeof (j2 = w2) || "number" == typeof j2 || "boolean" == typeof j2 || "symbol" == typeof j2 || "bigint" == typeof j2 || f.isBuffer(w2)) {
    if (u2) {
      var $2 = b2 ? r2 : u2(r2, v.encoder, m2, "key", y2);
      if ("comma" === n2 && b2) {
        for (var O2 = h.call(String(w2), ","), E2 = "", R2 = 0; R2 < O2.length; ++R2) E2 += (0 === R2 ? "" : ",") + g2(u2(O2[R2], v.encoder, m2, "value", y2));
        return [g2($2) + "=" + E2];
      }
      return [g2($2) + "=" + g2(u2(w2, v.encoder, m2, "value", y2))];
    }
    return [g2(r2) + "=" + g2(String(w2))];
  }
  var S2, x2 = [];
  if (void 0 === w2) return x2;
  if ("comma" === n2 && p(w2)) S2 = [{ value: w2.length > 0 ? w2.join(",") || null : void 0 }];
  else if (p(a2)) S2 = a2;
  else {
    var N2 = Object.keys(w2);
    S2 = s2 ? N2.sort(s2) : N2;
  }
  for (var T2 = 0; T2 < S2.length; ++T2) {
    var k2 = S2[T2], C = "object" == typeof k2 && void 0 !== k2.value ? k2.value : w2[k2];
    if (!i2 || null !== C) {
      var _ = p(w2) ? "function" == typeof n2 ? n2(r2, k2) : r2 : r2 + (c2 ? "." + k2 : "[" + k2 + "]");
      d(x2, t3(C, _, n2, o2, i2, u2, a2, s2, c2, l2, y2, g2, b2, m2));
    }
  }
  return x2;
}, j = Object.prototype.hasOwnProperty, w = Array.isArray, $ = { allowDots: false, allowPrototypes: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decoder: f.decode, delimiter: "&", depth: 5, ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, O = function(t4) {
  return t4.replace(/&#(\d+);/g, function(t5, e2) {
    return String.fromCharCode(parseInt(e2, 10));
  });
}, E = function(t4, e2) {
  return t4 && "string" == typeof t4 && e2.comma && t4.indexOf(",") > -1 ? t4.split(",") : t4;
}, R = function(t4, e2, r2, n2) {
  if (t4) {
    var o2 = r2.allowDots ? t4.replace(/\.([^.[]+)/g, "[$1]") : t4, i2 = /(\[[^[\]]*])/g, u2 = r2.depth > 0 && /(\[[^[\]]*])/.exec(o2), a2 = u2 ? o2.slice(0, u2.index) : o2, s2 = [];
    if (a2) {
      if (!r2.plainObjects && j.call(Object.prototype, a2) && !r2.allowPrototypes) return;
      s2.push(a2);
    }
    for (var f2 = 0; r2.depth > 0 && null !== (u2 = i2.exec(o2)) && f2 < r2.depth; ) {
      if (f2 += 1, !r2.plainObjects && j.call(Object.prototype, u2[1].slice(1, -1)) && !r2.allowPrototypes) return;
      s2.push(u2[1]);
    }
    return u2 && s2.push("[" + o2.slice(u2.index) + "]"), function(t5, e3, r3, n3) {
      for (var o3 = n3 ? e3 : E(e3, r3), i3 = t5.length - 1; i3 >= 0; --i3) {
        var u3, a3 = t5[i3];
        if ("[]" === a3 && r3.parseArrays) u3 = [].concat(o3);
        else {
          u3 = r3.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var s3 = "[" === a3.charAt(0) && "]" === a3.charAt(a3.length - 1) ? a3.slice(1, -1) : a3, f3 = parseInt(s3, 10);
          r3.parseArrays || "" !== s3 ? !isNaN(f3) && a3 !== s3 && String(f3) === s3 && f3 >= 0 && r3.parseArrays && f3 <= r3.arrayLimit ? (u3 = [])[f3] = o3 : "__proto__" !== s3 && (u3[s3] = o3) : u3 = { 0: o3 };
        }
        o3 = u3;
      }
      return o3;
    }(s2, e2, r2, n2);
  }
}, S = function(t4, e2) {
  var r2 = /* @__PURE__ */ function(t5) {
    return $;
  }();
  if ("" === t4 || null == t4) return r2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var n2 = "string" == typeof t4 ? function(t5, e3) {
    var r3, n3 = {}, o3 = (e3.ignoreQueryPrefix ? t5.replace(/^\?/, "") : t5).split(e3.delimiter, Infinity === e3.parameterLimit ? void 0 : e3.parameterLimit), i3 = -1, u3 = e3.charset;
    if (e3.charsetSentinel) for (r3 = 0; r3 < o3.length; ++r3) 0 === o3[r3].indexOf("utf8=") && ("utf8=%E2%9C%93" === o3[r3] ? u3 = "utf-8" : "utf8=%26%2310003%3B" === o3[r3] && (u3 = "iso-8859-1"), i3 = r3, r3 = o3.length);
    for (r3 = 0; r3 < o3.length; ++r3) if (r3 !== i3) {
      var a3, s3, c2 = o3[r3], l2 = c2.indexOf("]="), p2 = -1 === l2 ? c2.indexOf("=") : l2 + 1;
      -1 === p2 ? (a3 = e3.decoder(c2, $.decoder, u3, "key"), s3 = e3.strictNullHandling ? null : "") : (a3 = e3.decoder(c2.slice(0, p2), $.decoder, u3, "key"), s3 = f.maybeMap(E(c2.slice(p2 + 1), e3), function(t6) {
        return e3.decoder(t6, $.decoder, u3, "value");
      })), s3 && e3.interpretNumericEntities && "iso-8859-1" === u3 && (s3 = O(s3)), c2.indexOf("[]=") > -1 && (s3 = w(s3) ? [s3] : s3), n3[a3] = j.call(n3, a3) ? f.combine(n3[a3], s3) : s3;
    }
    return n3;
  }(t4, r2) : t4, o2 = r2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, i2 = Object.keys(n2), u2 = 0; u2 < i2.length; ++u2) {
    var a2 = i2[u2], s2 = R(a2, n2[a2], r2, "string" == typeof t4);
    o2 = f.merge(o2, s2, r2);
  }
  return f.compact(o2);
};
class x {
  constructor(t4, e2, r2) {
    var n2, o2;
    this.name = t4, this.definition = e2, this.bindings = null != (n2 = e2.bindings) ? n2 : {}, this.wheres = null != (o2 = e2.wheres) ? o2 : {}, this.config = r2;
  }
  get template() {
    const t4 = `${this.origin}/${this.definition.uri}`.replace(/\/+$/, "");
    return "" === t4 ? "/" : t4;
  }
  get origin() {
    return this.config.absolute ? this.definition.domain ? `${this.config.url.match(/^\w+:\/\//)[0]}${this.definition.domain}${this.config.port ? `:${this.config.port}` : ""}` : this.config.url : "";
  }
  get parameterSegments() {
    var t4, e2;
    return null != (t4 = null == (e2 = this.template.match(/{[^}?]+\??}/g)) ? void 0 : e2.map((t5) => ({ name: t5.replace(/{|\??}/g, ""), required: !/\?}$/.test(t5) }))) ? t4 : [];
  }
  matchesUrl(t4) {
    var e2;
    if (!this.definition.methods.includes("GET")) return false;
    const r2 = this.template.replace(/[.*+$()[\]]/g, "\\$&").replace(/(\/?){([^}?]*)(\??)}/g, (t5, e3, r3, n3) => {
      var o3;
      const i3 = `(?<${r3}>${(null == (o3 = this.wheres[r3]) ? void 0 : o3.replace(/(^\^)|(\$$)/g, "")) || "[^/?]+"})`;
      return n3 ? `(${e3}${i3})?` : `${e3}${i3}`;
    }).replace(/^\w+:\/\//, ""), [n2, o2] = t4.replace(/^\w+:\/\//, "").split("?"), i2 = null != (e2 = new RegExp(`^${r2}/?$`).exec(n2)) ? e2 : new RegExp(`^${r2}/?$`).exec(decodeURI(n2));
    if (i2) {
      for (const t5 in i2.groups) i2.groups[t5] = "string" == typeof i2.groups[t5] ? decodeURIComponent(i2.groups[t5]) : i2.groups[t5];
      return { params: i2.groups, query: S(o2) };
    }
    return false;
  }
  compile(t4) {
    return this.parameterSegments.length ? this.template.replace(/{([^}?]+)(\??)}/g, (e2, r2, n2) => {
      var o2, i2;
      if (!n2 && [null, void 0].includes(t4[r2])) throw new Error(`Ziggy error: '${r2}' parameter is required for route '${this.name}'.`);
      if (this.wheres[r2] && !new RegExp(`^${n2 ? `(${this.wheres[r2]})?` : this.wheres[r2]}$`).test(null != (i2 = t4[r2]) ? i2 : "")) throw new Error(`Ziggy error: '${r2}' parameter '${t4[r2]}' does not match required format '${this.wheres[r2]}' for route '${this.name}'.`);
      return encodeURI(null != (o2 = t4[r2]) ? o2 : "").replace(/%7C/g, "|").replace(/%25/g, "%").replace(/\$/g, "%24");
    }).replace(this.config.absolute ? /(\.[^/]+?)(\/\/)/ : /(^)(\/\/)/, "$1/").replace(/\/+$/, "") : this.template;
  }
}
class N extends String {
  constructor(e2, r2, n2 = true, o2) {
    if (super(), this.t = null != o2 ? o2 : "undefined" != typeof Ziggy ? Ziggy : null == globalThis ? void 0 : globalThis.Ziggy, this.t = t({}, this.t, { absolute: n2 }), e2) {
      if (!this.t.routes[e2]) throw new Error(`Ziggy error: route '${e2}' is not in the route list.`);
      this.i = new x(e2, this.t.routes[e2], this.t), this.u = this.l(r2);
    }
  }
  toString() {
    const e2 = Object.keys(this.u).filter((t4) => !this.i.parameterSegments.some(({ name: e3 }) => e3 === t4)).filter((t4) => "_query" !== t4).reduce((e3, r2) => t({}, e3, { [r2]: this.u[r2] }), {});
    return this.i.compile(this.u) + function(t4, e3) {
      var r2, n2 = t4, i2 = function(t5) {
        if (!t5) return v;
        if (null != t5.encoder && "function" != typeof t5.encoder) throw new TypeError("Encoder has to be a function.");
        var e4 = t5.charset || v.charset;
        if (void 0 !== t5.charset && "utf-8" !== t5.charset && "iso-8859-1" !== t5.charset) throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var r3 = o.default;
        if (void 0 !== t5.format) {
          if (!c.call(o.formatters, t5.format)) throw new TypeError("Unknown format option provided.");
          r3 = t5.format;
        }
        var n3 = o.formatters[r3], i3 = v.filter;
        return ("function" == typeof t5.filter || p(t5.filter)) && (i3 = t5.filter), { addQueryPrefix: "boolean" == typeof t5.addQueryPrefix ? t5.addQueryPrefix : v.addQueryPrefix, allowDots: void 0 === t5.allowDots ? v.allowDots : !!t5.allowDots, charset: e4, charsetSentinel: "boolean" == typeof t5.charsetSentinel ? t5.charsetSentinel : v.charsetSentinel, delimiter: void 0 === t5.delimiter ? v.delimiter : t5.delimiter, encode: "boolean" == typeof t5.encode ? t5.encode : v.encode, encoder: "function" == typeof t5.encoder ? t5.encoder : v.encoder, encodeValuesOnly: "boolean" == typeof t5.encodeValuesOnly ? t5.encodeValuesOnly : v.encodeValuesOnly, filter: i3, format: r3, formatter: n3, serializeDate: "function" == typeof t5.serializeDate ? t5.serializeDate : v.serializeDate, skipNulls: "boolean" == typeof t5.skipNulls ? t5.skipNulls : v.skipNulls, sort: "function" == typeof t5.sort ? t5.sort : null, strictNullHandling: "boolean" == typeof t5.strictNullHandling ? t5.strictNullHandling : v.strictNullHandling };
      }(e3);
      "function" == typeof i2.filter ? n2 = (0, i2.filter)("", n2) : p(i2.filter) && (r2 = i2.filter);
      var u2 = [];
      if ("object" != typeof n2 || null === n2) return "";
      var a2 = l[e3 && e3.arrayFormat in l ? e3.arrayFormat : e3 && "indices" in e3 ? e3.indices ? "indices" : "repeat" : "indices"];
      r2 || (r2 = Object.keys(n2)), i2.sort && r2.sort(i2.sort);
      for (var s2 = 0; s2 < r2.length; ++s2) {
        var f2 = r2[s2];
        i2.skipNulls && null === n2[f2] || d(u2, m(n2[f2], f2, a2, i2.strictNullHandling, i2.skipNulls, i2.encode ? i2.encoder : null, i2.filter, i2.sort, i2.allowDots, i2.serializeDate, i2.format, i2.formatter, i2.encodeValuesOnly, i2.charset));
      }
      var h2 = u2.join(i2.delimiter), y2 = true === i2.addQueryPrefix ? "?" : "";
      return i2.charsetSentinel && (y2 += "iso-8859-1" === i2.charset ? "utf8=%26%2310003%3B&" : "utf8=%E2%9C%93&"), h2.length > 0 ? y2 + h2 : "";
    }(t({}, e2, this.u._query), { addQueryPrefix: true, arrayFormat: "indices", encodeValuesOnly: true, skipNulls: true, encoder: (t4, e3) => "boolean" == typeof t4 ? Number(t4) : e3(t4) });
  }
  p(e2) {
    e2 ? this.t.absolute && e2.startsWith("/") && (e2 = this.h().host + e2) : e2 = this.v();
    let r2 = {};
    const [n2, o2] = Object.entries(this.t.routes).find(([t4, n3]) => r2 = new x(t4, n3, this.t).matchesUrl(e2)) || [void 0, void 0];
    return t({ name: n2 }, r2, { route: o2 });
  }
  v() {
    const { host: t4, pathname: e2, search: r2 } = this.h();
    return (this.t.absolute ? t4 + e2 : e2.replace(this.t.url.replace(/^\w*:\/\/[^/]+/, ""), "").replace(/^\/+/, "/")) + r2;
  }
  current(e2, r2) {
    const { name: n2, params: o2, query: i2, route: u2 } = this.p();
    if (!e2) return n2;
    const a2 = new RegExp(`^${e2.replace(/\./g, "\\.").replace(/\*/g, ".*")}$`).test(n2);
    if ([null, void 0].includes(r2) || !a2) return a2;
    const s2 = new x(n2, u2, this.t);
    r2 = this.l(r2, s2);
    const f2 = t({}, o2, i2);
    if (Object.values(r2).every((t4) => !t4) && !Object.values(f2).some((t4) => void 0 !== t4)) return true;
    const c2 = (t4, e3) => Object.entries(t4).every(([t5, r3]) => Array.isArray(r3) && Array.isArray(e3[t5]) ? r3.every((r4) => e3[t5].includes(r4)) : "object" == typeof r3 && "object" == typeof e3[t5] && null !== r3 && null !== e3[t5] ? c2(r3, e3[t5]) : e3[t5] == r3);
    return c2(r2, f2);
  }
  h() {
    var t4, e2, r2, n2, o2, i2;
    const { host: u2 = "", pathname: a2 = "", search: s2 = "" } = "undefined" != typeof window ? window.location : {};
    return { host: null != (t4 = null == (e2 = this.t.location) ? void 0 : e2.host) ? t4 : u2, pathname: null != (r2 = null == (n2 = this.t.location) ? void 0 : n2.pathname) ? r2 : a2, search: null != (o2 = null == (i2 = this.t.location) ? void 0 : i2.search) ? o2 : s2 };
  }
  get params() {
    const { params: e2, query: r2 } = this.p();
    return t({}, e2, r2);
  }
  get routeParams() {
    return this.p().params;
  }
  get queryParams() {
    return this.p().query;
  }
  has(t4) {
    return this.t.routes.hasOwnProperty(t4);
  }
  l(e2 = {}, r2 = this.i) {
    null != e2 || (e2 = {}), e2 = ["string", "number"].includes(typeof e2) ? [e2] : e2;
    const n2 = r2.parameterSegments.filter(({ name: t4 }) => !this.t.defaults[t4]);
    return Array.isArray(e2) ? e2 = e2.reduce((e3, r3, o2) => t({}, e3, n2[o2] ? { [n2[o2].name]: r3 } : "object" == typeof r3 ? r3 : { [r3]: "" }), {}) : 1 !== n2.length || e2[n2[0].name] || !e2.hasOwnProperty(Object.values(r2.bindings)[0]) && !e2.hasOwnProperty("id") || (e2 = { [n2[0].name]: e2 }), t({}, this.m(r2), this.j(e2, r2));
  }
  m(e2) {
    return e2.parameterSegments.filter(({ name: t4 }) => this.t.defaults[t4]).reduce((e3, { name: r2 }, n2) => t({}, e3, { [r2]: this.t.defaults[r2] }), {});
  }
  j(e2, { bindings: r2, parameterSegments: n2 }) {
    return Object.entries(e2).reduce((e3, [o2, i2]) => {
      if (!i2 || "object" != typeof i2 || Array.isArray(i2) || !n2.some(({ name: t4 }) => t4 === o2)) return t({}, e3, { [o2]: i2 });
      if (!i2.hasOwnProperty(r2[o2])) {
        if (!i2.hasOwnProperty("id")) throw new Error(`Ziggy error: object passed as '${o2}' parameter is missing route model binding key '${r2[o2]}'.`);
        r2[o2] = "id";
      }
      return t({}, e3, { [o2]: i2[r2[o2]] });
    }, {});
  }
  valueOf() {
    return this.toString();
  }
}
function T(t4, e2, r2, n2) {
  const o2 = new N(t4, e2, r2, n2);
  return t4 ? o2.toString() : o2;
}
const k = { install(t4, e2) {
  const r2 = (t5, r3, n2, o2 = e2) => T(t5, r3, n2, o2);
  parseInt(t4.version) > 2 ? (t4.config.globalProperties.route = r2, t4.provide("route", r2)) : t4.mixin({ methods: { route: r2 } });
} };
function getPreset(type) {
  const preset = appPreset();
  return definePreset(Aura, preset);
}
function appPreset() {
  return {
    semantic: {
      primary: {
        50: "{blue.50}",
        100: "{blue.100}",
        200: "{blue.200}",
        300: "{blue.300}",
        400: "{blue.400}",
        500: "{blue.500}",
        600: "{blue.600}",
        700: "{blue.700}",
        800: "{blue.800}",
        900: "{blue.900}",
        950: "{blue.950}"
      }
    }
  };
}
function primeLocale() {
  return {
    locale: "fr",
    startsWith: "Commence par",
    contains: "Contient",
    notContains: "Ne contient pas",
    endsWith: "Se termine par",
    equals: "Égal à",
    notEquals: "Différent de",
    noFilter: "Pas de filtre",
    lt: "Inférieur à",
    lte: "Inférieur ou égal à",
    gt: "Supérieur à",
    gte: "Supérieur ou égal à",
    dateIs: "La date est",
    dateIsNot: "La date n'est pas",
    dateBefore: "La date est avant",
    dateAfter: "La date est après",
    clear: "Effacer",
    apply: "Appliquer",
    matchAll: "Correspond à tous",
    matchAny: "Correspond à un",
    addRule: "Ajouter une règle",
    removeRule: "Supprimer une règle",
    accept: "Oui",
    reject: "Non",
    choose: "Choisir",
    upload: "Téléverser",
    cancel: "Annuler",
    completed: "Terminé",
    pending: "En attente",
    fileSizeTypes: ["o", "Ko", "Mo", "Go", "To", "Po", "Eo", "Zo", "Yo"],
    dayNames: [
      "Dimanche",
      "Lundi",
      "Mardi",
      "Mercredi",
      "Jeudi",
      "Vendredi",
      "Samedi"
    ],
    dayNamesShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
    dayNamesMin: ["Di", "Lu", "Ma", "Me", "Je", "Ve", "Sa"],
    monthNames: [
      "Janvier",
      "Février",
      "Mars",
      "Avril",
      "Mai",
      "Juin",
      "Juillet",
      "Août",
      "Septembre",
      "Octobre",
      "Novembre",
      "Décembre"
    ],
    monthNamesShort: [
      "Jan",
      "Fév",
      "Mar",
      "Avr",
      "Mai",
      "Juin",
      "Juil",
      "Août",
      "Sep",
      "Oct",
      "Nov",
      "Déc"
    ],
    chooseYear: "Choisir une année",
    chooseMonth: "Choisir un mois",
    chooseDate: "Choisir une date",
    prevDecade: "Décennie précédente",
    nextDecade: "Décennie suivante",
    prevYear: "Année précédente",
    nextYear: "Année suivante",
    prevMonth: "Mois précédent",
    nextMonth: "Mois suivant",
    prevHour: "Heure précédente",
    nextHour: "Heure suivante",
    prevMinute: "Minute précédente",
    nextMinute: "Minute suivante",
    prevSecond: "Seconde précédente",
    nextSecond: "Seconde suivante",
    am: "AM",
    pm: "PM",
    today: "Aujourd’hui",
    weekHeader: "Sem",
    firstDayOfWeek: 1,
    showMonthAfterYear: false,
    dateFormat: "dd/mm/yy",
    weak: "Faible",
    medium: "Moyen",
    strong: "Fort",
    passwordPrompt: "Entrez un mot de passe",
    searchMessage: "{0} résultats disponibles",
    selectionMessage: "{0} éléments sélectionnés",
    emptySelectionMessage: "Aucun élément sélectionné",
    emptySearchMessage: "Aucun résultat trouvé",
    fileChosenMessage: "{0} fichiers",
    noFileChosenMessage: "Aucun fichier choisi",
    emptyMessage: "Aucune option disponible",
    "aria.trueLabel": "Vrai",
    "aria.falseLabel": "Faux",
    "aria.nullLabel": "Non sélectionné",
    "aria.star": "1 étoile",
    "aria.stars": "{star} étoiles",
    "aria.selectAll": "Tous les éléments sélectionnés",
    "aria.unselectAll": "Tous les éléments désélectionnés",
    "aria.close": "Fermer",
    "aria.previous": "Précédent",
    "aria.next": "Suivant",
    "aria.navigation": "Navigation",
    "aria.scrollTop": "Faire défiler vers le haut",
    "aria.moveTop": "Déplacer en haut",
    "aria.moveUp": "Déplacer vers le haut",
    "aria.moveDown": "Déplacer vers le bas",
    "aria.moveBottom": "Déplacer en bas",
    "aria.moveToTarget": "Déplacer vers la cible",
    "aria.moveToSource": "Déplacer vers la source",
    "aria.moveAllToTarget": "Déplacer tout vers la cible",
    "aria.moveAllToSource": "Déplacer tout vers la source",
    "aria.pageLabel": "Page {page}",
    "aria.firstPageLabel": "Première page",
    "aria.lastPageLabel": "Dernière page",
    "aria.nextPageLabel": "Page suivante",
    "aria.prevPageLabel": "Page précédente",
    "aria.rowsPerPageLabel": "Lignes par page",
    "aria.jumpToPageDropdownLabel": "Aller à la page (menu déroulant)",
    "aria.jumpToPageInputLabel": "Aller à la page (saisie)",
    "aria.selectRow": "Ligne sélectionnée",
    "aria.unselectRow": "Ligne désélectionnée",
    "aria.expandRow": "Ligne développée",
    "aria.collapseRow": "Ligne réduite",
    "aria.showFilterMenu": "Afficher le menu des filtres",
    "aria.hideFilterMenu": "Masquer le menu des filtres",
    "aria.filterOperator": "Opérateur de filtre",
    "aria.filterConstraint": "Contrainte de filtre",
    "aria.editRow": "Modifier la ligne",
    "aria.saveEdit": "Enregistrer la modification",
    "aria.cancelEdit": "Annuler la modification",
    "aria.listView": "Vue en liste",
    "aria.gridView": "Vue en grille",
    "aria.slide": "Diapositive",
    "aria.slideNumber": "{slideNumber}",
    "aria.zoomImage": "Zoom sur l’image",
    "aria.zoomIn": "Agrandir",
    "aria.zoomOut": "Réduire",
    "aria.rotateRight": "Pivoter à droite",
    "aria.rotateLeft": "Pivoter à gauche"
  };
}
function initPinia(app) {
  const pinia = createPinia();
  app.use(pinia);
}
function initPrime(app) {
  const MyPreset = getPreset();
  app.use(PrimeVue, {
    theme: {
      preset: MyPreset,
      options: {
        darkModeSelector: ".dark"
      }
    },
    locale: primeLocale()
  }).use(ToastService).use(ConfirmationService).directive("animateonscroll", AnimateOnScroll).directive("focustrap", __unplugin_directives_0$1).directive("tooltip", __unplugin_directives_0);
}
const KTUtils = {
  geUID(prefix = "") {
    return prefix + Math.floor(Math.random() * (/* @__PURE__ */ new Date()).getTime());
  },
  getBreakpoint(breakpoint) {
    const value = KTUtils.getCssVar(`--tw-${breakpoint}`);
    if (value) {
      return parseInt(value.trim());
    } else {
      return -1;
    }
  },
  getCssVar(variable) {
    let hex = getComputedStyle(document.documentElement).getPropertyValue(variable);
    if (hex && hex.length > 0) {
      hex = hex.trim();
    }
    return hex;
  },
  parseDataAttribute(value) {
    if (value === "true") {
      return true;
    }
    if (value === "false") {
      return false;
    }
    if (value === Number(value).toString()) {
      return Number(value);
    }
    if (value === "" || value === "null") {
      return null;
    }
    if (typeof value !== "string") {
      return value;
    }
    try {
      return KTUtils.parseJson(value);
    } catch {
      return value;
    }
  },
  parseJson(value) {
    return value && value.length > 0 ? JSON.parse(decodeURIComponent(value)) : null;
  },
  parseSelector(selector) {
    if (selector && window.CSS && window.CSS.escape) {
      selector = selector.replace(/#([^\s"#']+)/g, (match, id) => `#${window.CSS.escape(id)}`);
    }
    return selector;
  },
  capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
  },
  uncapitalize(value) {
    return value.charAt(0).toLowerCase() + value.slice(1);
  },
  camelCase(value) {
    return value.replace(/-([a-z])/g, (match, letter) => {
      return letter.toUpperCase();
    });
  },
  isRTL() {
    const htmlElement = document.querySelector("html");
    return Boolean(htmlElement && htmlElement.getAttribute("direction") === "rtl");
  },
  throttle(timer, func, delay) {
    if (timer) {
      return;
    }
    timer = setTimeout(() => {
      func();
      clearTimeout(timer);
    }, delay);
  },
  checksum(value) {
    let hash = 0;
    for (let i2 = 0; i2 < value.length; i2++) {
      hash = (hash << 5) - hash + value.charCodeAt(i2) | 0;
    }
    return ("0000000" + (hash >>> 0).toString(16)).slice(-8);
  }
};
const KTDom$1 = {
  isElement(element) {
    if (element && element instanceof HTMLElement) {
      return true;
    } else {
      return false;
    }
  },
  getElement(element) {
    if (this.isElement(element)) {
      return element;
    }
    if (element && element.length > 0) {
      return document.querySelector(KTUtils.parseSelector(element));
    }
    return null;
  },
  remove(element) {
    if (this.isElement(element) && element.parentNode) {
      element.parentNode.removeChild(element);
    }
  },
  hasClass(element, className) {
    const classes = className.split(" ");
    for (const className2 of classes) {
      if (!element.classList.contains(className2)) {
        return false;
      }
    }
    return true;
  },
  addClass(element, className) {
    const classNames = className.split(" ");
    if (element.classList) {
      for (let i2 = 0; i2 < classNames.length; i2++) {
        if (classNames[i2] && classNames[i2].length > 0) {
          element.classList.add(classNames[i2].trim());
        }
      }
    } else if (!this.hasClass(element, className)) {
      for (let x2 = 0; x2 < classNames.length; x2++) {
        element.className += " " + classNames[x2].trim();
      }
    }
  },
  removeClass(element, className) {
    const classNames = className.split(" ");
    if (element.classList) {
      for (let i2 = 0; i2 < classNames.length; i2++) {
        element.classList.remove(classNames[i2].trim());
      }
    } else if (this.hasClass(element, className)) {
      for (let x2 = 0; x2 < classNames.length; x2++) {
        element.className = element.className.replace(new RegExp("\\b" + classNames[x2].trim() + "\\b", "g"), "");
      }
    }
  },
  getCssProp(element, prop) {
    return (element ? window.getComputedStyle(element).getPropertyValue(prop) : "").replace(" ", "");
  },
  setCssProp(element, prop, value) {
    if (element) {
      window.getComputedStyle(element).setProperty(prop, value);
    }
  },
  offsetOld(element) {
    if (!element) return { top: 0, left: 0, right: 0, bottom: 0 };
    const rect = element.getBoundingClientRect();
    const view = element.ownerDocument.defaultView;
    return {
      top: rect.top + ((view == null ? void 0 : view.scrollY) || 0),
      left: rect.left,
      right: window.innerWidth - rect.right,
      bottom: 0
    };
  },
  offset(element) {
    if (!element) return { top: 0, left: 0, right: 0, bottom: 0 };
    const rect = element.getBoundingClientRect();
    return {
      top: rect.top,
      left: rect.left,
      right: window.innerWidth - rect.right,
      bottom: window.innerHeight - rect.top
    };
  },
  getIndex(element) {
    var _a;
    const children = Array.from(((_a = element.parentNode) == null ? void 0 : _a.children) || []);
    return children.indexOf(element);
  },
  parents(element, selector) {
    const parents = [];
    for (element && element !== document.documentElement; element = element.parentElement; ) {
      if (selector) {
        if (element.matches(selector)) {
          parents.push(element);
        }
        continue;
      }
      parents.push(element);
    }
    return parents;
  },
  siblings(element) {
    const parent2 = element.parentNode;
    if (!parent2) return [];
    return Array.from(parent2.children).filter((child) => child !== element);
  },
  children(element, selector) {
    if (!element || !element.childNodes) {
      return null;
    }
    const result = [];
    const l2 = element.childNodes.length;
    let i2 = 0;
    for (i2 = 0; i2 < l2; i2++) {
      if (element.childNodes[i2].nodeType == 1 && element.childNodes[i2].matches(selector)) {
        result.push(element.childNodes[i2]);
      }
    }
    return result;
  },
  child(element, selector) {
    const children = KTDom$1.children(element, selector);
    return children ? children[0] : null;
  },
  isVisible(element) {
    if (!this.isElement(element) || element.getClientRects().length === 0) {
      return false;
    }
    return getComputedStyle(element).getPropertyValue("visibility") === "visible";
  },
  isDisabled(element) {
    if (!element || element.nodeType !== Node.ELEMENT_NODE) {
      return true;
    }
    if (element.classList.contains("disabled")) {
      return true;
    }
    if (typeof element.disabled !== "undefined") {
      return element.disabled;
    }
    return element.hasAttribute("disabled") && element.getAttribute("disabled") !== "false";
  },
  transitionEnd(element, callback) {
    const duration = this.getCSSTransitionDuration(element);
    setTimeout(() => {
      callback();
    }, duration);
  },
  animationEnd(element, callback) {
    const duration = this.getCSSAnimationDuration(element);
    setTimeout(() => {
      callback();
    }, duration);
  },
  getCSSTransitionDuration(element) {
    return parseFloat(window.getComputedStyle(element).transitionDuration) * 1e3;
  },
  getCSSAnimationDuration(element) {
    return parseFloat(window.getComputedStyle(element).animationDuration) * 1e3;
  },
  reflow(element) {
    element.offsetHeight;
  },
  insertAfter(element, referenceNode) {
    const parentNode = referenceNode.parentNode;
    if (parentNode) {
      parentNode.insertBefore(element, referenceNode.nextSibling);
    }
  },
  getHighestZindex(element) {
    let position, value;
    while (element && element !== document.documentElement) {
      position = element.style.position;
      if (position === "absolute" || position === "relative" || position === "fixed") {
        value = parseInt(element.style.zIndex);
        if (!isNaN(value) && value !== 0) {
          return value;
        }
      }
      element = element.parentNode;
    }
    return 1;
  },
  isParentOrElementHidden(element) {
    if (!element) {
      return false;
    }
    const computedStyle = window.getComputedStyle(element);
    if (computedStyle.display === "none") {
      return true;
    }
    return this.isParentOrElementHidden(element.parentElement);
  },
  getViewPort() {
    return {
      width: window.innerWidth,
      height: window.innerHeight
    };
  },
  getScrollTop() {
    return (document.scrollingElement || document.documentElement).scrollTop;
  },
  isInViewport(element) {
    const rect = element.getBoundingClientRect();
    return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
  },
  isPartiallyInViewport(element) {
    const x2 = element.getBoundingClientRect().left;
    const y2 = element.getBoundingClientRect().top;
    const ww = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    const hw = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    const w2 = element.clientWidth;
    const h2 = element.clientHeight;
    return y2 < hw && y2 + h2 > 0 && (x2 < ww && x2 + w2 > 0);
  },
  isVisibleInParent(child, parent2) {
    const childRect = child.getBoundingClientRect();
    const parentRect = parent2.getBoundingClientRect();
    if (child.offsetParent === null || getComputedStyle(child).visibility === "hidden" || getComputedStyle(child).display === "none") {
      return false;
    }
    const isVisibleVertically = childRect.top >= parentRect.top && childRect.bottom <= parentRect.bottom;
    const isVisibleHorizontally = childRect.left >= parentRect.left && childRect.right <= parentRect.right;
    return isVisibleVertically && isVisibleHorizontally;
  },
  getRelativeTopPosition(child, parent2) {
    const childRect = child.getBoundingClientRect();
    const parentRect = parent2.getBoundingClientRect();
    const relativeTop = childRect.top - parentRect.top;
    return relativeTop;
  },
  getDataAttributes(element, prefix) {
    if (!element) {
      return {};
    }
    prefix = KTUtils.camelCase(prefix);
    const attributes = {};
    const keys = Object.keys(element.dataset).filter((key) => key.startsWith(prefix));
    for (const key of keys) {
      let normalizedKey = key.replace(prefix, "");
      normalizedKey = KTUtils.uncapitalize(normalizedKey);
      attributes[normalizedKey] = KTUtils.parseDataAttribute(element.dataset[key]);
    }
    return attributes;
  },
  ready(callback) {
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", () => {
        callback();
      });
    } else {
      callback();
    }
  }
};
const KTDelegatedEventHandlers = {};
const KTEventHandler = {
  on: function(element, selector, eventName, handler) {
    if (element === null) {
      return null;
    }
    const eventId = KTUtils.geUID("event");
    KTDelegatedEventHandlers[eventId] = (event) => {
      const targets = element.querySelectorAll(selector);
      let target = event.target;
      while (target && target !== element) {
        for (let i2 = 0, j2 = targets.length; i2 < j2; i2++) {
          if (target === targets[i2]) {
            handler.call(this, event, target);
          }
        }
        target = target.parentNode;
      }
    };
    element.addEventListener(eventName, KTDelegatedEventHandlers[eventId]);
    return eventId;
  },
  off(element, eventName, eventId) {
    if (!element || KTDelegatedEventHandlers[eventId] === null) {
      return;
    }
    element.removeEventListener(eventName, KTDelegatedEventHandlers[eventId]);
    delete KTDelegatedEventHandlers[eventId];
  }
};
const KTElementMap = /* @__PURE__ */ new Map();
const KTData = {
  set(element, key, value) {
    if (!KTElementMap.has(element)) {
      KTElementMap.set(element, /* @__PURE__ */ new Map());
    }
    const valueMap = KTElementMap.get(element);
    valueMap.set(key, value);
  },
  get(element, key) {
    if (KTElementMap.has(element)) {
      return KTElementMap.get(element).get(key) || null;
    }
    return null;
  },
  has(element, key) {
    return KTElementMap.has(element) && KTElementMap.get(element).has(key);
  },
  remove(element, key) {
    if (!KTElementMap.has(element) || !KTElementMap.get(element).has(key)) {
      return;
    }
    const valueMap = KTElementMap.get(element);
    valueMap.delete(key);
    if (valueMap.size === 0) {
      KTElementMap.delete(element);
    }
  }
};
const KTGlobalComponentsConfig = {
  modal: {
    backdropClass: "transition-all duration-300"
  },
  drawer: {
    backdropClass: "transition-all duration-300",
    hiddenClass: "hidden"
  },
  collapse: {
    hiddenClass: "hidden"
  },
  dismiss: {
    hiddenClass: "hidden"
  },
  tabs: {
    hiddenClass: "hidden"
  },
  accordion: {
    hiddenClass: "hidden"
  }
};
class KTComponent {
  constructor() {
    this._uid = null;
    this._element = null;
  }
  _init(element) {
    element = KTDom$1.getElement(element);
    if (!element) {
      return;
    }
    this._element = element;
    this._events = /* @__PURE__ */ new Map();
    this._uid = KTUtils.geUID(this._name);
    KTData.set(this._element, this._name, this);
  }
  _fireEvent(eventType, payload = null) {
    var _a;
    (_a = this._events.get(eventType)) == null ? void 0 : _a.forEach((callable) => {
      callable(payload);
    });
  }
  _dispatchEvent(eventType, payload = null) {
    const event = new CustomEvent(eventType, {
      detail: { payload },
      bubbles: true,
      cancelable: true,
      composed: false
    });
    if (!this._element) return;
    this._element.dispatchEvent(event);
  }
  _getOption(name) {
    const value = this._config[name];
    if (value && typeof value === "string") {
      return this._getResponsiveOption(value);
    } else {
      return value;
    }
  }
  _getResponsiveOption(value) {
    let result = null;
    const width = KTDom$1.getViewPort().width;
    const parts = String(value).split("|");
    if (parts.length > 1) {
      for (let i2 = parts.length - 1; i2 < parts.length; i2--) {
        const part = parts[i2];
        if (part.includes(":")) {
          const [breakpointKey, breakpointValue] = part.split(":");
          const breakpoint = KTUtils.getBreakpoint(breakpointKey);
          if (breakpoint <= width) {
            result = breakpointValue;
            break;
          }
        } else {
          result = part;
          break;
        }
      }
    } else {
      result = value;
    }
    result = KTUtils.parseDataAttribute(result);
    return result;
  }
  _getGlobalConfig() {
    if (window.KTGlobalComponentsConfig && window.KTGlobalComponentsConfig[this._name]) {
      return window.KTGlobalComponentsConfig[this._name];
    } else if (KTGlobalComponentsConfig && KTGlobalComponentsConfig[this._name]) {
      return KTGlobalComponentsConfig[this._name];
    } else {
      return {};
    }
  }
  _buildConfig(config = {}) {
    if (!this._element) return;
    this._config = {
      ...this._defaultConfig,
      ...this._getGlobalConfig(),
      ...KTDom$1.getDataAttributes(this._element, this._name),
      ...config
    };
  }
  dispose() {
    if (!this._element) return;
    KTData.remove(this._element, this._name);
  }
  on(eventType, callback) {
    const eventId = KTUtils.geUID();
    if (!this._events.get(eventType)) {
      this._events.set(eventType, /* @__PURE__ */ new Map());
    }
    this._events.get(eventType).set(eventId, callback);
    return eventId;
  }
  off(eventType, eventId) {
    var _a;
    (_a = this._events.get(eventType)) == null ? void 0 : _a.delete(eventId);
  }
  getOption(name) {
    return this._getOption(name);
  }
  getElement() {
    if (!this._element) return null;
    return this._element;
  }
}
const KT_ACCESSIBILITY_KEYS = [
  "ArrowUp",
  "ArrowLeft",
  "ArrowDown",
  "ArrowRight",
  "Home",
  "End",
  "Escape",
  "Enter",
  "Tab"
];
class KTDropdown extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "dropdown";
    this._defaultConfig = {
      zindex: 105,
      hoverTimeout: 200,
      placement: "bottom-start",
      permanent: false,
      dismiss: false,
      trigger: "click",
      attach: "",
      offset: "0px, 5px",
      hiddenClass: "hidden"
    };
    this._config = this._defaultConfig;
    this._disabled = false;
    this._isTransitioning = false;
    this._isOpen = false;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._toggleElement = this._element.querySelector(".dropdown-toggle");
    if (!this._toggleElement) return;
    this._contentElement = this._element.querySelector('.dropdown-content, [data-dropdown-content="true"]');
    if (!this._contentElement) return;
    KTData.set(this._contentElement, "dropdownElement", this._element);
  }
  _click(event) {
    event.preventDefault();
    event.stopPropagation();
    if (this._disabled === true) {
      return;
    }
    if (this._getOption("trigger") !== "click") {
      return;
    }
    this._toggle();
  }
  _mouseover() {
    if (this._disabled === true) {
      return;
    }
    if (this._getOption("trigger") !== "hover") {
      return;
    }
    if (KTData.get(this._element, "hover") === "1") {
      clearTimeout(KTData.get(this._element, "timeout"));
      KTData.remove(this._element, "hover");
      KTData.remove(this._element, "timeout");
    }
    this._show();
  }
  _mouseout() {
    if (this._disabled === true) {
      return;
    }
    if (this._getOption("trigger") !== "hover") {
      return;
    }
    const timeout = setTimeout(() => {
      if (KTData.get(this._element, "hover") === "1") {
        this._hide();
      }
    }, parseInt(this._getOption("hoverTimeout")));
    KTData.set(this._element, "hover", "1");
    KTData.set(this._element, "timeout", timeout);
  }
  _toggle() {
    if (this._isOpen) {
      this._hide();
    } else {
      this._show();
    }
  }
  _show() {
    if (this._isOpen || this._isTransitioning) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("show", payload);
    this._dispatchEvent("show", payload);
    if (payload.cancel === true) {
      return;
    }
    KTDropdown.hide();
    KTMenu$1.hide(this._element);
    let zIndex = parseInt(this._getOption("zindex"));
    const parentZindex = KTDom$1.getHighestZindex(this._element);
    if (parentZindex !== null && parentZindex >= zIndex) {
      zIndex = parentZindex + 1;
    }
    if (zIndex > 0) {
      this._contentElement.style.zIndex = zIndex.toString();
    }
    this._contentElement.style.display = "block";
    this._contentElement.style.opacity = "0";
    KTDom$1.reflow(this._contentElement);
    this._contentElement.style.opacity = "1";
    this._contentElement.classList.remove(this._getOption("hiddenClass"));
    this._toggleElement.classList.add("active");
    this._contentElement.classList.add("open");
    this._element.classList.add("open");
    this._initPopper();
    KTDom$1.transitionEnd(this._contentElement, () => {
      this._isTransitioning = false;
      this._isOpen = true;
      this._fireEvent("shown");
      this._dispatchEvent("shown");
    });
  }
  _hide() {
    if (this._isOpen === false || this._isTransitioning) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("hide", payload);
    this._dispatchEvent("hide", payload);
    if (payload.cancel === true) {
      return;
    }
    this._contentElement.style.opacity = "1";
    KTDom$1.reflow(this._contentElement);
    this._contentElement.style.opacity = "0";
    this._contentElement.classList.remove("open");
    this._toggleElement.classList.remove("active");
    this._element.classList.remove("open");
    KTDom$1.transitionEnd(this._contentElement, () => {
      this._isTransitioning = false;
      this._isOpen = false;
      this._contentElement.classList.add(this._getOption("hiddenClass"));
      this._contentElement.style.display = "";
      this._contentElement.style.zIndex = "";
      this._destroyPopper();
      this._fireEvent("hidden");
      this._dispatchEvent("hidden");
    });
  }
  _initPopper() {
    let reference;
    const attach = this._getOption("attach");
    if (attach) {
      if (attach === "parent") {
        reference = this._toggleElement.parentNode;
      } else {
        reference = document.querySelector(attach);
      }
    } else {
      reference = this._toggleElement;
    }
    if (reference) {
      const popper = createPopper(reference, this._contentElement, this._getPopperConfig());
      KTData.set(this._element, "popper", popper);
    }
  }
  _destroyPopper() {
    if (KTData.has(this._element, "popper")) {
      KTData.get(this._element, "popper").destroy();
      KTData.remove(this._element, "popper");
    }
  }
  __isOpen() {
    return this._element.classList.contains("open") && this._contentElement.classList.contains("open");
  }
  _getPopperConfig() {
    let placement = this._getOption("placement");
    if (!placement) {
      placement = "right";
    }
    const offsetValue = this._getOption("offset");
    const offset = offsetValue ? offsetValue.toString().split(",").map((value) => parseInt(value.trim(), 10)) : [0, 0];
    const strategy = this._getOption("overflow") === true ? "absolute" : "fixed";
    const altAxis = this._getOption("flip") !== false ? true : false;
    const popperConfig = {
      placement,
      strategy,
      modifiers: [
        {
          name: "offset",
          options: {
            offset
          }
        },
        {
          name: "preventOverflow",
          options: {
            altAxis
          }
        },
        {
          name: "flip",
          options: {
            flipVariations: false
          }
        }
      ]
    };
    return popperConfig;
  }
  _getToggleElement() {
    return this._toggleElement;
  }
  _getContentElement() {
    return this._contentElement;
  }
  // General Methods
  click(event) {
    this._click(event);
  }
  mouseover() {
    this._mouseover();
  }
  mouseout() {
    this._mouseout();
  }
  show() {
    return this._show();
  }
  hide() {
    this._hide();
  }
  toggle() {
    this._toggle();
  }
  getToggleElement() {
    return this._toggleElement;
  }
  getContentElement() {
    return this._contentElement;
  }
  isPermanent() {
    return this._getOption("permanent");
  }
  disable() {
    this._disabled = true;
  }
  enable() {
    this._disabled = false;
  }
  isOpen() {
    return this._isOpen;
  }
  // Statics methods
  static getElement(reference) {
    if (reference.hasAttribute("data-dropdown")) return reference;
    const findElement = reference.closest("[data-dropdown]");
    if (findElement) return findElement;
    if (reference.classList.contains("dropdown-content") && KTData.has(reference, "dropdownElement")) {
      return KTData.get(reference, "dropdownElement");
    }
    return null;
  }
  static getInstance(element) {
    element = this.getElement(element);
    if (!element) return null;
    if (KTData.has(element, "dropdown")) {
      return KTData.get(element, "dropdown");
    }
    if (element.getAttribute("data-dropdown") === "true") {
      return new KTDropdown(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTDropdown(element, config);
  }
  static update() {
    document.querySelectorAll(".open[data-dropdown]").forEach((item) => {
      if (KTData.has(item, "popper")) {
        KTData.get(item, "popper").forceUpdate();
      }
    });
  }
  static hide(skipElement) {
    document.querySelectorAll(".open[data-dropdown]").forEach((item) => {
      if (skipElement && (skipElement === item || item.contains(skipElement))) return;
      const dropdown = KTDropdown.getInstance(item);
      if (dropdown) dropdown.hide();
    });
  }
  static handleClickAway() {
    document.addEventListener("click", (event) => {
      document.querySelectorAll(".open[data-dropdown]").forEach((element) => {
        const dropdown = KTDropdown.getInstance(element);
        if (dropdown && dropdown.isPermanent() === false) {
          const contentElement = dropdown.getContentElement();
          if (element === event.target || element.contains(event.target)) {
            return;
          }
          if (contentElement && (contentElement === event.target || contentElement.contains(event.target))) {
            return;
          }
          dropdown.hide();
        }
      });
    });
  }
  static handleKeyboard() {
  }
  static handleMouseover() {
    KTEventHandler.on(
      document.body,
      ".dropdown-toggle",
      "mouseover",
      (event, target) => {
        const dropdown = KTDropdown.getInstance(target);
        if (dropdown !== null && dropdown.getOption("trigger") === "hover") {
          return dropdown.mouseover();
        }
      }
    );
  }
  static handleMouseout() {
    KTEventHandler.on(
      document.body,
      ".dropdown-toggle",
      "mouseout",
      (event, target) => {
        const dropdown = KTDropdown.getInstance(target);
        if (dropdown !== null && dropdown.getOption("trigger") === "hover") {
          return dropdown.mouseout();
        }
      }
    );
  }
  static handleClick() {
    KTEventHandler.on(
      document.body,
      ".dropdown-toggle",
      "click",
      (event, target) => {
        const dropdown = KTDropdown.getInstance(target);
        if (dropdown) {
          return dropdown.click(event);
        }
      }
    );
  }
  static handleDismiss() {
    KTEventHandler.on(
      document.body,
      "[data-dropdown-dismiss]",
      "click",
      (event, target) => {
        const dropdown = KTDropdown.getInstance(target);
        if (dropdown) {
          return dropdown.hide();
        }
      }
    );
  }
  static initHandlers() {
    this.handleClickAway();
    this.handleKeyboard();
    this.handleMouseover();
    this.handleMouseout();
    this.handleClick();
    this.handleDismiss();
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-dropdown="true"]');
    elements.forEach((element) => {
      new KTDropdown(element);
    });
  }
  static init() {
    KTDropdown.createInstances();
    if (window.KT_DROPDOWN_INITIALIZED !== true) {
      KTDropdown.initHandlers();
      window.KT_DROPDOWN_INITIALIZED = true;
    }
  }
}
let KTMenu$1 = class KTMenu2 extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "menu";
    this._defaultConfig = {
      dropdownZindex: "105",
      dropdownHoverTimeout: 200,
      accordionExpandAll: false
    };
    this._config = this._defaultConfig;
    this._disabled = false;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._update();
  }
  _click(element, event) {
    if (element.hasAttribute("href") && element.getAttribute("href") !== "#") {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    if (this._disabled === true) {
      return;
    }
    const itemElement = this._getItemElement(element);
    if (!itemElement) return;
    if (this._getItemOption(itemElement, "trigger") !== "click") {
      return;
    }
    if (this._getItemOption(itemElement, "toggle") === false) {
      this._show(itemElement);
    } else {
      this._toggle(itemElement);
    }
  }
  _link(element, event) {
    if (this._disabled === true) {
      return;
    }
    let payload = {
      cancel: false,
      element,
      event
    };
    this._fireEvent("link.click", payload);
    this._dispatchEvent("link.click", payload);
    if (payload.cancel === true) {
      return;
    }
    const itemElement = this._getItemElement(element);
    if (this._isItemDropdownPermanent(itemElement) === false) {
      KTMenu2.hide();
    }
    payload = {
      element,
      event
    };
    this._fireEvent("link.clicked", payload);
    this._dispatchEvent("link.clicked", payload);
  }
  _dismiss(element) {
    const itemElement = this._getItemElement(element);
    if (!itemElement) return;
    const itemElements = this._getItemChildElements(itemElement);
    if (itemElement !== null && this._getItemToggleMode(itemElement) === "dropdown") {
      this._hide(itemElement);
      itemElements.forEach((each) => {
        if (this._getItemToggleMode(each) === "dropdown") {
          this._hide(each);
        }
      });
    }
  }
  _mouseover(element) {
    const itemElement = this._getItemElement(element);
    if (!itemElement) return;
    if (this._disabled === true) {
      return;
    }
    if (itemElement === null) {
      return;
    }
    if (this._getItemOption(itemElement, "trigger") !== "hover") {
      return;
    }
    if (KTData.get(itemElement, "hover") === "1") {
      clearTimeout(KTData.get(itemElement, "timeout"));
      KTData.remove(itemElement, "hover");
      KTData.remove(itemElement, "timeout");
    }
    this._show(itemElement);
  }
  _mouseout(element) {
    const itemElement = this._getItemElement(element);
    if (!itemElement) return;
    if (this._disabled === true) {
      return;
    }
    if (this._getItemOption(itemElement, "trigger") !== "hover") {
      return;
    }
    const timeout = setTimeout(() => {
      if (KTData.get(itemElement, "hover") === "1") {
        this._hide(itemElement);
      }
    }, parseInt(this._getOption("dropdownHoverTimeout")));
    KTData.set(itemElement, "hover", "1");
    KTData.set(itemElement, "timeout", timeout);
  }
  _toggle(itemElement) {
    if (this._isItemSubShown(itemElement) === true) {
      this._hide(itemElement);
    } else {
      this._show(itemElement);
    }
  }
  _show(itemElement) {
    if (this._isItemSubShown(itemElement) === true) {
      return;
    }
    if (this._getItemToggleMode(itemElement) === "dropdown") {
      this._showDropdown(itemElement);
    } else if (this._getItemToggleMode(itemElement) === "accordion") {
      this._showAccordion(itemElement);
    }
    KTData.set(itemElement, "toggle", this._getItemToggleMode(itemElement));
  }
  _hide(itemElement) {
    if (this._isItemSubShown(itemElement) === false) {
      return;
    }
    if (this._getItemToggleMode(itemElement) === "dropdown") {
      this._hideDropdown(itemElement);
    } else if (this._getItemToggleMode(itemElement) === "accordion") {
      this._hideAccordion(itemElement);
    }
  }
  _reset(itemElement) {
    if (this._hasItemSub(itemElement) === false) {
      return;
    }
    const subElement = this._getItemSubElement(itemElement);
    if (KTData.has(itemElement, "toggle") && KTData.get(itemElement, "toggle") !== this._getItemToggleMode(itemElement)) {
      itemElement.classList.remove("show");
      subElement == null ? void 0 : subElement.classList.remove("show");
    }
  }
  _update() {
    if (!this._element) return;
    const itemElements = this._element.querySelectorAll(".menu-item[data-menu-item-trigger]");
    itemElements.forEach((itemElement) => {
      this._updateItemSubType(itemElement);
      this._reset(itemElement);
    });
  }
  _updateItemSubType(itemElement) {
    const subElement = this._getItemSubElement(itemElement);
    if (subElement) {
      if (this._getItemToggleMode(itemElement) === "dropdown") {
        itemElement.classList.remove("menu-item-accordion");
        itemElement.classList.add("menu-item-dropdown");
        subElement.classList.remove("menu-accordion");
        subElement.classList.add("menu-dropdown");
      } else {
        itemElement.classList.remove("menu-item-dropdown");
        itemElement.classList.add("menu-item-accordion");
        subElement.classList.remove("menu-dropdown");
        subElement.classList.add("menu-accordion");
      }
    }
  }
  _isItemSubShown(itemElement) {
    const subElement = this._getItemSubElement(itemElement);
    if (subElement !== null) {
      if (this._getItemToggleMode(itemElement) === "dropdown") {
        if (subElement.classList.contains("show") === true && subElement.hasAttribute("data-popper-placement") === true) {
          return true;
        } else {
          return false;
        }
      } else {
        return itemElement.classList.contains("show");
      }
    } else {
      return false;
    }
  }
  _isItemDropdownPermanent(itemElement) {
    return this._getItemOption(itemElement, "permanent");
  }
  _isItemParentShown(itemElement) {
    const parents = KTDom$1.parents(itemElement, ".menu-item.show");
    return parents && parents.length > 0 ? true : false;
  }
  _isItemSubElement(itemElement) {
    return itemElement.classList.contains("menu-dropdown") || itemElement.classList.contains("menu-accordion");
  }
  _hasItemSub(itemElement) {
    return itemElement.classList.contains("menu-item") && itemElement.hasAttribute("data-menu-item-trigger");
  }
  _getItemLinkElement(itemElement) {
    return KTDom$1.child(itemElement, ".menu-link, .menu-toggle");
  }
  _getItemSubElement(itemElement) {
    if (itemElement.classList.contains("menu-dropdown") === true || itemElement.classList.contains("menu-accordion") === true) {
      return itemElement;
    } else if (KTData.has(itemElement, "sub")) {
      return KTData.get(itemElement, "sub");
    } else {
      return KTDom$1.child(itemElement, ".menu-dropdown, .menu-accordion");
    }
  }
  _getItemToggleMode(itemElement) {
    const itemEl = this._getItemElement(itemElement);
    if (this._getItemOption(itemEl, "toggle") === "dropdown") {
      return "dropdown";
    } else {
      return "accordion";
    }
  }
  _getItemElement(element) {
    if (element.classList.contains("menu-item") && element.hasAttribute("data-menu-item-toggle")) {
      return element;
    }
    if (KTData.has(element, "item")) {
      return KTData.get(element, "item");
    }
    const itemElement = element.closest(".menu-item[data-menu-item-toggle]");
    if (itemElement) {
      return itemElement;
    }
    const subElement = element.closest(".menu-dropdown, .menu-accordion");
    if (subElement) {
      if (KTData.has(subElement, "item") === true) {
        return KTData.get(subElement, "item");
      }
    }
    return null;
  }
  _getItemParentElement(itemElement) {
    const subElement = itemElement.closest(".menu-dropdown, .menu-accordion");
    let parentItem;
    if (subElement && KTData.has(subElement, "item")) {
      return KTData.get(subElement, "item");
    }
    if (subElement && (parentItem = subElement.closest(".menu-item[data-menu-item-trigger]"))) {
      return parentItem;
    }
    return null;
  }
  _getItemParentElements(itemElement) {
    const parentElements = [];
    let parentElement;
    let i2 = 0;
    do {
      parentElement = this._getItemParentElement(itemElement);
      if (parentElement) {
        parentElements.push(parentElement);
        itemElement = parentElement;
      }
      i2++;
    } while (parent !== null && i2 < 20);
    return parentElements;
  }
  _getItemChildElement(itemElement) {
    let selector = itemElement;
    let element;
    if (KTData.has(itemElement, "sub")) {
      selector = KTData.get(itemElement, "sub");
    }
    if (selector !== null) {
      element = selector.querySelector(".menu-item[data-menu-item-trigger]");
      if (element) {
        return element;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
  _getItemChildElements(itemElement) {
    const children = [];
    let child;
    let i2 = 0;
    let buffer = itemElement;
    do {
      child = this._getItemChildElement(buffer);
      if (child) {
        children.push(child);
        buffer = child;
      }
      i2++;
    } while (child !== null && i2 < 20);
    return children;
  }
  _showDropdown(itemElement) {
    const payload = { cancel: false };
    this._fireEvent("dropdown.show", payload);
    this._dispatchEvent("dropdown.show", payload);
    if (payload.cancel === true) {
      return;
    }
    KTMenu2.hide(itemElement);
    KTDropdown.hide(itemElement);
    const subElement = this._getItemSubElement(itemElement);
    if (!subElement) return;
    const width = this._getItemOption(itemElement, "width");
    const height = this._getItemOption(itemElement, "height");
    let zindex = parseInt(this._getOption("dropdownZindex"));
    if (parseInt(KTDom$1.getCssProp(subElement, "z-index")) > zindex) {
      zindex = parseInt(KTDom$1.getCssProp(subElement, "z-index"));
    }
    if (KTDom$1.getHighestZindex(itemElement) > zindex) {
      zindex = KTDom$1.getHighestZindex(itemElement) + 1;
    }
    subElement.style.zIndex = String(zindex);
    if (width) {
      subElement.style.width = width;
    }
    if (height) {
      subElement.style.height = height;
    }
    subElement.style.display = "";
    subElement.style.overflow = "";
    this._initDropdownPopper(itemElement, subElement);
    itemElement.classList.add("show");
    itemElement.classList.add("menu-item-dropdown");
    subElement.classList.add("show");
    if (this._getItemOption(itemElement, "overflow") === true) {
      document.body.appendChild(subElement);
      subElement.setAttribute("data-menu-sub-overflow", "true");
      KTData.set(itemElement, "sub", subElement);
      KTData.set(subElement, "item", itemElement);
      KTData.set(subElement, "menu", this);
    } else {
      KTData.set(subElement, "item", itemElement);
    }
    this._fireEvent("dropdown.shown");
    this._dispatchEvent("dropdown.shown");
  }
  _hideDropdown(itemElement) {
    const payload = { cancel: false };
    this._fireEvent("dropdown.hide", payload);
    this._dispatchEvent("dropdown.hide", payload);
    if (payload.cancel === true) {
      return;
    }
    const subElement = this._getItemSubElement(itemElement);
    if (!subElement) return;
    subElement.style.zIndex = "";
    subElement.style.width = "";
    subElement.style.height = "";
    itemElement.classList.remove("show");
    itemElement.classList.remove("menu-item-dropdown");
    subElement.classList.remove("show");
    if (this._getItemOption(itemElement, "overflow") === true) {
      subElement.removeAttribute("data-menu-sub-overflow");
      if (itemElement.classList.contains("menu-item")) {
        itemElement.appendChild(subElement);
      } else {
        if (!this._element) return;
        KTDom$1.insertAfter(this._element, itemElement);
      }
      KTData.remove(itemElement, "sub");
      KTData.remove(subElement, "item");
      KTData.remove(subElement, "menu");
    }
    this._destroyDropdownPopper(itemElement);
    this._fireEvent("dropdown.hidden");
    this._dispatchEvent("dropdown.hidden");
  }
  _initDropdownPopper(itemElement, subElement) {
    let reference;
    const attach = this._getItemOption(itemElement, "attach");
    if (attach) {
      if (attach === "parent") {
        reference = itemElement.parentNode;
      } else {
        reference = document.querySelector(attach);
      }
    } else {
      reference = itemElement;
    }
    if (reference) {
      const popper = createPopper(reference, subElement, this._getDropdownPopperConfig(itemElement));
      KTData.set(itemElement, "popper", popper);
    }
  }
  _destroyDropdownPopper(itemElement) {
    if (KTData.has(itemElement, "popper")) {
      KTData.get(itemElement, "popper").destroy();
      KTData.remove(itemElement, "popper");
    }
  }
  _getDropdownPopperConfig(itemElement) {
    let placement = this._getItemOption(itemElement, "placement");
    if (!placement) {
      placement = "right";
    }
    const offsetValue = this._getItemOption(itemElement, "offset");
    const offset = offsetValue ? offsetValue.toString().split(",").map((value) => parseInt(value.trim(), 10)) : [0, 0];
    const strategy = this._getItemOption(itemElement, "overflow") === true ? "absolute" : "fixed";
    const altAxis = this._getItemOption(itemElement, "flip") !== false ? true : false;
    const popperConfig = {
      placement,
      strategy,
      modifiers: [
        {
          name: "offset",
          options: {
            offset
          }
        },
        {
          name: "preventOverflow",
          options: {
            altAxis
          }
        },
        {
          name: "flip",
          options: {
            flipVariations: false
          }
        }
      ]
    };
    return popperConfig;
  }
  _showAccordion(itemElement) {
    const payload = { cancel: false };
    this._fireEvent("accordion.show", payload);
    this._dispatchEvent("accordion.show", payload);
    if (payload.cancel === true) {
      return;
    }
    const subElement = this._getItemSubElement(itemElement);
    if (!subElement) return;
    let expandAll = this._getOption("accordionExpandAll");
    if (this._getItemOption(itemElement, "expandAll") === true) {
      expandAll = true;
    } else if (this._getItemOption(itemElement, "expandAll") === false) {
      expandAll = false;
    } else if (this._element && this._getItemOption(this._element, "expandAll") === true) {
      expandAll = true;
    }
    if (expandAll === false) {
      this._hideAccordions(itemElement);
    }
    if (KTData.has(itemElement, "popper") === true) {
      this._hideDropdown(itemElement);
    }
    itemElement.classList.add("transitioning");
    subElement.style.height = "0px";
    KTDom$1.reflow(subElement);
    subElement.style.display = "flex";
    subElement.style.overflow = "hidden";
    subElement.style.height = `${subElement.scrollHeight}px`;
    itemElement.classList.add("show");
    KTDom$1.transitionEnd(subElement, () => {
      itemElement.classList.remove("transitioning");
      subElement.classList.add("show");
      subElement.style.height = "";
      subElement.style.display = "";
      subElement.style.overflow = "";
      this._fireEvent("accordion.shown", payload);
      this._dispatchEvent("accordion.shown", payload);
    });
  }
  _hideAccordion(itemElement) {
    const payload = { cancel: false };
    this._fireEvent("accordion.hide", payload);
    this._dispatchEvent("accordion.hide", payload);
    if (payload.cancel === true) {
      return;
    }
    const subElement = this._getItemSubElement(itemElement);
    if (!subElement) return;
    itemElement.classList.add("transitioning");
    itemElement.classList.remove("show");
    subElement.style.height = `${subElement.scrollHeight}px`;
    KTDom$1.reflow(subElement);
    subElement.style.height = "0px";
    subElement.style.overflow = "hidden";
    KTDom$1.transitionEnd(subElement, () => {
      subElement.style.overflow = "";
      itemElement.classList.remove("transitioning");
      subElement.classList.remove("show");
      this._fireEvent("accordion.hidden");
      this._dispatchEvent("accordion.hidden");
    });
  }
  _setActiveLink(linkElement) {
    const itemElement = this._getItemElement(linkElement);
    if (!itemElement) return;
    if (!this._element) return;
    const parentItems = this._getItemParentElements(itemElement);
    const activeLinks = this._element.querySelectorAll(".menu-link.active");
    const activeParentItems = this._element.querySelectorAll(".menu-item.here, .menu-item.show");
    if (this._getItemToggleMode(itemElement) === "accordion") {
      this._showAccordion(itemElement);
    } else {
      itemElement.classList.add("here");
    }
    parentItems == null ? void 0 : parentItems.forEach((parentItem) => {
      if (this._getItemToggleMode(parentItem) === "accordion") {
        this._showAccordion(parentItem);
      } else {
        parentItem.classList.add("here");
      }
    });
    activeLinks == null ? void 0 : activeLinks.forEach((activeLink) => {
      activeLink.classList.remove("active");
    });
    activeParentItems == null ? void 0 : activeParentItems.forEach((activeParentItem) => {
      if (activeParentItem.contains(itemElement) === false) {
        activeParentItem.classList.remove("here");
        activeParentItem.classList.remove("show");
      }
    });
    linkElement.classList.add("active");
  }
  _getLinkByAttribute(value, name = "href") {
    if (!this._element) return null;
    const linkElement = this._element.querySelector(`'.menu-link[${name}="${value}"]`);
    return linkElement && null;
  }
  _hideAccordions(itemElement) {
    if (!this._element) return;
    const itemsToHide = this._element.querySelectorAll(".show[data-menu-item-trigger]");
    itemsToHide.forEach((itemToHide) => {
      if (this._getItemToggleMode(itemToHide) === "accordion" && itemToHide !== itemElement && (itemElement == null ? void 0 : itemElement.contains(itemToHide)) === false && itemToHide.contains(itemElement) === false) {
        this._hideAccordion(itemToHide);
      }
    });
  }
  _getItemOption(element, name) {
    let attr;
    let value = null;
    if (element && element.hasAttribute(`data-menu-item-${name}`)) {
      attr = element.getAttribute(`data-menu-item-${name}`);
      if (!attr) return null;
      value = this._getResponsiveOption(attr);
    }
    return value;
  }
  // General Methods
  getItemTriggerMode(itemElement) {
    return this._getItemOption(itemElement, "trigger");
  }
  getItemToggleMode(element) {
    return this._getItemToggleMode(element);
  }
  click(element, event) {
    this._click(element, event);
  }
  link(element, event) {
    this._link(element, event);
  }
  dismiss(element) {
    this._dismiss(element);
  }
  mouseover(element) {
    this._mouseover(element);
  }
  mouseout(element) {
    this._mouseout(element);
  }
  show(itemElement) {
    return this._show(itemElement);
  }
  hide(itemElement) {
    this._hide(itemElement);
  }
  toggle(itemElement) {
    this._toggle(itemElement);
  }
  reset(itemElement) {
    this._reset(itemElement);
  }
  update() {
    this._update();
  }
  setActiveLink(link) {
    this._setActiveLink(link);
  }
  getLinkByAttribute(value, name = "href") {
    return this._getLinkByAttribute(value, name);
  }
  getItemLinkElement(itemElement) {
    return this._getItemLinkElement(itemElement);
  }
  getItemElement(element) {
    return this._getItemElement(element);
  }
  getItemSubElement(itemElement) {
    return this._getItemSubElement(itemElement);
  }
  getItemParentElements(itemElement) {
    return this._getItemParentElements(itemElement);
  }
  isItemSubShown(itemElement) {
    return this._isItemSubShown(itemElement);
  }
  isItemParentShown(itemElement) {
    return this._isItemParentShown(itemElement);
  }
  isItemDropdownPermanent(itemElement) {
    return this._isItemDropdownPermanent(itemElement);
  }
  disable() {
    this._disabled = true;
  }
  enable() {
    this._disabled = false;
  }
  hideAccordions(itemElement) {
    this._hideAccordions(itemElement);
  }
  // Statics methods
  static getInstance(element) {
    if (!element) {
      return null;
    }
    if (KTData.has(element, "menu")) {
      return KTData.get(element, "menu");
    }
    const menuElement = element.closest(".menu");
    if (menuElement && KTData.has(menuElement, "menu")) {
      return KTData.get(menuElement, "menu");
    } else if (menuElement && menuElement.getAttribute("data-menu") === "true") {
      return new KTMenu2(menuElement);
    }
    const subElement = element.closest('[data-menu-sub-overflow="true"]');
    if (subElement && KTData.has(subElement, "menu")) {
      return KTData.get(subElement, "menu");
    }
    if (element.classList.contains("menu-link") || element.classList.contains("menu-toggle")) {
      const subElement2 = element.closest(".menu-dropdown") || element.closest(".menu-accordion");
      if (KTData.has(subElement2, "menu")) {
        return KTData.get(subElement2, "menu");
      }
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTMenu2(element, config);
  }
  static hide(skipElement) {
    const itemElements = document.querySelectorAll(
      ".show.menu-item-dropdown[data-menu-item-trigger]"
    );
    itemElements.forEach((itemElement) => {
      var _a;
      const menu = KTMenu2.getInstance(itemElement);
      if (menu && menu.getItemToggleMode(itemElement) === "dropdown") {
        if (skipElement) {
          if (itemElement && ((_a = menu.getItemSubElement(itemElement)) == null ? void 0 : _a.contains(skipElement)) === false && itemElement.contains(skipElement) === false && itemElement !== skipElement) {
            menu.hide(itemElement);
          }
        } else {
          menu.hide(itemElement);
        }
      }
    });
  }
  static updateDropdowns() {
    const itemElements = document.querySelectorAll(
      ".show.menu-item-dropdown[data-menu-item-trigger]"
    );
    itemElements.forEach((itemElement) => {
      if (KTData.has(itemElement, "popper")) {
        KTData.get(itemElement, "popper").forceUpdate();
      }
    });
  }
  static updateByLinkAttribute(value, name = "href") {
    const elements = document.querySelectorAll("[data-menu]");
    elements.forEach((element) => {
      const menu = KTMenu2.getInstance(element);
      if (menu) {
        const link = menu.getLinkByAttribute(value, name);
        if (link) {
          menu.setActiveLink(link);
        }
      }
    });
  }
  static handleClickAway() {
    document.addEventListener("click", function(event) {
      const itemElements = document.querySelectorAll(
        '.show.menu-item-dropdown[data-menu-item-trigger]:not([data-menu-item-static="true"])'
      );
      itemElements.forEach((itemElement) => {
        const menu = KTMenu2.getInstance(itemElement);
        if (menu && menu.getItemToggleMode(itemElement) === "dropdown") {
          const subElement = menu.getItemSubElement(itemElement);
          if (itemElement === event.target || itemElement.contains(event.target)) {
            return;
          }
          if (subElement && (subElement === event.target || subElement.contains(event.target))) {
            return;
          }
          menu.hide(itemElement);
        }
      });
    });
  }
  static findFocused() {
    const linkElement = document.querySelector(".menu-link:focus, .menu-toggle:focus");
    if (linkElement && KTDom$1.isVisible(linkElement)) {
      return linkElement;
    } else {
      return null;
    }
  }
  static getFocusLink(linkElement, direction, preFocus = false) {
    if (!linkElement) return null;
    const itemElement = linkElement.parentElement;
    if (!itemElement || !itemElement.classList.contains("menu-item")) return null;
    if (direction === "next") {
      const nextElement = linkElement.nextElementSibling;
      if (nextElement && (nextElement.matches(".menu-accordion" + (!preFocus ? ".show" : "")) || nextElement.matches(".menu-dropdown" + (!preFocus ? ".show" : "")))) {
        const itemElement2 = KTDom$1.child(nextElement, ".menu-item");
        return KTDom$1.child(itemElement2, ".menu-link");
      } else {
        const nextElement2 = itemElement.nextElementSibling;
        if (nextElement2 && nextElement2.classList.contains("menu-item")) {
          const nextLink = KTDom$1.child(nextElement2, ".menu-link");
          if (nextLink) {
            return nextLink;
          }
        }
      }
    } else {
      const prevElement = itemElement.previousElementSibling;
      if (prevElement) {
        if (prevElement && prevElement.classList.contains("menu-item")) {
          const nextLink = KTDom$1.child(prevElement, ".menu-link");
          if (nextLink) {
            return nextLink;
          }
        }
      } else {
        const parentElement = itemElement.parentElement;
        if (parentElement && (parentElement.matches(".menu-accordion" + (!preFocus ? ".show" : "")) || parentElement.matches(".menu-dropdown" + (!preFocus ? ".show" : "")))) {
          const prevElement2 = parentElement.previousElementSibling;
          if (prevElement2.classList.contains("menu-link")) {
            return prevElement2;
          }
        }
      }
    }
    return null;
  }
  static handleKeyboard() {
    document.addEventListener("keydown", (event) => {
      if (KT_ACCESSIBILITY_KEYS.includes(event.key) && !(event.ctrlKey || event.altKey || event.shiftKey)) {
        const currentFocused = this.findFocused();
        if (!currentFocused) return;
        if (["ArrowDown", "ArrowUp", "ArrowLeft", "ArrowRight"].includes(event.key)) {
          const direction = ["ArrowDown", "ArrowRight"].includes(event.key) ? "next" : "previouse";
          const newFocusLink = this.getFocusLink(currentFocused, direction);
          event.preventDefault();
          if (newFocusLink) {
            newFocusLink.focus();
            newFocusLink.classList.add("focus");
          }
        }
        if (event.key === "Enter") {
          const menu = this.getInstance(currentFocused);
          const itemElement = menu.getItemElement(currentFocused);
          const subShown = menu.isItemSubShown(itemElement);
          if (!menu) return;
          if (menu.getItemToggleMode(itemElement) === "accordion") {
            currentFocused.dispatchEvent(new MouseEvent("click", {
              bubbles: true
            }));
          }
          if (menu.getItemToggleMode(itemElement) === "dropdown") {
            if (menu.getItemTriggerMode(itemElement) === "click") {
              currentFocused.dispatchEvent(new MouseEvent("click", {
                bubbles: true
              }));
            } else {
              if (subShown) {
                currentFocused.dispatchEvent(new MouseEvent("mouseout", {
                  bubbles: true
                }));
              } else {
                currentFocused.dispatchEvent(new MouseEvent("mouseover", {
                  bubbles: true
                }));
              }
            }
          }
          if (subShown) {
            const subFocus = this.getFocusLink(currentFocused, "next", true);
            if (subFocus) {
              subFocus.focus();
            }
          } else {
            currentFocused.focus();
          }
          event.preventDefault();
        }
        if (event.key === "Escape") {
          const items = document.querySelectorAll('.show.menu-item-dropdown[data-menu-item-trigger]:not([data-menu-item-static="true"])');
          items.forEach((item) => {
            const menu = KTMenu2.getInstance(item);
            if (menu && menu.getItemToggleMode(item) === "dropdown") {
              menu.hide(item);
            }
          });
        }
      }
    }, false);
  }
  static handleMouseover() {
    KTEventHandler.on(
      document.body,
      "[data-menu-item-trigger], .menu-dropdown",
      "mouseover",
      (event, target) => {
        const menu = KTMenu2.getInstance(target);
        if (menu !== null && menu.getItemToggleMode(target) === "dropdown") {
          return menu.mouseover(target);
        }
      }
    );
  }
  static handleMouseout() {
    KTEventHandler.on(
      document.body,
      "[data-menu-item-trigger], .menu-dropdown",
      "mouseout",
      (event, target) => {
        const menu = KTMenu2.getInstance(target);
        if (menu !== null && menu.getItemToggleMode(target) === "dropdown") {
          return menu.mouseout(target);
        }
      }
    );
  }
  static handleClick() {
    KTEventHandler.on(
      document.body,
      '.menu-item[data-menu-item-trigger] > .menu-link, .menu-item[data-menu-item-trigger] > .menu-label .menu-toggle, .menu-item[data-menu-item-trigger] > .menu-toggle, [data-menu-item-trigger]:not(.menu-item):not([data-menu-item-trigger="auto"])',
      "click",
      (event, target) => {
        const menu = KTMenu2.getInstance(target);
        if (menu !== null) {
          return menu.click(target, event);
        }
      }
    );
    KTEventHandler.on(
      document.body,
      ".menu-item:not([data-menu-item-trigger]) > .menu-link",
      "click",
      (event, target) => {
        const menu = KTMenu2.getInstance(target);
        if (menu !== null) {
          if (target.tagName == "a" || target.hasAttribute("href")) {
            menu.dismiss(target);
          }
          return menu.link(target, event);
        }
      }
    );
  }
  static handleDismiss() {
    KTEventHandler.on(
      document.body,
      '[data-menu-dismiss="true"]',
      "click",
      (event, target) => {
        const menu = KTMenu2.getInstance(target);
        if (menu !== null) {
          return menu.dismiss(target);
        }
      }
    );
  }
  static handleResize() {
    window.addEventListener("resize", () => {
      let timer;
      KTUtils.throttle(
        timer,
        () => {
          const elements = document.querySelectorAll("[data-menu]");
          elements.forEach((element) => {
            var _a;
            (_a = KTMenu2.getInstance(element)) == null ? void 0 : _a.update();
          });
        },
        200
      );
    });
  }
  static initHandlers() {
    this.handleDismiss();
    this.handleClickAway();
    this.handleKeyboard();
    this.handleMouseover();
    this.handleMouseout();
    this.handleClick();
    this.handleResize();
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-menu="true"]');
    elements.forEach((element) => {
      new KTMenu2(element);
    });
  }
  static init() {
    KTMenu2.createInstances();
    if (window.KT_MENU_INITIALIZED !== true) {
      KTMenu2.initHandlers();
      window.KT_MENU_INITIALIZED = true;
    }
  }
};
class KTModal extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "modal";
    this._defaultConfig = {
      zindex: "90",
      backdrop: true,
      backdropClass: "transition-all duration-300 fixed inset-0 bg-gray-900 opacity-25",
      backdropStatic: false,
      keyboard: true,
      disableScroll: true,
      persistent: false,
      focus: true,
      hiddenClass: "hidden"
    };
    this._config = this._defaultConfig;
    this._isOpen = false;
    this._isTransitioning = false;
    this._backdropElement = null;
    this._targetElement = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._handlers();
  }
  _handlers() {
    this._element.addEventListener("click", (event) => {
      if (this._element !== event.target) return;
      if (this._getOption("backdropStatic") === false) {
        this._hide();
      }
    });
  }
  _toggle(targetElement) {
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._isOpen === true) {
      this._hide();
    } else {
      this._show(targetElement);
    }
  }
  _show(targetElement) {
    if (this._isOpen || this._isTransitioning) {
      return;
    }
    if (targetElement) this._targetElement = targetElement;
    const payload = { cancel: false };
    this._fireEvent("show", payload);
    this._dispatchEvent("show", payload);
    if (payload.cancel === true) {
      return;
    }
    KTModal.hide();
    if (!this._element) return;
    this._isTransitioning = true;
    this._element.setAttribute("role", "dialog");
    this._element.setAttribute("aria-modal", "true");
    this._element.setAttribute("tabindex", "-1");
    this._setZindex();
    if (this._getOption("backdrop") === true) this._createBackdrop();
    if (this._getOption("disableScroll")) {
      document.body.style.overflow = "hidden";
    }
    this._element.style.display = "block";
    KTDom$1.reflow(this._element);
    this._element.classList.add("open");
    this._element.classList.remove(this._getOption("hiddenClass"));
    KTDom$1.transitionEnd(this._element, () => {
      this._isTransitioning = false;
      this._isOpen = true;
      if (this._getOption("focus") === true) {
        this._autoFocus();
      }
      this._fireEvent("shown");
      this._dispatchEvent("shown");
    });
  }
  _hide() {
    if (!this._element) return;
    if (this._isOpen === false || this._isTransitioning) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("hide", payload);
    this._dispatchEvent("hide", payload);
    if (payload.cancel === true) {
      return;
    }
    this._isTransitioning = true;
    this._element.removeAttribute("role");
    this._element.removeAttribute("aria-modal");
    this._element.removeAttribute("tabindex");
    if (this._getOption("disableScroll")) {
      document.body.style.overflow = "";
    }
    KTDom$1.reflow(this._element);
    this._element.classList.remove("open");
    if (this._getOption("backdrop") === true) {
      this._deleteBackdrop();
    }
    KTDom$1.transitionEnd(this._element, () => {
      if (!this._element) return;
      this._isTransitioning = false;
      this._isOpen = false;
      this._element.style.display = "";
      this._element.classList.add(this._getOption("hiddenClass"));
      this._fireEvent("hidden");
      this._dispatchEvent("hidden");
    });
  }
  _setZindex() {
    let zindex = parseInt(this._getOption("zindex"));
    if (parseInt(KTDom$1.getCssProp(this._element, "z-index")) > zindex) {
      zindex = parseInt(KTDom$1.getCssProp(this._element, "z-index"));
    }
    if (KTDom$1.getHighestZindex(this._element) > zindex) {
      zindex = KTDom$1.getHighestZindex(this._element) + 1;
    }
    this._element.style.zIndex = String(zindex);
  }
  _autoFocus() {
    if (!this._element) return;
    const input = this._element.querySelector("[data-modal-input-focus]");
    if (!input) return;
    else input.focus();
  }
  _createBackdrop() {
    if (!this._element) return;
    const zindex = parseInt(KTDom$1.getCssProp(this._element, "z-index"));
    this._backdropElement = document.createElement("DIV");
    this._backdropElement.style.zIndex = (zindex - 1).toString();
    this._backdropElement.classList.add("modal-backdrop");
    document.body.append(this._backdropElement);
    KTDom$1.reflow(this._backdropElement);
    KTDom$1.addClass(this._backdropElement, this._getOption("backdropClass"));
  }
  _deleteBackdrop() {
    if (!this._backdropElement) return;
    KTDom$1.reflow(this._backdropElement);
    this._backdropElement.style.opacity = "0";
    KTDom$1.transitionEnd(this._backdropElement, () => {
      if (!this._backdropElement) return;
      KTDom$1.remove(this._backdropElement);
    });
  }
  toggle(targetElement) {
    return this._toggle(targetElement);
  }
  show(targetElement) {
    return this._show(targetElement);
  }
  hide() {
    return this._hide();
  }
  getTargetElement() {
    return this._targetElement;
  }
  isOpen() {
    return this._isOpen;
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "modal")) {
      return KTData.get(element, "modal");
    }
    if (element.getAttribute("data-modal") === "true") {
      return new KTModal(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTModal(element, config);
  }
  static hide() {
    const elements = document.querySelectorAll("[data-modal]");
    elements.forEach((element) => {
      const modal = KTModal.getInstance(element);
      if (modal && modal.isOpen()) {
        modal.hide();
      }
    });
  }
  static handleToggle() {
    KTEventHandler.on(document.body, "[data-modal-toggle]", "click", (event, target) => {
      event.stopPropagation();
      const selector = target.getAttribute("data-modal-toggle");
      if (!selector) return;
      const modalElement = document.querySelector(selector);
      const modal = KTModal.getInstance(modalElement);
      if (modal) {
        modal.toggle(target);
      }
    });
  }
  static handleDismiss() {
    KTEventHandler.on(document.body, "[data-modal-dismiss]", "click", (event, target) => {
      event.stopPropagation();
      const modalElement = target.closest("[data-modal]");
      if (modalElement) {
        const modal = KTModal.getInstance(modalElement);
        if (modal) {
          modal.hide();
        }
      }
    });
  }
  static handleClickAway() {
    document.addEventListener("click", (event) => {
      const modalElement = document.querySelector(".open[data-modal]");
      if (!modalElement) return;
      const modal = KTModal.getInstance(modalElement);
      if (!modal) return;
      if (modal.getOption("persistent")) return;
      if (modal.getOption("backdrop")) return;
      if (modalElement !== event.target && modal.getTargetElement() !== event.target && modalElement.contains(event.target) === false) {
        modal.hide();
      }
    });
  }
  static handleKeyword() {
    document.addEventListener("keydown", (event) => {
      const modalElement = document.querySelector(".open[data-modal]");
      const modal = KTModal.getInstance(modalElement);
      if (!modal) {
        return;
      }
      if (event.key === "Escape" && !(event.ctrlKey || event.altKey || event.shiftKey)) {
        modal.hide();
      }
      if (event.code === "Tab" && !event.metaKey) {
        return;
      }
    });
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-modal="true"]');
    elements.forEach((element) => {
      new KTModal(element);
    });
  }
  static init() {
    KTModal.createInstances();
    if (window.KT_MODAL_INITIALIZED !== true) {
      KTModal.handleToggle();
      KTModal.handleDismiss();
      KTModal.handleClickAway();
      KTModal.handleKeyword();
      window.KT_MODAL_INITIALIZED = true;
    }
  }
}
let KTDrawer$1 = class KTDrawer2 extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "drawer";
    this._defaultConfig = {
      zindex: "100",
      enable: true,
      class: "",
      hiddenClass: "hidden",
      backdrop: true,
      backdropClass: "transition-all duration-300 fixed inset-0 bg-gray-900 opacity-25",
      backdropStatic: false,
      keyboard: true,
      disableScroll: true,
      persistent: false,
      focus: true
    };
    this._config = this._defaultConfig;
    this._isOpen = false;
    this._isTransitioning = false;
    this._backdropElement = null;
    this._relatedTarget = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._handleClose();
    this._update();
  }
  _handleClose() {
    if (!this._element) return;
    KTEventHandler.on(this._element, "[data-drawer-hide]", "click", () => {
      this._hide();
    });
  }
  _toggle(relatedTarget) {
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._isOpen === true) {
      this._hide();
    } else {
      this._show(relatedTarget);
    }
  }
  _show(relatedTarget) {
    if (this._isOpen || this._isTransitioning) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("show", payload);
    this._dispatchEvent("show", payload);
    if (payload.cancel === true) {
      return;
    }
    KTDrawer2.hide();
    if (this._getOption("backdrop") === true) this._createBackdrop();
    if (relatedTarget) this._relatedTarget = relatedTarget;
    if (!this._element) return;
    this._isTransitioning = true;
    this._element.classList.remove(this._getOption("hiddenClass"));
    this._element.setAttribute("role", "dialog");
    this._element.setAttribute("aria-modal", "true");
    this._element.setAttribute("tabindex", "-1");
    const zindex = parseInt(this._getOption("zindex"));
    if (zindex > 0) {
      this._element.style.zIndex = `${zindex}`;
    }
    if (this._getOption("disableScroll")) {
      document.body.style.overflow = "hidden";
    }
    KTDom$1.reflow(this._element);
    this._element.classList.add("open");
    KTDom$1.transitionEnd(this._element, () => {
      this._isTransitioning = false;
      this._isOpen = true;
      if (this._getOption("focus") === true) {
        this._autoFocus();
      }
      this._fireEvent("shown");
      this._dispatchEvent("shown");
    });
  }
  _hide() {
    if (!this._element) return;
    if (this._isOpen === false || this._isTransitioning) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("hide", payload);
    this._dispatchEvent("hide", payload);
    if (payload.cancel === true) {
      return;
    }
    this._isTransitioning = true;
    this._element.removeAttribute("role");
    this._element.removeAttribute("aria-modal");
    this._element.removeAttribute("tabindex");
    if (this._getOption("disableScroll")) {
      document.body.style.overflow = "";
    }
    KTDom$1.reflow(this._element);
    this._element.classList.remove("open");
    if (this._getOption("backdrop") === true) {
      this._deleteBackdrop();
    }
    KTDom$1.transitionEnd(this._element, () => {
      if (!this._element) return;
      this._isTransitioning = false;
      this._isOpen = false;
      this._element.classList.add(this._getOption("hiddenClass"));
      this._element.style.zIndex = "";
      this._fireEvent("hidden");
      this._dispatchEvent("hidden");
    });
  }
  _update() {
    if (this._getOption("class").length > 0) {
      if (this.isEnabled()) {
        KTDom$1.addClass(this._element, this._getOption("class"));
      } else {
        KTDom$1.removeClass(this._element, this._getOption("class"));
      }
    }
  }
  _autoFocus() {
    if (!this._element) return;
    const input = this._element.querySelector("[data-drawer-focus]");
    if (!input) return;
    else input.focus();
  }
  _createBackdrop() {
    if (!this._element) return;
    const zindex = parseInt(this._getOption("zindex"));
    this._backdropElement = document.createElement("DIV");
    this._backdropElement.style.zIndex = (zindex - 1).toString();
    this._backdropElement.classList.add("drawer-backdrop");
    document.body.append(this._backdropElement);
    KTDom$1.reflow(this._backdropElement);
    KTDom$1.addClass(this._backdropElement, this._getOption("backdropClass"));
    this._backdropElement.addEventListener("click", (event) => {
      event.preventDefault();
      if (this._getOption("backdropStatic") === false) {
        this._hide();
      }
    });
  }
  _deleteBackdrop() {
    if (!this._backdropElement) return;
    KTDom$1.reflow(this._backdropElement);
    this._backdropElement.style.opacity = "0";
    KTDom$1.transitionEnd(this._backdropElement, () => {
      if (!this._backdropElement) return;
      KTDom$1.remove(this._backdropElement);
    });
  }
  _isEnabled() {
    return this._getOption("enable");
  }
  toggle() {
    return this._toggle();
  }
  show(relatedTarget) {
    return this._show(relatedTarget);
  }
  hide() {
    return this._hide();
  }
  update() {
    return this._update();
  }
  getRelatedTarget() {
    return this._relatedTarget;
  }
  isOpen() {
    return this._isOpen;
  }
  isEnabled() {
    return this._isEnabled();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "drawer")) {
      return KTData.get(element, "drawer");
    }
    if (element.getAttribute("data-drawer") === "true") {
      return new KTDrawer2(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTDrawer2(element, config);
  }
  static hide() {
    const elements = document.querySelectorAll("[data-drawer]");
    elements.forEach((element) => {
      const drawer = KTDrawer2.getInstance(element);
      if (drawer && drawer.isOpen()) {
        drawer.hide();
      }
    });
  }
  static handleResize() {
    window.addEventListener("resize", () => {
      let timer;
      KTUtils.throttle(timer, () => {
        document.querySelectorAll("[data-drawer]").forEach((element) => {
          const drawer = KTDrawer2.getInstance(element);
          drawer.update();
          if (drawer && drawer.isOpen() && !drawer.isEnabled()) {
            drawer.hide();
          }
        });
      }, 200);
    });
  }
  static handleToggle() {
    KTEventHandler.on(document.body, "[data-drawer-toggle]", "click", (event, target) => {
      event.stopPropagation();
      const selector = target.getAttribute("data-drawer-toggle");
      if (!selector) return;
      const drawerElement = document.querySelector(selector);
      const drawer = KTDrawer2.getInstance(drawerElement);
      if (drawer) {
        drawer.toggle();
      }
    });
  }
  static handleDismiss() {
    KTEventHandler.on(document.body, "[data-drawer-dismiss]", "click", (event, target) => {
      event.stopPropagation();
      const modalElement = target.closest('[data-drawer="true"]');
      if (modalElement) {
        const modal = KTDrawer2.getInstance(modalElement);
        if (modal) {
          modal.hide();
        }
      }
    });
  }
  static handleClickAway() {
    document.addEventListener("click", (event) => {
      const drawerElement = document.querySelector(".open[data-drawer]");
      if (!drawerElement) return;
      const drawer = KTDrawer2.getInstance(drawerElement);
      if (!drawer) return;
      if (drawer.getOption("persistent")) return;
      if (drawer.getOption("backdrop")) return;
      if (drawerElement !== event.target && drawer.getRelatedTarget() !== event.target && drawerElement.contains(event.target) === false) {
        drawer.hide();
      }
    });
  }
  static handleKeyword() {
    document.addEventListener("keydown", (event) => {
      const drawerElement = document.querySelector(".open[data-drawer]");
      const drawer = KTDrawer2.getInstance(drawerElement);
      if (!drawer) {
        return;
      }
      if (event.key === "Escape" && !(event.ctrlKey || event.altKey || event.shiftKey)) {
        drawer.hide();
      }
      if (event.code === "Tab" && !event.metaKey) {
        return;
      }
    });
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-drawer="true"]');
    elements.forEach((element) => {
      new KTDrawer2(element);
    });
  }
  static init() {
    KTDrawer2.createInstances();
    if (window.KT_DRAWER_INITIALIZED !== true) {
      KTDrawer2.handleToggle();
      KTDrawer2.handleDismiss();
      KTDrawer2.handleResize();
      KTDrawer2.handleClickAway();
      KTDrawer2.handleKeyword();
      window.KT_DRAWER_INITIALIZED = true;
    }
  }
};
class KTCollapse extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "collapse";
    this._defaultConfig = {
      hiddenClass: "hidden",
      activeClass: "active",
      target: ""
    };
    this._config = this._defaultConfig;
    this._isAnimating = false;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._targetElement = this._getTargetElement();
    if (!this._targetElement) {
      return;
    }
    this._handlers();
  }
  _getTargetElement() {
    return KTDom$1.getElement(this._element.getAttribute("data-collapse")) || KTDom$1.getElement(this._getOption("target"));
  }
  _isOpen() {
    return this._targetElement.classList.contains(this._getOption("activeClass"));
  }
  _handlers() {
    this._element.addEventListener("click", (event) => {
      event.preventDefault();
      this._toggle();
    });
  }
  _expand() {
    if (this._isAnimating || this._isOpen()) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("expand", payload);
    this._dispatchEvent("expand", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._element) {
      this._element.setAttribute("aria-expanded", "true");
      this._element.classList.add(this._getOption("activeClass"));
    }
    this._targetElement.classList.remove(this._getOption("hiddenClass"));
    this._targetElement.classList.add(this._getOption("activeClass"));
    this._targetElement.style.height = "0px";
    this._targetElement.style.overflow = "hidden";
    KTDom$1.reflow(this._targetElement);
    this._targetElement.style.height = `${this._targetElement.scrollHeight}px`;
    this._isAnimating = true;
    KTDom$1.transitionEnd(this._targetElement, () => {
      this._isAnimating = false;
      this._targetElement.style.height = "";
      this._targetElement.style.overflow = "";
      this._fireEvent("expanded");
      this._dispatchEvent("expanded");
    });
  }
  _collapse() {
    if (this._isAnimating || !this._isOpen()) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("collapse", payload);
    this._dispatchEvent("collapse", payload);
    if (payload.cancel === true) {
      return;
    }
    if (!this._element) return;
    this._element.setAttribute("aria-expanded", "false");
    this._element.classList.remove(this._getOption("activeClass"));
    this._targetElement.classList.remove(this._getOption("activeClass"));
    this._targetElement.style.height = `${this._targetElement.scrollHeight}px`;
    KTDom$1.reflow(this._targetElement);
    this._targetElement.style.height = `0px`;
    this._targetElement.style.overflow = "hidden";
    this._isAnimating = true;
    KTDom$1.transitionEnd(this._targetElement, () => {
      this._isAnimating = false;
      this._targetElement.classList.add(this._getOption("hiddenClass"));
      this._targetElement.style.overflow = "";
      this._fireEvent("collapsed");
      this._dispatchEvent("collapsed");
    });
  }
  _toggle() {
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._isOpen()) {
      this._collapse();
    } else {
      this._expand();
    }
  }
  expand() {
    return this._expand();
  }
  collapse() {
    return this._collapse();
  }
  isOpen() {
    return this._isOpen();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "collapse")) {
      return KTData.get(element, "collapse");
    }
    if (element.getAttribute("data-collapse") !== "false") {
      return new KTCollapse(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTCollapse(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-collapse]:not([data-collapse="false"])');
    elements.forEach((element) => {
      new KTCollapse(element);
    });
  }
  static init() {
    KTCollapse.createInstances();
  }
}
class KTDismiss extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "dismiss";
    this._defaultConfig = {
      hiddenClass: "hidden",
      mode: "remove",
      interrupt: true,
      target: ""
    };
    this._config = this._defaultConfig;
    this._isAnimating = false;
    this._targetElement = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._config["mode"] = this._config["mode"];
    if (!this._element) return;
    this._targetElement = this._getTargetElement();
    if (!this._targetElement) {
      return;
    }
    this._handlers();
  }
  _getTargetElement() {
    return KTDom$1.getElement(this._element.getAttribute("data-dismiss")) || KTDom$1.getElement(this._getOption("target"));
  }
  _handlers() {
    if (!this._element) return;
    this._element.addEventListener("click", (event) => {
      event.preventDefault();
      if (this._getOption("interrupt") === true) {
        event.stopPropagation();
      }
      this._dismiss();
    });
  }
  _dismiss() {
    if (this._isAnimating) {
      return;
    }
    const payload = { cancel: false };
    this._fireEvent("dismiss", payload);
    this._dispatchEvent("dismiss", payload);
    if (payload.cancel === true) {
      return;
    }
    if (!this._targetElement) return;
    this._targetElement.style.opacity = "0";
    KTDom$1.reflow(this._targetElement);
    this._isAnimating = true;
    KTDom$1.transitionEnd(this._targetElement, () => {
      if (!this._targetElement) return;
      this._isAnimating = false;
      this._targetElement.style.opacity = "";
      if (this._getOption("mode").toString().toLowerCase() === "hide") {
        this._targetElement.classList.add(this._getOption("hiddenClass"));
      } else {
        KTDom$1.remove(this._targetElement);
      }
      this._fireEvent("dismissed");
      this._dispatchEvent("dismissed");
    });
  }
  getTargetElement() {
    return this._targetElement;
  }
  dismiss() {
    this._dismiss();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "dismiss")) {
      return KTData.get(element, "dismiss");
    }
    if (element.getAttribute("data-dismiss") !== "false") {
      return new KTDismiss(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTDismiss(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-dismiss]:not([data-dismiss="false"])');
    elements.forEach((element) => {
      new KTDismiss(element);
    });
  }
  static init() {
    KTDismiss.createInstances();
  }
}
class KTTabs extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "tabs";
    this._defaultConfig = {
      hiddenClass: ""
    };
    this._config = this._defaultConfig;
    this._currentTabElement = null;
    this._currentContentElement = null;
    this._lastTabElement = null;
    this._lastContentElement = null;
    this._tabElements = null;
    this._isTransitioning = false;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    if (!this._element) return;
    this._tabElements = this._element.querySelectorAll("[data-tab-toggle]");
    this._currentTabElement = this._element.querySelector(".active[data-tab-toggle]");
    this._currentContentElement = this._currentTabElement && (KTDom$1.getElement(this._currentTabElement.getAttribute("data-tab-toggle")) || KTDom$1.getElement(this._currentTabElement.getAttribute("href"))) || null;
    this._handlers();
  }
  _handlers() {
    if (!this._element) return;
    KTEventHandler.on(this._element, "[data-tab-toggle]", "click", (event, target) => {
      event.preventDefault();
      this._show(target);
    });
  }
  _show(tabElement) {
    var _a, _b, _c, _d, _e, _f;
    if (this._isShown(tabElement) || this._isTransitioning) return;
    const payload = { cancel: false };
    this._fireEvent("show", payload);
    this._dispatchEvent("show", payload);
    if (payload.cancel === true) {
      return;
    }
    (_a = this._currentTabElement) == null ? void 0 : _a.classList.remove("active");
    (_b = this._currentContentElement) == null ? void 0 : _b.classList.add(this._getOption("hiddenClass"));
    this._lastTabElement = this._currentTabElement;
    (_c = this._getDropdownToggleElement(this._lastTabElement)) == null ? void 0 : _c.classList.remove("active");
    this._lastContentElement = this._currentContentElement;
    this._currentTabElement = tabElement;
    this._currentContentElement = KTDom$1.getElement(tabElement.getAttribute("data-tab-toggle")) || KTDom$1.getElement(tabElement.getAttribute("href"));
    (_d = this._currentTabElement) == null ? void 0 : _d.classList.add("active");
    (_e = this._currentContentElement) == null ? void 0 : _e.classList.remove(this._getOption("hiddenClass"));
    (_f = this._getDropdownToggleElement(this._currentTabElement)) == null ? void 0 : _f.classList.add("active");
    this._currentContentElement.style.opacity = "0";
    KTDom$1.reflow(this._currentContentElement);
    this._currentContentElement.style.opacity = "1";
    KTDom$1.transitionEnd(this._currentContentElement, () => {
      this._isTransitioning = false;
      this._currentContentElement.style.opacity = "";
      this._fireEvent("shown");
      this._dispatchEvent("shown");
    });
  }
  _getDropdownToggleElement(element) {
    const containerElement = element.closest(".dropdown");
    if (containerElement) {
      return containerElement.querySelector(".dropdown-toggle");
    } else {
      return null;
    }
  }
  _isShown(tabElement) {
    return tabElement.classList.contains("active");
  }
  isShown(tabElement) {
    return this._isShown(tabElement);
  }
  show(tabElement) {
    return this._show(tabElement);
  }
  static keyboardArrow() {
  }
  static keyboardJump() {
  }
  static handleAccessibility() {
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "tabs")) {
      return KTData.get(element, "tabs");
    }
    if (element.getAttribute("data-tabs") === "true") {
      return new KTTabs(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTTabs(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-tabs="true"]');
    elements.forEach((element) => {
      new KTTabs(element);
    });
  }
  static init() {
    KTTabs.createInstances();
    if (window.KT_TABS_INITIALIZED !== true) {
      KTTabs.handleAccessibility();
      window.KT_TABS_INITIALIZED = true;
    }
  }
}
class KTAccordion extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "accordion";
    this._defaultConfig = {
      hiddenClass: "hidden",
      activeClass: "active",
      expandAll: false
    };
    this._config = this._defaultConfig;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._handlers();
  }
  _handlers() {
    KTEventHandler.on(this._element, "[data-accordion-toggle]", "click", (event, target) => {
      event.preventDefault();
      const accordionElement = target.closest("[data-accordion-item]");
      if (accordionElement) this._toggle(accordionElement);
    });
  }
  _toggle(accordionElement) {
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (accordionElement.classList.contains("active")) {
      this._hide(accordionElement);
    } else {
      this._show(accordionElement);
    }
  }
  _show(accordionElement) {
    if (accordionElement.hasAttribute("animating") || accordionElement.classList.contains(this._getOption("activeClass"))) return;
    const toggleElement = KTDom$1.child(accordionElement, "[data-accordion-toggle]");
    if (!toggleElement) return;
    const contentElement = KTDom$1.getElement(toggleElement.getAttribute("data-accordion-toggle"));
    if (!contentElement) return;
    const payload = { cancel: false };
    this._fireEvent("show", payload);
    this._dispatchEvent("show", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._getOption("expandAll") === false) {
      this._hideSiblings(accordionElement);
    }
    accordionElement.setAttribute("aria-expanded", "true");
    accordionElement.classList.add(this._getOption("activeClass"));
    accordionElement.setAttribute("animating", "true");
    contentElement.classList.remove(this._getOption("hiddenClass"));
    contentElement.style.height = `0px`;
    KTDom$1.reflow(contentElement);
    contentElement.style.height = `${contentElement.scrollHeight}px`;
    KTDom$1.transitionEnd(contentElement, () => {
      accordionElement.removeAttribute("animating");
      contentElement.style.height = "";
      this._fireEvent("shown");
      this._dispatchEvent("shown");
    });
  }
  _hide(accordionElement) {
    if (accordionElement.hasAttribute("animating") || !accordionElement.classList.contains(this._getOption("activeClass"))) return;
    const toggleElement = KTDom$1.child(accordionElement, "[data-accordion-toggle]");
    if (!toggleElement) return;
    const contentElement = KTDom$1.getElement(toggleElement.getAttribute("data-accordion-toggle"));
    if (!contentElement) return;
    const payload = { cancel: false };
    this._fireEvent("hide", payload);
    this._dispatchEvent("hide", payload);
    if (payload.cancel === true) {
      return;
    }
    accordionElement.setAttribute("aria-expanded", "false");
    contentElement.style.height = `${contentElement.scrollHeight}px`;
    KTDom$1.reflow(contentElement);
    contentElement.style.height = "0px";
    accordionElement.setAttribute("animating", "true");
    KTDom$1.transitionEnd(contentElement, () => {
      accordionElement.removeAttribute("animating");
      accordionElement.classList.remove(this._getOption("activeClass"));
      contentElement.classList.add(this._getOption("hiddenClass"));
      this._fireEvent("hidden");
      this._dispatchEvent("hidden");
    });
  }
  _hideSiblings(accordionElement) {
    const siblings = KTDom$1.siblings(accordionElement);
    siblings == null ? void 0 : siblings.forEach((sibling) => {
      this._hide(sibling);
    });
  }
  show(accordionElement) {
    this._show(accordionElement);
  }
  hide(accordionElement) {
    this._hide(accordionElement);
  }
  toggle(accordionElement) {
    this._toggle(accordionElement);
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "accordion")) {
      return KTData.get(element, "accordion");
    }
    if (element.getAttribute("data-accordion") === "true") {
      return new KTAccordion(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTAccordion(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-accordion="true"]');
    elements.forEach((element) => {
      new KTAccordion(element);
    });
  }
  static init() {
    KTAccordion.createInstances();
  }
}
let KTScrollspy$1 = class KTScrollspy2 extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "scrollspy";
    this._defaultConfig = {
      target: "body",
      offset: 0,
      smooth: true
    };
    this._config = this._defaultConfig;
    this._targetElement = null;
    this._anchorElements = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    if (!this._element) return;
    const targetElement = this._getTarget() === "body" ? document : KTDom$1.getElement(this._getTarget());
    if (!targetElement) return;
    this._targetElement = targetElement;
    this._anchorElements = this._element.querySelectorAll("[data-scrollspy-anchor]");
    if (!this._anchorElements) return;
    this._handlers();
    this._update();
  }
  _getTarget() {
    return this._element.getAttribute("data-scrollspy-target") || this._getOption("target");
  }
  _handlers() {
    if (!this._anchorElements) return;
    this._targetElement.addEventListener("scroll", () => {
      this._anchorElements.forEach((anchorElement) => {
        this._updateAnchor(anchorElement);
      });
    });
    KTEventHandler.on(this._element, "[data-scrollspy-anchor]", "click", (event, target) => {
      event.preventDefault();
      this._scrollTo(target);
    });
  }
  _scrollTo(anchorElement) {
    if (!anchorElement) return;
    const sectionElement = KTDom$1.getElement(anchorElement.getAttribute("href"));
    if (!sectionElement) return;
    const targetElement = this._targetElement === document ? window : this._targetElement;
    if (!targetElement) return;
    let offset = parseInt(this._getOption("offset"));
    if (anchorElement.getAttribute("data-scrollspy-anchor-offset")) {
      offset = parseInt(anchorElement.getAttribute("data-scrollspy-anchor-offset"));
    }
    const scrollTop = sectionElement.offsetTop - offset;
    if ("scrollTo" in targetElement) {
      targetElement.scrollTo({
        top: scrollTop,
        left: 0,
        behavior: this._getOption("smooth") ? "smooth" : "instant"
      });
    }
  }
  _updateAnchor(anchorElement) {
    const sectionElement = KTDom$1.getElement(anchorElement.getAttribute("href"));
    if (!sectionElement) return;
    if (!KTDom$1.isVisible(anchorElement)) return;
    if (!this._anchorElements) return;
    const scrollPosition = this._targetElement === document ? document.documentElement.scrollTop || document.body.scrollTop : this._targetElement.scrollTop;
    let offset = parseInt(this._getOption("offset"));
    if (anchorElement.getAttribute("data-scrollspy-anchor-offset")) {
      offset = parseInt(anchorElement.getAttribute("data-scrollspy-anchor-offset"));
    }
    const offsetTop = sectionElement.offsetTop;
    if (scrollPosition + offset >= offsetTop) {
      this._anchorElements.forEach((anchorElement2) => {
        anchorElement2.classList.remove("active");
      });
      const payload = { element: anchorElement };
      this._fireEvent("activate", payload);
      this._dispatchEvent("activate", payload);
      anchorElement.classList.add("active");
      const parentAnchorElements = KTDom$1.parents(anchorElement, "[data-scrollspy-group]");
      if (parentAnchorElements) {
        parentAnchorElements.forEach((parentAnchorElement) => {
          var _a;
          (_a = parentAnchorElement.querySelector("[data-scrollspy-anchor]")) == null ? void 0 : _a.classList.add("active");
        });
      }
    }
  }
  _update() {
    if (!this._anchorElements) return;
    this._anchorElements.forEach((anchorElement) => {
      this._updateAnchor(anchorElement);
    });
  }
  _isActive(anchorElement) {
    return anchorElement.classList.contains("active");
  }
  updateAnchor(anchorElement) {
    this._updateAnchor(anchorElement);
  }
  isActive(anchorElement) {
    return this._isActive(anchorElement);
  }
  update() {
    this.update();
  }
  scrollTo(anchorElement) {
    this._scrollTo(anchorElement);
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "scrollspy")) {
      return KTData.get(element, "scrollspy");
    }
    if (element.getAttribute("data-scrollspy") === "true") {
      return new KTScrollspy2(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTScrollspy2(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-scrollspy="true"]');
    elements.forEach((element) => {
      new KTScrollspy2(element);
    });
  }
  static init() {
    KTScrollspy2.createInstances();
  }
};
class KTScrollable extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "scrollable";
    this._defaultConfig = {
      save: true,
      dependencies: "",
      wrappers: "",
      offset: ""
    };
    this._config = this._defaultConfig;
    this._elementId = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    if (!this._element) return;
    this._elementId = this._element.getAttribute("id");
    this._handlers();
    this._update();
  }
  _handlers() {
    if (!this._element) return;
    this._element.addEventListener("scroll", () => {
      if (!this._element) return;
      localStorage.setItem(`${this._elementId}st`, this._element.scrollTop.toString());
    });
  }
  _update() {
    this._setupHeight();
    this._setupState();
  }
  _setupHeight() {
    if (!this._element) return;
    const heightType = this._getHeightType();
    const height = this._getHeight();
    if (height && height != "0" && height.length > 0) {
      this._element.style.setProperty(heightType, height);
    } else {
      this._element.style.setProperty(heightType, "");
    }
  }
  _setupState() {
    if (!this._element) return;
    const stateEnabled = this._getOption("state") === true;
    const elementIdExists = Boolean(this._elementId);
    if (stateEnabled && elementIdExists) {
      const storedPosition = localStorage.getItem(this._elementId + "st");
      if (storedPosition) {
        const pos = parseInt(storedPosition);
        if (pos > 0) {
          this._element.scroll({
            top: pos,
            behavior: "instant"
          });
        }
      }
    }
  }
  _getHeight() {
    const height = this._getHeightOption();
    if (height !== null && typeof height === "string" && height.toLowerCase() === "auto") {
      return this._getAutoHeight();
    } else if (height) {
      return parseInt(height).toString() + "px";
    } else {
      return "0";
    }
  }
  _getAutoHeight() {
    if (!this._element) return "";
    let height = KTDom$1.getViewPort().height;
    const dependencies = this._getOption("dependencies");
    const wrappers = this._getOption("wrappers");
    const offset = this._getOption("offset");
    height -= this._getElementSpacing(this._element);
    if (dependencies && dependencies.length > 0) {
      const elements = document.querySelectorAll(dependencies);
      elements.forEach((element) => {
        if (KTDom$1.getCssProp(element, "display") === "none") {
          return;
        }
        height -= this._getElementHeight(element);
      });
    }
    if (wrappers && wrappers.length > 0) {
      const elements = document.querySelectorAll(wrappers);
      elements.forEach((element) => {
        if (KTDom$1.getCssProp(element, "display") === "none") {
          return;
        }
        height -= this._getElementSpacing(element);
      });
    }
    if (offset && offset.length > 0) {
      height -= parseInt(offset);
    }
    return height.toString() + "px";
  }
  _getElementHeight(element) {
    let height = 0;
    if (!element) {
      return height;
    }
    const computedStyle = window.getComputedStyle(element);
    if (computedStyle.height) {
      height += parseInt(computedStyle.height);
    }
    if (computedStyle.marginTop) {
      height += parseInt(computedStyle.marginTop);
    }
    if (computedStyle.marginBottom) {
      height += parseInt(computedStyle.marginBottom);
    }
    if (computedStyle.borderTopWidth) {
      height += parseInt(computedStyle.borderTopWidth);
    }
    if (computedStyle.borderBottomWidth) {
      height += parseInt(computedStyle.borderBottomWidth);
    }
    return height;
  }
  _getElementSpacing(element) {
    let spacing = 0;
    if (!element) {
      return spacing;
    }
    const computedStyle = window.getComputedStyle(element);
    if (computedStyle.marginTop) {
      spacing += parseInt(computedStyle.marginTop);
    }
    if (computedStyle.marginBottom) {
      spacing += parseInt(computedStyle.marginBottom);
    }
    if (computedStyle.paddingTop) {
      spacing += parseInt(computedStyle.paddingTop);
    }
    if (computedStyle.paddingBottom) {
      spacing += parseInt(computedStyle.paddingBottom);
    }
    if (computedStyle.borderTopWidth) {
      spacing += parseInt(computedStyle.borderTopWidth);
    }
    if (computedStyle.borderBottomWidth) {
      spacing += parseInt(computedStyle.borderBottomWidth);
    }
    return spacing;
  }
  _getHeightType() {
    if (this._getOption("minHeight")) {
      return "min-height";
    }
    if (this._getOption("maxHeight")) {
      return "max-height";
    } else {
      return "height";
    }
  }
  _getHeightOption() {
    const heightType = this._getHeightType();
    if (heightType == "min-height") {
      return this._getOption("minHeight");
    }
    if (heightType == "max-height") {
      return this._getOption("maxHeight");
    } else {
      return this._getOption("height");
    }
  }
  update() {
    return this._update();
  }
  getHeight() {
    return this._getHeight();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "scrollable")) {
      return KTData.get(element, "scrollable");
    }
    if (element.getAttribute("data-scrollable") === "true") {
      return new KTScrollable(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTScrollable(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-scrollable="true"]');
    elements.forEach((element) => {
      new KTScrollable(element);
    });
  }
  static handleResize() {
    window.addEventListener("resize", () => {
      let timer;
      KTUtils.throttle(timer, function() {
        const elements = document.querySelectorAll("[data-scrollable]");
        elements.forEach((element) => {
          var _a;
          (_a = KTScrollable.getInstance(element)) == null ? void 0 : _a.update();
        });
      }, 200);
    });
  }
  static init() {
    KTScrollable.createInstances();
    if (window.KT_SCROLL_INITIALIZED !== true) {
      KTScrollable.handleResize();
      window.KT_SCROLL_INITIALIZED = true;
    }
  }
}
class KTScrollto extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "scrollto";
    this._defaultConfig = {
      smooth: true,
      parent: "body",
      target: "",
      offset: 0
    };
    this._config = this._defaultConfig;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    if (!this._element) return;
    this._targetElement = this._getTargetElement();
    if (!this._targetElement) {
      return;
    }
    this._handlers();
  }
  _getTargetElement() {
    return KTDom$1.getElement(this._element.getAttribute("data-scrollto")) || KTDom$1.getElement(this._getOption("target"));
  }
  _handlers() {
    if (!this._element) return;
    this._element.addEventListener("click", (event) => {
      event.preventDefault();
      this._scroll();
    });
  }
  _scroll() {
    const pos = this._targetElement.offsetTop + parseInt(this._getOption("offset"));
    let parent2 = KTDom$1.getElement(this._getOption("parent"));
    if (!parent2 || parent2 === document.body) {
      parent2 = window;
    }
    parent2.scrollTo({
      top: pos,
      behavior: this._getOption("smooth") ? "smooth" : "instant"
    });
  }
  scroll() {
    this._scroll();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "scrollto")) {
      return KTData.get(element, "scrollto");
    }
    if (element.getAttribute("data-scrollto") !== "false") {
      return new KTScrollto(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTScrollto(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-scrollto]:not([data-scrollto="false"])');
    elements.forEach((element) => {
      new KTScrollto(element);
    });
  }
  static init() {
    KTScrollto.createInstances();
  }
}
class KTSticky extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "sticky";
    this._defaultConfig = {
      name: "",
      class: "",
      top: "",
      left: "",
      right: "",
      width: "",
      zindex: "",
      offset: 0,
      reverse: false,
      release: "",
      activate: ""
    };
    this._config = this._defaultConfig;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._releaseElement = KTDom$1.getElement(this._getOption("release"));
    this._activateElement = KTDom$1.getElement(this._getOption("activate"));
    this._wrapperElement = this._element.closest("[data-sticky-wrapper]");
    this._attributeRoot = `data-sticky-${this._getOption("name")}`;
    this._eventTriggerState = true;
    this._lastScrollTop = 0;
    this._handlers();
    this._process();
    this._update();
  }
  _handlers() {
    window.addEventListener("resize", () => {
      let timer;
      KTUtils.throttle(
        timer,
        () => {
          this._update();
        },
        200
      );
    });
    window.addEventListener("scroll", () => {
      this._process();
    });
  }
  _process() {
    const reverse = this._getOption("reverse");
    const offset = this._getOffset();
    if (offset < 0) {
      this._disable();
      return;
    }
    const st = KTDom$1.getScrollTop();
    const release = this._releaseElement && KTDom$1.isPartiallyInViewport(this._releaseElement);
    if (reverse === true) {
      if (st > offset && !release) {
        if (document.body.hasAttribute(this._attributeRoot) === false) {
          if (this._enable() === false) {
            return;
          }
          document.body.setAttribute(this._attributeRoot, "on");
        }
        if (this._eventTriggerState === true) {
          const payload = { active: true };
          this._fireEvent("change", payload);
          this._dispatchEvent("change", payload);
          this._eventTriggerState = false;
        }
      } else {
        if (document.body.hasAttribute(this._attributeRoot) === true) {
          this._disable();
          if (release) {
            this._element.classList.add("release");
          }
          document.body.removeAttribute(this._attributeRoot);
        }
        if (this._eventTriggerState === false) {
          const payload = { active: false };
          this._fireEvent("change", payload);
          this._dispatchEvent("change", payload);
          this._eventTriggerState = true;
        }
      }
      this._lastScrollTop = st;
    } else {
      if (st > offset && !release) {
        if (document.body.hasAttribute(this._attributeRoot) === false) {
          if (this._enable() === false) {
            return;
          }
          document.body.setAttribute(this._attributeRoot, "on");
        }
        if (this._eventTriggerState === true) {
          const payload = { active: true };
          this._fireEvent("change", payload);
          this._dispatchEvent("change", payload);
          this._eventTriggerState = false;
        }
      } else {
        if (document.body.hasAttribute(this._attributeRoot) === true) {
          this._disable();
          if (release) {
            this._element.classList.add("release");
          }
          document.body.removeAttribute(this._attributeRoot);
        }
        if (this._eventTriggerState === false) {
          const payload = { active: false };
          this._fireEvent("change", payload);
          this._dispatchEvent("change", payload);
          this._eventTriggerState = true;
        }
      }
    }
  }
  _getOffset() {
    let offset = parseInt(this._getOption("offset"));
    const activateElement = KTDom$1.getElement(this._getOption("activate"));
    if (activateElement) {
      offset = Math.abs(offset - activateElement.offsetTop);
    }
    return offset;
  }
  _enable() {
    if (!this._element) return false;
    let width = this._getOption("width");
    const top = this._getOption("top");
    const left = this._getOption("left");
    const right = this._getOption("right");
    const height = this._calculateHeight();
    const zindex = this._getOption("zindex");
    const classList = this._getOption("class");
    if (height + parseInt(top) > KTDom$1.getViewPort().height) {
      return false;
    }
    if (width) {
      const targetElement = document.querySelector(width);
      if (targetElement) {
        width = KTDom$1.getCssProp(targetElement, "width");
      } else if (width == "auto") {
        width = KTDom$1.getCssProp(this._element, "width");
      }
      this._element.style.width = `${Math.round(parseFloat(width))}px`;
    }
    if (top) {
      this._element.style.top = `${top}px`;
    }
    if (left) {
      if (left === "auto") {
        const offsetLeft = KTDom$1.offset(this._element).left;
        if (offsetLeft >= 0) {
          this._element.style.left = `${offsetLeft}px`;
        }
      } else {
        this._element.style.left = `${left}px`;
      }
    }
    if (right) {
      if (right === "auto") {
        const offseRight = KTDom$1.offset(this._element).right;
        if (offseRight >= 0) {
          this._element.style.right = `${offseRight}px`;
        }
      } else {
        this._element.style.right = `${right}px`;
      }
    }
    if (zindex) {
      this._element.style.zIndex = zindex;
      this._element.style.position = "fixed";
    }
    if (classList) {
      KTDom$1.addClass(this._element, classList);
    }
    if (this._wrapperElement) {
      this._wrapperElement.style.height = `${height}px`;
    }
    this._element.classList.add("active");
    this._element.classList.remove("release");
    return true;
  }
  _disable() {
    if (!this._element) return;
    this._element.style.top = "";
    this._element.style.width = "";
    this._element.style.left = "";
    this._element.style.right = "";
    this._element.style.zIndex = "";
    this._element.style.position = "";
    const classList = this._getOption("class");
    if (this._wrapperElement) {
      this._wrapperElement.style.height = "";
    }
    if (classList) {
      KTDom$1.removeClass(this._element, classList);
    }
    this._element.classList.remove("active");
  }
  _update() {
    if (this._isActive()) {
      this._disable();
      this._enable();
    } else {
      this._disable();
    }
  }
  _calculateHeight() {
    if (!this._element) return 0;
    let height = parseFloat(KTDom$1.getCssProp(this._element, "height"));
    height += parseFloat(KTDom$1.getCssProp(this._element, "margin-top"));
    height += parseFloat(KTDom$1.getCssProp(this._element, "margin-bottom"));
    if (KTDom$1.getCssProp(this._element, "border-top")) {
      height = height + parseFloat(KTDom$1.getCssProp(this._element, "border-top"));
    }
    if (KTDom$1.getCssProp(this._element, "border-bottom")) {
      height = height + parseFloat(KTDom$1.getCssProp(this._element, "border-bottom"));
    }
    return height;
  }
  _isActive() {
    return this._element.classList.contains("active");
  }
  update() {
    this._update();
  }
  isActive() {
    return this._isActive();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "sticky")) {
      return KTData.get(element, "sticky");
    }
    if (element.getAttribute("data-sticky") === "true") {
      return new KTSticky(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTSticky(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-sticky="true"]');
    elements.forEach((element) => {
      new KTSticky(element);
    });
  }
  static init() {
    KTSticky.createInstances();
  }
}
class KTReparent extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "reparent";
    this._defaultConfig = {
      mode: "",
      target: ""
    };
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._update();
  }
  _update() {
    if (!this._element) return;
    const target = this._getOption("target");
    const targetEl = KTDom$1.getElement(target);
    const mode = this._getOption("mode");
    if (targetEl && this._element.parentNode !== targetEl) {
      if (mode === "prepend") {
        targetEl.prepend(this._element);
      } else if (mode === "append") {
        targetEl.append(this._element);
      }
    }
  }
  update() {
    this._update();
  }
  static handleResize() {
    window.addEventListener("resize", () => {
      let timer;
      KTUtils.throttle(timer, () => {
        document.querySelectorAll("[data-reparent]").forEach((element) => {
          const reparent = KTReparent.getInstance(element);
          reparent == null ? void 0 : reparent.update();
        });
      }, 200);
    });
  }
  static getInstance(element) {
    return KTData.get(element, "reparent");
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTReparent(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-reparent="true"]');
    elements.forEach((element) => {
      new KTReparent(element);
    });
  }
  static init() {
    KTReparent.createInstances();
    if (window.KT_REPARENT_INITIALIZED !== true) {
      KTReparent.handleResize();
      window.KT_REPARENT_INITIALIZED = true;
    }
  }
}
let KTToggle$1 = class KTToggle2 extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "toggle";
    this._defaultConfig = {
      target: "",
      activeClass: "active",
      class: "",
      removeClass: "",
      attribute: ""
    };
    this._config = this._defaultConfig;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._targetElement = this._getTargetElement();
    if (!this._targetElement) {
      return;
    }
    this._handlers();
  }
  _handlers() {
    if (!this._element) return;
    this._element.addEventListener("click", () => {
      this._toggle();
    });
  }
  _getTargetElement() {
    return KTDom$1.getElement(this._element.getAttribute("data-toggle")) || KTDom$1.getElement(this._getOption("target"));
  }
  _toggle() {
    if (!this._element) return;
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    this._element.classList.toggle(this._getOption("activeClass"));
    this._update();
    this._fireEvent("toggled");
    this._dispatchEvent("toggled");
  }
  _update() {
    if (!this._targetElement) return;
    if (this._getOption("removeClass")) {
      KTDom$1.removeClass(this._targetElement, this._getOption("removeClass"));
    }
    if (!this._isActive()) {
      if (this._getOption("class")) {
        KTDom$1.addClass(this._targetElement, this._getOption("class"));
      }
      if (this._getOption("attribute")) {
        this._targetElement.setAttribute(this._getOption("attribute"), "true");
      }
    } else {
      if (this._getOption("class")) {
        KTDom$1.removeClass(this._targetElement, this._getOption("class"));
      }
      if (this._getOption("attribute")) {
        this._targetElement.removeAttribute(this._getOption("attribute"));
      }
    }
  }
  _isActive() {
    if (!this._element) return false;
    return KTDom$1.hasClass(this._targetElement, this._getOption("class")) || this._targetElement.hasAttribute(this._getOption("attribute"));
  }
  toggle() {
    this._toggle();
  }
  update() {
    this._update();
  }
  isActive() {
    return this._isActive();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "toggle")) {
      return KTData.get(element, "toggle");
    }
    if (element.getAttribute("data-toggle") !== "false") {
      return new KTToggle2(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTToggle2(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-toggle]:not([data-toggle="false"])');
    elements.forEach((element) => {
      new KTToggle2(element);
    });
  }
  static init() {
    KTToggle2.createInstances();
  }
};
class KTTooltip extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "tooltip";
    this._defaultConfig = {
      target: "",
      hiddenClass: "hidden",
      trigger: "hover",
      placement: "top",
      container: "",
      strategy: "fixed",
      offset: "0, 5px",
      delayShow: 0,
      delayHide: 0,
      permanent: false,
      zindex: "100"
    };
    this._config = this._defaultConfig;
    this._isOpen = false;
    this._transitioning = false;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._targetElement = this._getTargetElement();
    if (!this._targetElement) {
      return;
    }
    this._handlers();
  }
  _getTargetElement() {
    return KTDom$1.getElement(this._element.getAttribute("data-tooltip")) || this._element.querySelector(".tooltip, .popover, [data-tooltip-content]") || KTDom$1.getElement(this._getOption("target"));
  }
  _handlers() {
    if (!this._element) return;
    if (this._getOption("trigger") === "click") {
      this._element.addEventListener("click", () => this._toggle());
    }
    if (this._getOption("trigger") === "focus") {
      this._element.addEventListener("focus", () => this._toggle());
      this._element.addEventListener("blur", () => this._hide());
    }
    if (this._getOption("trigger") === "hover") {
      this._element.addEventListener("mouseenter", () => this._show());
      this._element.addEventListener("mouseleave", () => this._hide());
    }
  }
  _show() {
    if (this._isOpen) return;
    if (this._timeout) {
      clearTimeout(this._timeout);
    }
    this._timeout = setTimeout(() => {
      const payload = { cancel: false };
      this._fireEvent("show", payload);
      this._dispatchEvent("show", payload);
      if (payload.cancel === true) {
        return;
      }
      if (!this._targetElement) {
        return;
      }
      if (!this._element) return;
      this._createPopper();
      this._handleContainer();
      this._setZindex();
      this._targetElement.classList.add("show");
      this._targetElement.classList.remove(this._getOption("hiddenClass"));
      this._targetElement.style.opacity = "0";
      KTDom$1.reflow(this._targetElement);
      this._targetElement.style.opacity = "1";
      this._transitioning = true;
      this._isOpen = true;
      KTDom$1.transitionEnd(this._targetElement, () => {
        this._targetElement.style.opacity = "";
        this._transitioning = false;
        this._fireEvent("shown");
        this._dispatchEvent("shown");
      });
    }, this._getOption("delayShow"));
  }
  _hide() {
    if (!this._isOpen) return;
    if (this._timeout) {
      clearTimeout(this._timeout);
    }
    this._timeout = setTimeout(() => {
      const payload = { cancel: false };
      this._fireEvent("hide", payload);
      this._dispatchEvent("hide", payload);
      if (payload.cancel === true) {
        return;
      }
      if (!this._targetElement) {
        return;
      }
      this._targetElement.style.opacity = "1";
      KTDom$1.reflow(this._targetElement);
      this._targetElement.style.opacity = "0";
      this._transitioning = true;
      this._isOpen = false;
      KTDom$1.transitionEnd(this._targetElement, () => {
        this._popper.destroy();
        this._targetElement.classList.remove("show");
        this._targetElement.classList.add(this._getOption("hiddenClass"));
        this._targetElement.style.opacity = "";
        this._transitioning = false;
        this._fireEvent("hidden");
        this._dispatchEvent("hidden");
      });
    }, this._getOption("delayHide"));
  }
  _toggle() {
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._isOpen) {
      this._hide();
    } else {
      this._show();
    }
  }
  _createPopper() {
    if (!this._element) return;
    const offsetValue = this._getOption("offset");
    const offset = offsetValue ? offsetValue.toString().split(",").map((value) => parseInt(value.trim(), 10)) : [0, 0];
    if (!this._targetElement) {
      return;
    }
    this._popper = createPopper(
      this._element,
      this._targetElement,
      {
        placement: this._getOption("placement"),
        strategy: this._getOption("strategy"),
        modifiers: [
          {
            name: "offset",
            options: {
              offset
            }
          }
        ]
      }
    );
  }
  _handleContainer() {
    var _a;
    if (this._getOption("container")) {
      if (this._getOption("container") === "body") {
        document.body.appendChild(this._targetElement);
      } else {
        (_a = document.querySelector(this._getOption("container"))) == null ? void 0 : _a.appendChild(this._targetElement);
      }
    }
  }
  _setZindex() {
    let zindex = parseInt(this._getOption("zindex"));
    if (parseInt(KTDom$1.getCssProp(this._element, "z-index")) > zindex) {
      zindex = parseInt(KTDom$1.getCssProp(this._element, "z-index"));
    }
    if (KTDom$1.getHighestZindex(this._element) > zindex) {
      zindex = KTDom$1.getHighestZindex(this._element) + 1;
    }
    this._targetElement.style.zIndex = String(zindex);
  }
  show() {
    this._show();
  }
  hide() {
    this._hide();
  }
  toggle() {
    this._toggle();
  }
  getContentElement() {
    return this._targetElement;
  }
  isOpen() {
    return this._isOpen;
  }
  getTriggerOption() {
    return this._getOption("trigger");
  }
  isPermanent() {
    return this._getOption("permanent");
  }
  static initHandlers() {
    document.addEventListener("click", (event) => {
      document.querySelectorAll("[data-tooltip]").forEach((tooltipElement) => {
        const tooltip = KTTooltip.getInstance(tooltipElement);
        if (tooltip && tooltip.isOpen() && tooltip.getTriggerOption() !== "hover" && !tooltip.isPermanent()) {
          const contentElement = tooltip.getContentElement();
          if (contentElement && (contentElement === event.target || contentElement.contains(event.target))) {
            return;
          } else {
            tooltip.hide();
          }
        }
      });
    });
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "tooltip")) {
      return KTData.get(element, "tooltip");
    }
    if (element.getAttribute("data-tooltip") !== "false") {
      return new KTTooltip(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTTooltip(element, config);
  }
  static createInstances() {
    document.querySelectorAll('[data-tooltip]:not([data-tooltip="false"])').forEach((element) => {
      new KTTooltip(element);
    });
  }
  static init() {
    KTTooltip.createInstances();
    if (window.KT_TOOLTIP_INITIALIZED !== true) {
      KTTooltip.initHandlers();
      window.KT_TOOLTIP_INITIALIZED = true;
    }
  }
}
class KTStepper extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "stepper";
    this._defaultConfig = {
      hiddenClass: "hidden",
      activeStep: 1
    };
    this._config = this._defaultConfig;
    this._activeStep = 0;
    this._nextElement = null;
    this._backElement = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    if (!this._element) return;
    this._nextElement = this._element.querySelector("[data-stepper-next]");
    this._backElement = this._element.querySelector("[data-stepper-back]");
    this._activeStep = 1;
    if (this._getOption("activeStep") !== this._activeStep) {
      this._go(this._getOption("activeStep"));
    }
    this._update();
    this._handlers();
  }
  _handlers() {
    if (!this._nextElement) {
      console.error("data-stepper-next not found");
      return;
    }
    if (this._nextElement) {
      this._nextElement.addEventListener("click", (event) => {
        event.preventDefault();
        this._goNext();
      });
    }
    if (this._backElement) {
      this._backElement.addEventListener("click", (event) => {
        event.preventDefault();
        this._goBack();
      });
    }
  }
  _update() {
    if (!this._element) return;
    let state = "";
    if (this._activeStep === this._getTotalSteps()) {
      state = "last";
    } else if (this._activeStep === 1) {
      state = "first";
    } else {
      state = "between";
    }
    this._element.classList.remove("first");
    this._element.classList.remove("last");
    this._element.classList.remove("between");
    this._element.classList.add(state);
    this._getItemElements().forEach((element, index) => {
      const contentElement = KTDom$1.getElement(element.getAttribute("data-stepper-item"));
      if (!contentElement) return;
      element.classList.remove("active");
      element.classList.remove("completed");
      element.classList.remove("pending");
      const numberElement = element.querySelector("[data-stepper-number]");
      if (numberElement) numberElement.innerHTML = String(index + 1);
      if (index + 1 == this._activeStep) {
        element.classList.add("active");
        contentElement.classList.remove(this._getOption("hiddenClass"));
      } else {
        contentElement.classList.add(this._getOption("hiddenClass"));
        if (index + 1 < this._activeStep) {
          element.classList.add("completed");
        } else {
          element.classList.add("pending");
        }
      }
    });
  }
  _getItemElements() {
    const elements = [];
    this._element.querySelectorAll("[data-stepper-item]").forEach((element) => {
      if (KTDom$1.isVisible(element)) {
        elements.push(element);
      }
    });
    return elements;
  }
  _go(step) {
    if (step === this._activeStep || step > this._getTotalSteps() || step < 0) return;
    const payload = { step, cancel: false };
    this._fireEvent("change", payload);
    this._dispatchEvent("change", payload);
    if (payload.cancel === true) {
      return;
    }
    this._activeStep = step;
    this._update();
    this._fireEvent("changed");
    this._dispatchEvent("changed");
  }
  _goTo(itemElement) {
    const step = this._getStep(itemElement);
    this._go(step);
  }
  _getStep(itemElement) {
    let step = -1;
    this._getItemElements().forEach((element, index) => {
      if (element === itemElement) {
        step = index + 1;
        return;
      }
    });
    return step;
  }
  _getItemElement(step) {
    return this._getItemElements()[step - 1];
  }
  _getTotalSteps() {
    return this._getItemElements().length;
  }
  _goNext() {
    let step;
    if (this._getTotalSteps() >= this._activeStep + 1) {
      step = this._activeStep + 1;
    } else {
      step = this._getTotalSteps();
    }
    this._go(step);
  }
  _goBack() {
    let step;
    if (this._activeStep - 1 > 1) {
      step = this._activeStep - 1;
    } else {
      step = 1;
    }
    this._go(step);
  }
  _goLast() {
    const step = this._getTotalSteps();
    this._go(step);
  }
  _goFirst() {
    const step = 1;
    this._go(step);
  }
  _isLast() {
    return this._getTotalSteps() === this._activeStep + 1;
  }
  _isFirst() {
    return this._activeStep === 1;
  }
  isLast() {
    return this._isLast();
  }
  isFirst() {
    return this._isFirst();
  }
  go(step) {
    this._go(step);
  }
  goTo(itemElement) {
    this.goTo(itemElement);
  }
  goFirst() {
    this._goFirst();
  }
  goLast() {
    this._goLast();
  }
  goNext() {
    this._goNext();
  }
  goBack() {
    this._goBack();
  }
  update() {
    this._update();
  }
  getStep(itemElement) {
    return this._getStep(itemElement);
  }
  getItemElement(step) {
    return this._getItemElement(step);
  }
  getTotalSteps() {
    return this._getTotalSteps();
  }
  getItemElements() {
    return this._getItemElements();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "stepper")) {
      return KTData.get(element, "stepper");
    }
    if (element.getAttribute("data-stepper") === "true") {
      return new KTStepper(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTStepper(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-stepper="true"]');
    elements.forEach((element) => {
      new KTStepper(element);
    });
  }
  static init() {
    KTStepper.createInstances();
  }
}
class KTTheme extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "theme";
    this._defaultConfig = {
      mode: "light",
      class: true,
      attribute: "data-theme-mode"
    };
    this._mode = null;
    this._currentMode = null;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._setMode(localStorage.getItem("theme") || this._getOption("mode"));
    this._handlers();
  }
  _handlers() {
    if (!this._element) return;
    KTEventHandler.on(this._element, '[data-theme-toggle="true"]', "click", () => {
      this._toggle();
    });
    KTEventHandler.on(this._element, "[data-theme-switch]", "click", (event, target) => {
      event.preventDefault();
      const mode = target.getAttribute("data-theme-switch");
      this._setMode(mode);
    });
  }
  _toggle() {
    const mode = this._currentMode === "light" ? "dark" : "light";
    this._setMode(mode);
  }
  _setMode(mode) {
    if (!this._element) return;
    const payload = { cancel: false };
    this._fireEvent("change", payload);
    this._dispatchEvent("change", payload);
    if (payload.cancel === true) {
      return;
    }
    let currentMode = mode;
    if (mode === "system") {
      currentMode = this._getSystemMode();
    }
    this._mode = mode;
    this._currentMode = currentMode;
    this._bindMode();
    this._updateState();
    localStorage.setItem("theme", this._mode);
    this._element.setAttribute("data-theme-mode", mode);
    this._fireEvent("changed", {});
    this._dispatchEvent("changed", {});
  }
  _getMode() {
    return localStorage.getItem("theme") || this._mode;
  }
  _getSystemMode() {
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  }
  _bindMode() {
    if (!this._currentMode || !this._element) {
      return;
    }
    if (this._getOption("class")) {
      this._element.classList.remove("dark");
      this._element.classList.remove("light");
      this._element.removeAttribute(this._getOption("attribute"));
      this._element.classList.add(this._currentMode);
    } else {
      this._element.classList.remove(this._currentMode);
      this._element.setAttribute(this._getOption("attribute"), this._currentMode);
    }
  }
  _updateState() {
    const elements = document.querySelectorAll('input[type="checkbox"][data-theme-state]');
    elements.forEach((element) => {
      if (element.getAttribute("data-theme-state") === this._mode) {
        element.checked = true;
      }
    });
  }
  getMode() {
    return this._getMode();
  }
  setMode(mode) {
    this.setMode(mode);
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "theme")) {
      return KTData.get(element, "theme");
    }
    if (element.getAttribute("data-theme") !== "false") {
      return new KTTheme(element);
    }
    return null;
  }
  static getOrCreateInstance(element = document.body, config) {
    return this.getInstance(element) || new KTTheme(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-theme]:not([data-theme="false"]');
    elements.forEach((element) => {
      new KTTheme(element);
    });
  }
  static init() {
    KTTheme.createInstances();
  }
}
class KTImageInput extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "image-input";
    this._defaultConfig = {
      hiddenClass: "hidden"
    };
    this._previewUrl = "";
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._inputElement = this._element.querySelector('input[type="file"]');
    this._hiddenElement = this._element.querySelector('input[type="hidden"]');
    this._removeElement = this._element.querySelector("[data-image-input-remove]");
    this._previewElement = this._element.querySelector(".image-input-preview");
    this._update();
    this._handlers();
  }
  _handlers() {
    KTEventHandler.on(this._element, ".image-input-placeholder", "click", (event) => {
      event.preventDefault();
      this._inputElement.click();
    });
    this._inputElement.addEventListener("change", () => {
      this._change();
    });
    this._removeElement.addEventListener("click", () => {
      this._remove();
    });
  }
  _change() {
    const payload = { cancel: false };
    this._fireEvent("change", payload);
    this._dispatchEvent("change", payload);
    if (payload.cancel === true) {
      return;
    }
    const reader = new FileReader();
    reader.onload = () => {
      this._previewElement.style.backgroundImage = `url(${reader.result})`;
    };
    reader.readAsDataURL(this._inputElement.files[0]);
    this._inputElement.value = "";
    this._hiddenElement.value = "";
    this._lastMode = "new";
    this._element.classList.add("changed");
    this._removeElement.classList.remove("hidden");
    this._element.classList.remove("empty");
    this._fireEvent("changed");
    this._dispatchEvent("changed");
  }
  _remove() {
    const payload = { cancel: false };
    this._fireEvent("remove", payload);
    this._dispatchEvent("remove", payload);
    if (payload.cancel === true) {
      return;
    }
    this._element.classList.remove("empty");
    this._element.classList.remove("changed");
    if (this._lastMode == "new") {
      if (this._previewUrl == "") this._removeElement.classList.add(this._getOption("hiddenClass"));
      if (this._previewUrl) {
        this._previewElement.style.backgroundImage = `url(${this._previewUrl})`;
      } else {
        this._previewElement.style.backgroundImage = "none";
        this._element.classList.add("empty");
      }
      this._inputElement.value = "";
      this._hiddenElement.value = "";
      this._lastMode = "saved";
    } else if (this._lastMode == "saved") {
      if (this._previewUrl == "") this._removeElement.classList.add(this._getOption("hiddenClass"));
      this._previewElement.style.backgroundImage = "none";
      this._element.classList.add("empty");
      this._hiddenElement.value = "1";
      this._inputElement.value = "";
      this._lastMode = "placeholder";
    } else if (this._lastMode == "placeholder") {
      if (this._previewUrl == "") this._removeElement.classList.add(this._getOption("hiddenClass"));
      if (this._previewUrl) {
        this._previewElement.style.backgroundImage = `url(${this._previewUrl})`;
      } else {
        this._element.classList.add("empty");
      }
      this._inputElement.value = "";
      this._hiddenElement.value = "";
      this._lastMode = "saved";
    }
    this._fireEvent("remove");
    this._dispatchEvent("remove");
  }
  _update() {
    if (this._previewElement.style.backgroundImage) {
      this._setPreviewUrl(this._previewElement.style.backgroundImage);
      this._removeElement.classList.remove(this._getOption("hiddenClass"));
      this._lastMode = "saved";
    } else {
      this._removeElement.classList.add(this._getOption("hiddenClass"));
      this._element.classList.add("empty");
      this._lastMode = "placeholder";
    }
  }
  _getPreviewUrl() {
    return this._previewUrl;
  }
  _setPreviewUrl(url) {
    this._previewUrl = url.replace(/(url\(|\)|")/g, "");
  }
  isEmpty() {
    return this._inputElement.value.length === 0;
  }
  isChanged() {
    return this._inputElement.value.length > 0;
  }
  remove() {
    this._remove();
  }
  update() {
    this._update();
  }
  setPreviewUrl(url) {
    this._setPreviewUrl(url);
  }
  getPreviewUrl() {
    return this._getPreviewUrl();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "image-input")) {
      return KTData.get(element, "image-input");
    }
    if (element.getAttribute("data-image-input") === "true") {
      return new KTImageInput(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTImageInput(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-image-input="true"]');
    elements.forEach((element) => {
      new KTImageInput(element);
    });
  }
  static init() {
    KTImageInput.createInstances();
  }
}
let KTTogglePassword$1 = class KTTogglePassword2 extends KTComponent {
  constructor(element, config = null) {
    super();
    this._name = "toggle-password";
    this._defaultConfig = {
      permanent: false
    };
    this._config = this._defaultConfig;
    if (KTData.has(element, this._name)) return;
    this._init(element);
    this._buildConfig(config);
    this._triggerElement = this._element.querySelector("[data-toggle-password-trigger]");
    this._inputElement = this._element.querySelector("input");
    if (!this._triggerElement || !this._inputElement) {
      return;
    }
    this._handlers();
  }
  _handlers() {
    if (!this._element) return;
    this._triggerElement.addEventListener("click", (e2) => {
      this._toggle();
    });
    this._inputElement.addEventListener("input", () => {
      this._update();
    });
  }
  _toggle() {
    if (!this._element) return;
    const payload = { cancel: false };
    this._fireEvent("toggle", payload);
    this._dispatchEvent("toggle", payload);
    if (payload.cancel === true) {
      return;
    }
    if (this._isVisible()) {
      this._element.classList.remove("active");
      this._setVisible(false);
    } else {
      this._element.classList.add("active");
      this._setVisible(true);
    }
    this._fireEvent("toggled");
    this._dispatchEvent("toggled");
  }
  _update() {
    if (!this._element) return;
    if (this._getOption("permanent") === false) {
      if (this._isVisible()) {
        this._setVisible(false);
      }
    }
  }
  _isVisible() {
    return this._inputElement.getAttribute("type") === "text";
  }
  _setVisible(flag) {
    if (flag) {
      this._inputElement.setAttribute("type", "text");
    } else {
      this._inputElement.setAttribute("type", "password");
    }
  }
  toggle() {
    this._toggle();
  }
  setVisible(flag) {
    this._setVisible(flag);
  }
  isVisible() {
    return this._isVisible();
  }
  static getInstance(element) {
    if (!element) return null;
    if (KTData.has(element, "toggle-password")) {
      return KTData.get(element, "toggle-password");
    }
    if (element.getAttribute("data-toggle-password") === "true") {
      return new KTTogglePassword2(element);
    }
    return null;
  }
  static getOrCreateInstance(element, config) {
    return this.getInstance(element) || new KTTogglePassword2(element, config);
  }
  static createInstances() {
    const elements = document.querySelectorAll('[data-toggle-password="true"]');
    elements.forEach((element) => {
      new KTTogglePassword2(element);
    });
  }
  static init() {
    KTTogglePassword2.createInstances();
  }
};
const KTComponents$1 = {
  init() {
    KTMenu$1.init();
    KTDropdown.init();
    KTModal.init();
    KTDrawer$1.init();
    KTCollapse.init();
    KTDismiss.init();
    KTTabs.init();
    KTAccordion.init();
    KTScrollspy$1.init();
    KTScrollable.init();
    KTScrollto.init();
    KTSticky.init();
    KTReparent.init();
    KTToggle$1.init();
    KTTooltip.init();
    KTStepper.init();
    KTTheme.init();
    KTImageInput.init();
    KTTogglePassword$1.init();
    KTDataTable.init();
  }
};
window.KTUtils = KTUtils;
window.KTDom = KTDom$1;
window.KTEventHandler = KTEventHandler;
window.KTMenu = KTMenu$1;
window.KTDropdown = KTDropdown;
window.KTModal = KTModal;
window.KTDrawer = KTDrawer$1;
window.KTCollapse = KTCollapse;
window.KTDismiss = KTDismiss;
window.KTTabs = KTTabs;
window.KTAccordion = KTAccordion;
window.KTScrollspy = KTScrollspy$1;
window.KTScrollable = KTScrollable;
window.KTScrollto = KTScrollto;
window.KTSticky = KTSticky;
window.KTReparent = KTReparent;
window.KTToggle = KTToggle$1;
window.KTTooltip = KTTooltip;
window.KTStepper = KTStepper;
window.KTTheme = KTTheme;
window.KTImageInput = KTImageInput;
window.KTTogglePassword = KTTogglePassword$1;
window.KTDataTable = KTDataTable;
window.KTComponents = KTComponents$1;
KTDom$1.ready(() => {
  KTComponents$1.init();
});
const _KTDataTable = class _KTDataTable extends KTComponent {
  constructor(element, config) {
    super();
    this._name = "datatable";
    this._checkboxListener = (event) => {
      this._checkboxToggle(event);
    };
    this._data = [];
    if (KTData.has(element, this._name)) return;
    this._defaultConfig = this._initDefaultConfig(config);
    this._init(element);
    this._buildConfig();
    element.instance = this;
    this._initElements();
    if (this._config.stateSave === false) {
      this._deleteState();
    }
    if (this._config.stateSave) {
      this._loadState();
    }
    this._initTableHeader();
    this._updateData();
    this._fireEvent("init");
    this._dispatchEvent("init");
  }
  /**
   * Initialize default configuration for the datatable
   * @param config User-provided configuration options
   * @returns Default configuration merged with user-provided options
   */
  _initDefaultConfig(config) {
    return {
      /**
       * HTTP method for server-side API call
       */
      requestMethod: "GET",
      /**
       * Custom HTTP headers for the API request
       */
      requestHeaders: {
        "Content-Type": "application/x-www-form-urlencoded"
      },
      /**
       * Pagination info template
       */
      info: "{start}-{end} of {total}",
      /**
       * Info text when there is no data
       */
      infoEmpty: "No records found",
      /**
       * Available page sizes
       */
      pageSizes: [5, 10, 20, 30, 50],
      /**
       * Default page size
       */
      pageSize: 10,
      /**
       * Enable or disable pagination more button
       */
      pageMore: true,
      /**
       * Maximum number of pages before enabling pagination more button
       */
      pageMoreLimit: 3,
      /**
       * Pagination button templates
       */
      pagination: {
        number: {
          /**
           * CSS classes to be added to the pagination button
           */
          class: "btn",
          /**
           * Text to be displayed in the pagination button
           */
          text: "{page}"
        },
        previous: {
          /**
           * CSS classes to be added to the previous pagination button
           */
          class: "btn",
          /**
           * Text to be displayed in the previous pagination button
           */
          text: '<i class="ki-outline ki-black-left"></i>'
        },
        next: {
          /**
           * CSS classes to be added to the next pagination button
           */
          class: "btn",
          /**
           * Text to be displayed in the next pagination button
           */
          text: '<i class="ki-outline ki-black-right"></i>'
        },
        more: {
          /**
           * CSS classes to be added to the pagination more button
           */
          class: "btn",
          /**
           * Text to be displayed in the pagination more button
           */
          text: "..."
        }
      },
      /**
       * Sorting options
       */
      sort: {
        /**
         * CSS classes to be added to the sortable headers
         */
        classes: {
          base: "sort",
          asc: "asc",
          desc: "desc"
        },
        /**
         * Local sorting callback function
         * Sorts the data array based on the sort field and order
         * @param data Data array to be sorted
         * @param sortField Property name of the data object to be sorted by
         * @param sortOrder Sorting order (ascending or descending)
         * @returns Sorted data array
         */
        callback: (data, sortField, sortOrder) => {
          const compareValues = (a2, b2) => {
            const aText = String(a2).replace(/<[^>]*>|&nbsp;/g, "");
            const bText = String(b2).replace(/<[^>]*>|&nbsp;/g, "");
            return aText > bText ? sortOrder === "asc" ? 1 : -1 : aText < bText ? sortOrder === "asc" ? -1 : 1 : 0;
          };
          return data.sort((a2, b2) => {
            const aValue = a2[sortField];
            const bValue = b2[sortField];
            return compareValues(aValue, bValue);
          });
        }
      },
      search: {
        /**
         * Delay in milliseconds before the search function is applied to the data array
         * @default 500
         */
        delay: 500,
        // ms
        /**
         * Local search callback function
         * Filters the data array based on the search string
         * @param data Data array to be filtered
         * @param search Search string used to filter the data array
         * @returns Filtered data array
         */
        callback: (data, search) => {
          if (!data || !search) {
            return [];
          }
          return data.filter((item) => {
            if (!item) {
              return false;
            }
            return Object.values(item).some((value) => {
              if (typeof value !== "string" && typeof value !== "number" && typeof value !== "boolean") {
                return false;
              }
              const valueText = String(value).replace(/<[^>]*>|&nbsp;/g, "").toLowerCase();
              return valueText.includes(search.toLowerCase());
            });
          });
        }
      },
      /**
       * Loading spinner options
       */
      loading: {
        /**
         * Template to be displayed during data fetching process
         */
        template: `
					<div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
						<div class="flex items-center gap-2 px-4 py-2 font-medium leading-none text-2sm border border-gray-200 shadow-default rounded-md text-gray-500 bg-light">
							<svg class="animate-spin -ml-1 h-5 w-5 text-gray-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
								<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="3"></circle>
								<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
							</svg>
							{content}
						</div>
					</div>
				`,
        /**
         * Loading text to be displayed in the template
         */
        content: "Loading..."
      },
      /**
       * Selectors of the elements to be targeted
       */
      attributes: {
        /**
         * Data table element
         */
        table: 'table[data-datatable-table="true"]',
        /**
         * Pagination info element
         */
        info: '[data-datatable-info="true"]',
        /**
         * Page size dropdown element
         */
        size: '[data-datatable-size="true"]',
        /**
         * Pagination element
         */
        pagination: '[data-datatable-pagination="true"]',
        /**
         * Spinner element
         */
        spinner: '[data-datatable-spinner="true"]',
        /**
         * Checkbox element
         */
        check: '[data-datatable-check="true"]',
        checkbox: '[data-datatable-row-check="true"]'
      },
      /**
       * Enable or disable state saving
       */
      stateSave: true,
      checkbox: {
        checkedClass: "checked"
      },
      /**
       * Private properties
       */
      _state: {},
      ...config
    };
  }
  /**
   * Initialize table, tbody, thead, info, size, and pagination elements
   * @returns {void}
   */
  _initElements() {
    this._tableElement = this._element.querySelector(this._config.attributes.table);
    this._tbodyElement = this._tableElement.tBodies[0] || this._tableElement.createTBody();
    this._theadElement = this._tableElement.tHead;
    this._infoElement = this._element.querySelector(this._config.attributes.info);
    this._sizeElement = this._element.querySelector(this._config.attributes.size);
    this._paginationElement = this._element.querySelector(this._config.attributes.pagination);
  }
  /**
   * Fetch data from the server or from the DOM if `apiEndpoint` is not defined.
   * @returns {Promise<void>} Promise which is resolved after data has been fetched and checkbox plugin initialized.
   */
  async _updateData() {
    this._showSpinner();
    return typeof this._config.apiEndpoint === "undefined" ? this._fetchDataFromLocal().then(this._finalize.bind(this)) : this._fetchDataFromServer().then(this._finalize.bind(this));
  }
  /**
   * Finalize data table after data has been fetched
   * @returns {void}
   */
  _finalize() {
    this._element.classList.add("datatable-initialized");
    const headerCheckElement = this._element.querySelector(this._config.attributes.check);
    if (headerCheckElement) {
      this._initChecbox(headerCheckElement);
    }
    this._attachSearchEvent();
    if (typeof KTComponents$1 !== "undefined") {
      KTComponents$1.init();
    }
    this._hideSpinner();
  }
  /**
   * Attach search event to the search input element
   * @returns {void}
   */
  _attachSearchEvent() {
    const tableId = this._tableId();
    const searchElement = document.querySelector(`[data-datatable-search="#${tableId}"]`);
    if (searchElement) {
      if (searchElement._debouncedSearch) {
        searchElement.removeEventListener("keyup", searchElement._debouncedSearch);
      }
      const debouncedSearch = this._debounce(() => {
        this.search(searchElement.value);
      }, this._config.search.delay);
      searchElement._debouncedSearch = debouncedSearch;
      searchElement.addEventListener("keyup", debouncedSearch);
    }
  }
  /**
   * Initialize the checkbox plugin
   * @param {HTMLInputElement} headerCheckElement - The header checkbox element
   * @returns {void}
   */
  _initChecbox(headerCheckElement) {
    this._headerCheckElement = headerCheckElement;
    this._headerChecked = headerCheckElement.checked;
    this._targetElements = this._element.querySelectorAll(this._config.attributes.checkbox);
    this._checkboxHandler();
  }
  /**
   * Fetch data from the DOM
   * Fetch data from the table element and save it to the `originalData` state property.
   * This method is used when the data is not fetched from the server via an API endpoint.
   */
  async _fetchDataFromLocal() {
    var _a;
    const { sortField, sortOrder, page: page2, pageSize, search } = this.getState();
    let { originalData } = this.getState();
    if (!this._tableElement || originalData === void 0 || this._tableConfigInvalidate() || this._localTableHeaderInvalidate() || this._localTableContentInvalidate()) {
      this._deleteState();
      const { originalData: originalData2, originalDataAttributes } = this._localExtractTableContent();
      this._config._state.originalData = originalData2;
      this._config._state.originalDataAttributes = originalDataAttributes;
    }
    originalData = this.getState().originalData;
    let _temp = this._data = [...originalData];
    if (search) {
      _temp = this._data = this._config.search.callback.call(this, this._data, search);
    }
    if (sortField !== void 0 && sortOrder !== void 0 && sortOrder !== "") {
      if (typeof this._config.sort.callback === "function") {
        this._data = this._config.sort.callback.call(this, this._data, sortField, sortOrder);
      }
    }
    if (((_a = this._data) == null ? void 0 : _a.length) > 0) {
      const startIndex = (page2 - 1) * pageSize;
      const endIndex = startIndex + pageSize;
      this._data = this._data.slice(startIndex, endIndex);
    }
    this._config._state.totalItems = _temp.length;
    await this._draw();
  }
  /**
   * Checks if the table content has been invalidated by comparing the current checksum of the table body
   * with the stored checksum in the state. If the checksums are different, the state is updated with the
   * new checksum and `true` is returned. Otherwise, `false` is returned.
   *
   * @returns {boolean} `true` if the table content has been invalidated, `false` otherwise.
   */
  _localTableContentInvalidate() {
    const checksum = KTUtils.checksum(JSON.stringify(this._tbodyElement.innerHTML));
    if (this.getState()._contentChecksum !== checksum) {
      this._config._state._contentChecksum = checksum;
      return true;
    }
    return false;
  }
  _tableConfigInvalidate() {
    const { _data, _state, ...restConfig } = this._config;
    const checksum = KTUtils.checksum(JSON.stringify(restConfig));
    if (_state._configChecksum !== checksum) {
      this._config._state._configChecksum = checksum;
      return true;
    }
    return false;
  }
  /**
   * Extracts the table content and returns it as an object containing an array of original data and an array of original data attributes.
   *
   * @returns {{originalData: T[], originalDataAttributes: KTDataTableAttributeInterface[]}} - An object containing an array of original data and an array of original data attributes.
   */
  _localExtractTableContent() {
    const originalData = [];
    const originalDataAttributes = [];
    const rows = this._tbodyElement.querySelectorAll("tr");
    rows.forEach((row) => {
      const dataRow = {};
      const dataRowAttribute = {};
      row.querySelectorAll("td").forEach((td, index) => {
        var _a;
        const attributes = {};
        Array.from(td.attributes).forEach((attr) => {
          attributes[attr.name] = attr.value;
        });
        dataRow[index] = (_a = td.innerHTML) == null ? void 0 : _a.trim();
        dataRowAttribute[index] = attributes;
      });
      if (Object.keys(dataRow).length > 0) {
        originalData.push(dataRow);
        originalDataAttributes.push(dataRowAttribute);
      }
    });
    return { originalData, originalDataAttributes };
  }
  /**
   * Check if the table header is invalidated
   * @returns {boolean} - Returns true if the table header is invalidated, false otherwise
   */
  _localTableHeaderInvalidate() {
    var _a;
    const { originalData } = this.getState();
    const currentTableHeaders = ((_a = this._getTableHeaders()) == null ? void 0 : _a.length) || 0;
    const totalColumns = originalData.length ? Object.keys(originalData[0]).length : 0;
    return currentTableHeaders !== totalColumns;
  }
  /**
   * Fetch data from the server
   */
  async _fetchDataFromServer() {
    this._fireEvent("fetch");
    this._dispatchEvent("fetch");
    const queryParams = this._getQueryParamsForFetchRequest();
    const response = await this._performFetchRequest(queryParams);
    let responseData = null;
    try {
      responseData = await response.json();
    } catch (error) {
      this._noticeOnTable("Error parsing API response as JSON: " + String(error));
      return;
    }
    this._fireEvent("fetched", { response: responseData });
    this._dispatchEvent("fetched", { response: responseData });
    if (typeof this._config.mapResponse === "function") {
      responseData = this._config.mapResponse.call(this, responseData);
    }
    this._data = responseData.data;
    this._config._state.totalItems = responseData.totalCount;
    await this._draw();
  }
  /**
   * Get the query params for a fetch request
   * @returns The query params for the fetch request
   */
  _getQueryParamsForFetchRequest() {
    const { page: page2, pageSize, sortField, sortOrder, filters, search } = this.getState();
    let queryParams = new URLSearchParams();
    queryParams.set("page", String(page2));
    queryParams.set("size", String(pageSize));
    if (sortOrder !== void 0) {
      queryParams.set("sortOrder", String(sortOrder));
    }
    if (sortField !== void 0) {
      queryParams.set("sortField", String(sortField));
    }
    if (Array.isArray(filters) && filters.length) {
      queryParams.set("filters", JSON.stringify(filters.map((filter) => ({
        // Map the filter object to a simpler object with just the necessary properties
        column: filter.column,
        type: filter.type,
        value: filter.value
      }))));
    }
    if (search) {
      queryParams.set("search", typeof search === "object" ? JSON.stringify(search) : search);
    }
    if (typeof this._config.mapRequest === "function") {
      queryParams = this._config.mapRequest.call(this, queryParams);
    }
    return queryParams;
  }
  async _performFetchRequest(queryParams) {
    let requestMethod = this._config.requestMethod;
    let requestBody = void 0;
    if (requestMethod === "POST") {
      requestBody = queryParams;
    } else if (requestMethod === "GET") {
      const apiEndpointWithQueryParams = new URL(this._config.apiEndpoint);
      apiEndpointWithQueryParams.search = queryParams.toString();
      this._config.apiEndpoint = apiEndpointWithQueryParams.toString();
    }
    return fetch(this._config.apiEndpoint, {
      method: requestMethod,
      body: requestBody,
      headers: this._config.requestHeaders
    }).catch((error) => {
      this._noticeOnTable("Error performing fetch request: " + String(error));
      throw error;
    });
  }
  /**
   * Update the table and pagination controls with new data
   * @returns {Promise<void>} A promise that resolves when the table and pagination controls are updated
   */
  async _draw() {
    this._config._state.totalPages = Math.ceil(this.getState().totalItems / this.getState().pageSize) || 0;
    this._fireEvent("draw");
    this._dispatchEvent("draw");
    this._dispose();
    if (this._theadElement && this._tbodyElement) {
      this._updateTable();
    }
    if (this._infoElement && this._paginationElement) {
      this._updatePagination();
    }
    this._fireEvent("drew");
    this._dispatchEvent("drew");
    this._hideSpinner();
    if (this._config.stateSave) {
      this._saveState();
    }
  }
  /**
   * Update the HTML table with new data
   * @returns {HTMLTableSectionElement} The new table body element
   */
  _updateTable() {
    while (this._tableElement.tBodies.length) {
      this._tableElement.removeChild(this._tableElement.tBodies[0]);
    }
    const tbodyElement = this._tableElement.createTBody();
    this._updateTableContent(tbodyElement);
    return tbodyElement;
  }
  /**
   * Initialize the table header
   * Add sort event listener to all sortable columns
   */
  _initTableHeader() {
    if (!this._theadElement) {
      return;
    }
    this._setSortIcon(this.getState().sortField, this.getState().sortOrder);
    const headers = this._getTableHeaders();
    headers.forEach((header) => {
      if (!header.querySelector(`.${this._config.sort.classes.base}`)) {
        return;
      }
      const sortAttribute = header.getAttribute("data-datatable-column-sort") || header.getAttribute("data-datatable-column");
      const sortField = sortAttribute ? sortAttribute : header.cellIndex;
      header.addEventListener("click", () => {
        const sortOrder = this._toggleSortOrder(sortField);
        this._setSortIcon(sortField, sortOrder);
        this._sort(sortField);
      });
    });
  }
  /**
   * Returns an array of table headers as HTMLTableCellElement.
   * @returns {HTMLTableCellElement[]} An array of table headers.
   */
  _getTableHeaders() {
    if (!this._theadElement) {
      return [];
    }
    return Array.from(this._theadElement.querySelectorAll("th"));
  }
  /**
   * Sets the sort icon in the table header
   * @param sortField The field to set the sort icon for
   * @param sortOrder The sort order (ascending or descending)
   */
  _setSortIcon(sortField, sortOrder) {
    const sortClass = sortOrder ? sortOrder === "asc" ? this._config.sort.classes.asc : this._config.sort.classes.desc : "";
    const th = typeof sortField === "number" ? this._theadElement.querySelectorAll("th")[sortField] : this._theadElement.querySelector(`th[data-datatable-column="${String(sortField)}"], th[data-datatable-column-sort="${String(sortField)}"]`);
    if (th) {
      const sortElement = th.querySelector(`.${this._config.sort.classes.base}`);
      if (sortElement) {
        sortElement.className = `${this._config.sort.classes.base} ${sortClass}`.trim();
      }
    }
  }
  /**
   * Toggles the sort order of a column
   * @param sortField The field to toggle the sort order for
   * @returns The new sort order (ascending, descending or unsorted)
   */
  _toggleSortOrder(sortField) {
    return (() => {
      if (this.getState().sortField === sortField) {
        switch (this.getState().sortOrder) {
          case "asc":
            return "desc";
          // Descending
          case "desc":
            return "";
          // Unsorted
          default:
            return "asc";
        }
      }
      return "asc";
    })();
  }
  /**
   * Update the table content
   * @param tbodyElement The table body element
   * @returns {HTMLTableSectionElement} The updated table body element
   */
  _updateTableContent(tbodyElement) {
    const fragment = document.createDocumentFragment();
    tbodyElement.textContent = "";
    if (this._data.length === 0) {
      this._noticeOnTable(this._config.infoEmpty || "");
      return tbodyElement;
    }
    this._data.forEach((item, rowIndex) => {
      const row = document.createElement("tr");
      if (!this._config.columns) {
        const dataRowAttributes = this.getState().originalDataAttributes ? this.getState().originalDataAttributes[rowIndex] : null;
        Object.keys(item).forEach((key, colIndex) => {
          const td = document.createElement("td");
          td.innerHTML = item[key];
          if (dataRowAttributes) {
            for (const attr in dataRowAttributes[colIndex]) {
              td.setAttribute(attr, dataRowAttributes[colIndex][attr]);
            }
          }
          row.appendChild(td);
        });
      } else {
        Object.keys(this._config.columns).forEach((key) => {
          const td = document.createElement("td");
          const columnDef = this._config.columns[key];
          if (typeof columnDef.render === "function") {
            td.innerHTML = columnDef.render.call(this, item[key], item, this);
          } else {
            td.textContent = item[key];
          }
          if (typeof columnDef.createdCell === "function") {
            columnDef.createdCell.call(this, td, item[key], item, row);
          }
          row.appendChild(td);
        });
      }
      fragment.appendChild(row);
    });
    tbodyElement.appendChild(fragment);
    return tbodyElement;
  }
  /**
   * Show a notice on the table
   * @param message The message to show. If empty, the message will be removed
   * @returns {void}
   */
  _noticeOnTable(message = "") {
    var _a;
    const row = this._tbodyElement.insertRow();
    const cell = row.insertCell();
    cell.colSpan = ((_a = this._getTableHeaders()) == null ? void 0 : _a.length) || 0;
    cell.innerHTML = message;
  }
  _updatePagination() {
    this._removeChildElements(this._sizeElement);
    this._createPageSizeControls(this._sizeElement);
    this._removeChildElements(this._paginationElement);
    this._createPaginationControls(this._infoElement, this._paginationElement);
  }
  /**
   * Removes all child elements from the given container element.
   * @param container The container element to remove the child elements from.
   */
  _removeChildElements(container) {
    if (!container) {
      return;
    }
    while (container.firstChild) {
      container.removeChild(container.firstChild);
    }
  }
  /**
   * Creates a container element for the items per page selector.
   * @param _sizeElement The element to create the page size controls in.
   * @returns The container element.
   */
  _createPageSizeControls(_sizeElement) {
    if (!_sizeElement) {
      return _sizeElement;
    }
    const options = this._config.pageSizes.map((size) => {
      const option = document.createElement("option");
      option.value = String(size);
      option.text = String(size);
      option.selected = this.getState().pageSize === size;
      return option;
    });
    _sizeElement.append(...options);
    const _pageSizeControlsEvent = (event) => {
      this._reloadPageSize(Number(event.target.value), 1);
    };
    _sizeElement.onchange = _pageSizeControlsEvent.bind(this);
    return _sizeElement;
  }
  /**
   * Reloads the data with the specified page size and optional page number.
   * @param pageSize The new page size.
   * @param page The new page number (optional, defaults to 1).
   */
  _reloadPageSize(pageSize, page2 = 1) {
    this._config._state.pageSize = pageSize;
    this._config._state.page = page2;
    this._updateData();
  }
  /**
   * Creates the pagination controls for the component.
   * @param _infoElement The element to set the info text in.
   * @param _paginationElement The element to create the pagination controls in.
   * @return {HTMLElement} The element containing the pagination controls.
   */
  _createPaginationControls(_infoElement, _paginationElement) {
    if (!_infoElement || !_paginationElement || this._data.length === 0) {
      return null;
    }
    this._setPaginationInfoText(_infoElement);
    const paginationContainer = this._createPaginationContainer(_paginationElement);
    if (paginationContainer) {
      this._createPaginationButtons(paginationContainer);
    }
    return paginationContainer;
  }
  /**
   * Sets the info text for the pagination controls.
   * @param _infoElement The element to set the info text in.
   */
  _setPaginationInfoText(_infoElement) {
    _infoElement.textContent = this._config.info.replace("{start}", (this.getState().page - 1) * this.getState().pageSize + 1 + "").replace("{end}", Math.min(this.getState().page * this.getState().pageSize, this.getState().totalItems) + "").replace("{total}", this.getState().totalItems + "");
  }
  /**
   * Creates the container element for the pagination controls.
   * @param _paginationElement The element to create the pagination controls in.
   * @return {HTMLElement} The container element.
   */
  _createPaginationContainer(_paginationElement) {
    const paginationContainer = document.createElement("div");
    paginationContainer.className = "pagination";
    _paginationElement.appendChild(paginationContainer);
    return paginationContainer;
  }
  /**
   * Creates the pagination buttons for the component.
   * @param paginationContainer The container element for the pagination controls.
   */
  _createPaginationButtons(paginationContainer) {
    const { page: currentPage, totalPages } = this.getState();
    const { previous, next, number, more } = this._config.pagination;
    const createButton = (text, className, disabled, handleClick) => {
      const button = document.createElement("button");
      button.className = className;
      button.innerHTML = text;
      button.disabled = disabled;
      button.onclick = handleClick;
      return button;
    };
    paginationContainer.appendChild(
      createButton(previous.text, `${previous.class}${currentPage === 1 ? " disabled" : ""}`, currentPage === 1, () => this._paginateData(currentPage - 1))
    );
    const pageMoreEnabled = this._config.pageMore;
    if (pageMoreEnabled) {
      const maxButtons = this._config.pageMoreLimit;
      const range = this._calculatePageRange(currentPage, totalPages, maxButtons);
      if (range.start > 1) {
        paginationContainer.appendChild(createButton(more.text, more.class, false, () => this._paginateData(Math.max(1, range.start - 1))));
      }
      for (let i2 = range.start; i2 <= range.end; i2++) {
        paginationContainer.appendChild(
          createButton(number.text.replace("{page}", i2.toString()), `${number.class}${currentPage === i2 ? " active disabled" : ""}`, currentPage === i2, () => this._paginateData(i2))
        );
      }
      if (pageMoreEnabled && range.end < totalPages) {
        paginationContainer.appendChild(createButton(more.text, more.class, false, () => this._paginateData(Math.min(totalPages, range.end + 1))));
      }
    } else {
      for (let i2 = 1; i2 <= totalPages; i2++) {
        paginationContainer.appendChild(
          createButton(number.text.replace("{page}", i2.toString()), `${number.class}${currentPage === i2 ? " active disabled" : ""}`, currentPage === i2, () => this._paginateData(i2))
        );
      }
    }
    paginationContainer.appendChild(
      createButton(next.text, `${next.class}${currentPage === totalPages ? " disabled" : ""}`, currentPage === totalPages, () => this._paginateData(currentPage + 1))
    );
  }
  // New helper method to calculate page range
  _calculatePageRange(currentPage, totalPages, maxButtons) {
    let startPage, endPage;
    const halfMaxButtons = Math.floor(maxButtons / 2);
    if (totalPages <= maxButtons) {
      startPage = 1;
      endPage = totalPages;
    } else {
      startPage = Math.max(currentPage - halfMaxButtons, 1);
      endPage = Math.min(startPage + maxButtons - 1, totalPages);
      if (endPage - startPage < maxButtons - 1) {
        startPage = Math.max(endPage - maxButtons + 1, 1);
      }
    }
    return { start: startPage, end: endPage };
  }
  /**
   * Method for handling pagination
   * @param page - The page number to navigate to
   */
  _paginateData(page2) {
    if (page2 < 1 || !Number.isInteger(page2)) {
      return;
    }
    this._fireEvent("pagination", { page: page2 });
    this._dispatchEvent("pagination", { page: page2 });
    if (page2 >= 1 && page2 <= this.getState().totalPages) {
      this._config._state.page = page2;
      this._updateData();
    }
  }
  // Method to show the loading spinner
  _showSpinner() {
    const spinner = this._element.querySelector(this._config.attributes.spinner) || this._createSpinner();
    if (spinner) {
      spinner.style.display = "block";
    }
    this._element.classList.add("loading");
  }
  // Method to hide the loading spinner
  _hideSpinner() {
    const spinner = this._element.querySelector(this._config.attributes.spinner);
    if (spinner) {
      spinner.style.display = "none";
    }
    this._element.classList.remove("loading");
  }
  // Method to create a spinner element if it doesn't exist
  _createSpinner() {
    if (typeof this._config.loading === "undefined") {
      return null;
    }
    const template = document.createElement("template");
    template.innerHTML = this._config.loading.template.trim().replace("{content}", this._config.loading.content);
    const spinner = template.content.firstChild;
    spinner.setAttribute("data-datatable-spinner", "true");
    this._tableElement.appendChild(spinner);
    return spinner;
  }
  /**
   * Saves the current state of the table to local storage.
   * @returns {void}
   */
  _saveState() {
    this._fireEvent("stateSave");
    this._dispatchEvent("stateSave");
    const ns = this._tableNamespace();
    if (ns) {
      localStorage.setItem(ns, JSON.stringify(this.getState()));
    }
  }
  /**
   * Loads the saved state of the table from local storage, if it exists.
   * @returns {Object} The saved state of the table, or null if no saved state exists.
   */
  _loadState() {
    const stateString = localStorage.getItem(this._tableNamespace());
    if (!stateString) return null;
    try {
      const state = JSON.parse(stateString);
      if (state) this._config._state = state;
      return state;
    } catch {
    }
    return null;
  }
  _deleteState() {
    const ns = this._tableNamespace();
    if (ns) {
      localStorage.removeItem(ns);
    }
  }
  /**
   * Gets the namespace for the table's state.
   * If a namespace is specified in the config, it is used.
   * Otherwise, if the table element has an ID, it is used.
   * Otherwise, if the component element has an ID, it is used.
   * Finally, the component's UID is used.
   * @returns {string} The namespace for the table's state.
   */
  _tableNamespace() {
    if (this._config.stateNamespace) {
      return this._config.stateNamespace;
    }
    return this._tableId() ?? this._name;
  }
  _tableId() {
    var _a, _b;
    let id = null;
    if ((_a = this._tableElement) == null ? void 0 : _a.getAttribute("id")) {
      id = this._tableElement.getAttribute("id");
    }
    if ((_b = this._element) == null ? void 0 : _b.getAttribute("id")) {
      id = this._element.getAttribute("id");
    }
    return id;
  }
  /**
   * Sorts the data in the table by the specified field.
   * @param sortField The field to sort by.
   */
  _sort(sortField) {
    const newSortOrder = this._toggleSortOrder(sortField);
    this._config._state.sortField = sortField;
    this._config._state.sortOrder = newSortOrder;
    this._fireEvent("sort", { field: sortField, order: newSortOrder });
    this._dispatchEvent("sort", { field: sortField, order: newSortOrder });
    this._updateData();
  }
  _dispose() {
    if (this._headerCheckElement) {
      this._headerCheckElement.removeEventListener("click", this._checkboxListener);
    }
  }
  _debounce(func, wait) {
    let timeout;
    return function(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = window.setTimeout(later, wait);
    };
  }
  /**
   * Event handlers
   */
  _checkboxHandler() {
    this._headerCheckElement.addEventListener("click", this._checkboxListener);
    KTEventHandler.on(
      document.body,
      this._config.attributes.checkbox,
      "input",
      (event) => {
        this._checkboxUpdate(event);
      }
    );
  }
  /**
   * Checks if element is checked
   * @returns {boolean}
   */
  _isChecked() {
    return this._headerChecked;
  }
  /**
   * Change checkbox state
   * @param checked The new state of the checkbox
   * @returns {void}
   */
  _change(checked) {
    const payload = { cancel: false };
    this._fireEvent("change", payload);
    this._dispatchEvent("change", payload);
    if (payload.cancel === true) {
      return;
    }
    this._headerChecked = checked;
    this._headerCheckElement.checked = checked;
    if (this._targetElements) {
      this._targetElements.forEach((element) => {
        if (element) {
          element.checked = checked;
        }
      });
    }
    this._fireEvent("changed");
    this._dispatchEvent("changed");
  }
  /**
   * Toggle checkbox state
   * @param event The event if available
   * @returns {void}
   */
  _checkboxToggle(event) {
    const checked = !this._isChecked();
    const eventType = checked ? "checked" : "unchecked";
    this._fireEvent(eventType);
    this._dispatchEvent(eventType);
    this._change(checked);
  }
  /**
   * Update checkbox state based on checked rows
   * @param event The event if available
   * @returns {void}
   */
  _checkboxUpdate(event) {
    let checked = 0;
    const total = this._targetElements.length;
    for (let i2 = 0; i2 < total; i2++) {
      const element = this._targetElements[i2];
      if (!element) {
        continue;
      }
      const row = element.closest("tr");
      if (!row) {
        continue;
      }
      if (element.checked) {
        row.classList.add(this._config.checkbox.checkedClass);
        checked++;
      } else {
        row.classList.remove(this._config.checkbox.checkedClass);
      }
    }
    if (checked === 0) {
      this._headerCheckElement.indeterminate = false;
      this._change(false);
    }
    if (checked > 0 && checked < total) {
      this._headerCheckElement.indeterminate = true;
    }
    if (checked === total) {
      this._headerCheckElement.indeterminate = false;
      this._change(true);
    }
  }
  /**
   * Get checked row IDs
   * @returns {string[]} An array of checked row IDs
   */
  _getChecked() {
    const checked = [];
    this._targetElements.forEach((element) => {
      if (element && element.checked) {
        const value = element.value;
        if (value) {
          checked.push(value);
        }
      }
    });
    return checked;
  }
  isChecked() {
    return this._isChecked();
  }
  toggle() {
    this._checkboxToggle();
  }
  /**
   * Check all rows
   * @returns {void}
   */
  check() {
    this._change(true);
    this._checkboxUpdate();
  }
  /**
   * Uncheck all rows
   * @returns {void}
   */
  uncheck() {
    this._change(false);
  }
  /**
   * Get checked row IDs
   * @returns {string[]} An array of checked row IDs
   */
  getChecked() {
    return this._getChecked();
  }
  update() {
    this._checkboxUpdate();
  }
  /**
   * Gets the current state of the table.
   * @returns {KTDataTableStateInterface} The current state of the table.
   */
  getState() {
    return {
      /**
       * The current page number.
       */
      page: 1,
      /**
       * The field that the data is sorted by.
       */
      sortField: null,
      /**
       * The sort order (ascending or descending).
       */
      sortOrder: "",
      /**
       * The number of rows to display per page.
       */
      pageSize: this._config.pageSize,
      filters: [],
      /**
       * Any additional state that may have been stored in the config.
       */
      ...this._config._state
    };
  }
  /**
   * Sorts the data in the table by the specified field.
   * @param field The field to sort by.
   */
  sort(field) {
    this._sort(field);
  }
  /**
   * Navigates to the specified page in the data table.
   * @param page The page number to navigate to.
   */
  goPage(page2) {
    if (page2 < 1 || !Number.isInteger(page2)) {
      return;
    }
    this._paginateData(page2);
  }
  /**
   * Set the page size of the data table.
   * @param pageSize The new page size.
   */
  setPageSize(pageSize) {
    if (!Number.isInteger(pageSize)) {
      return;
    }
    this._reloadPageSize(pageSize);
  }
  /**
   * Reloads the data from the server and updates the table.
   * Triggers the 'reload' event and the 'kt.datatable.reload' custom event.
   */
  reload() {
    this._fireEvent("reload");
    this._dispatchEvent("reload");
    this._updateData();
  }
  redraw(page2 = 1) {
    this._fireEvent("redraw");
    this._dispatchEvent("redraw");
    this._paginateData(page2);
  }
  /**
   * Show the loading spinner of the data table.
   */
  showSpinner() {
    this._showSpinner();
  }
  /**
   * Hide the loading spinner of the data table.
   */
  hideSpinner() {
    this._hideSpinner();
  }
  /**
   * Filter data using the specified filter object.
   * Replaces the existing filter object for the column with the new one.
   * @param filter Filter object containing the column name and its value.
   * @returns The KTDataTable instance.
   * @throws Error if the filter object is null or undefined.
   */
  setFilter(filter) {
    this._config._state.filters = [
      ...(this.getState().filters || []).filter((f2) => f2.column !== filter.column),
      filter
    ];
    return this;
  }
  dispose() {
    this._dispose();
  }
  search(query) {
    this._config._state.search = query;
    this.reload();
  }
  /**
   * Create KTDataTable instances for all elements with a data-datatable="true" attribute.
   *
   * This function should be called after the control(s) have been
   * loaded and parsed by the browser. It will create instances of
   * KTDataTable for all elements with a data-datatable="true" attribute.
   */
  static createInstances() {
    const elements = document.querySelectorAll('[data-datatable="true"]');
    elements.forEach((element) => {
      if (element.hasAttribute("data-datatable") && !element.classList.contains("datatable-initialized")) {
        const instance = new _KTDataTable(element);
        this._instances.set(element, instance);
      }
    });
  }
  /**
   * Get the KTDataTable instance for a given element.
   *
   * @param element The element to retrieve the instance for
   * @returns The KTDataTable instance or undefined if not found
   */
  static getInstance(element) {
    return this._instances.get(element);
  }
  /**
   * Initializes all KTDataTable instances on the page.
   *
   * This function should be called after the control(s) have been
   * loaded and parsed by the browser.
   */
  static init() {
    _KTDataTable.createInstances();
  }
  // Other plugin methods can be added here
};
_KTDataTable._instances = /* @__PURE__ */ new Map();
let KTDataTable = _KTDataTable;
const KTComponents = {
  init() {
    KTMenu$1.init();
    KTDropdown.init();
    KTModal.init();
    KTDrawer$1.init();
    KTCollapse.init();
    KTDismiss.init();
    KTTabs.init();
    KTAccordion.init();
    KTScrollspy$1.init();
    KTScrollable.init();
    KTScrollto.init();
    KTSticky.init();
    KTReparent.init();
    KTToggle$1.init();
    KTTooltip.init();
    KTStepper.init();
    KTTheme.init();
    KTImageInput.init();
    KTTogglePassword$1.init();
    KTDataTable.init();
  }
};
window.KTUtils = KTUtils;
window.KTDom = KTDom$1;
window.KTEventHandler = KTEventHandler;
window.KTMenu = KTMenu$1;
window.KTDropdown = KTDropdown;
window.KTModal = KTModal;
window.KTDrawer = KTDrawer$1;
window.KTCollapse = KTCollapse;
window.KTDismiss = KTDismiss;
window.KTTabs = KTTabs;
window.KTAccordion = KTAccordion;
window.KTScrollspy = KTScrollspy$1;
window.KTScrollable = KTScrollable;
window.KTScrollto = KTScrollto;
window.KTSticky = KTSticky;
window.KTReparent = KTReparent;
window.KTToggle = KTToggle$1;
window.KTTooltip = KTTooltip;
window.KTStepper = KTStepper;
window.KTTheme = KTTheme;
window.KTImageInput = KTImageInput;
window.KTTogglePassword = KTTogglePassword$1;
window.KTDataTable = KTDataTable;
window.KTComponents = KTComponents;
KTDom$1.ready(() => {
  KTComponents.init();
});
class KTLayout {
  static _isSidebarCollapse() {
    return document.body.classList.contains("sidebar-collapse");
  }
  static _handleMegaMenu() {
    const megaMenuEl = document.querySelector("#mega_menu");
    if (!megaMenuEl) return;
    const menu = KTMenu.getInstance(megaMenuEl);
    menu.disable();
    setTimeout(() => {
      menu.enable();
    }, 500);
  }
  static _handleSidebar() {
    const sidebarToggle = KTToggle.getInstance(this.sidebarToggleEl);
    sidebarToggle == null ? void 0 : sidebarToggle.on("toggle", () => {
      this.sidebarEl.classList.add("animating");
      this._handleMegaMenu();
      KTDom.transitionEnd(this.sidebarEl, () => {
        this.sidebarEl.classList.remove("animating");
      });
    });
  }
  static _handleSidebarMenu() {
    const menuEl = document.querySelector("#sidebar_menu");
    const scrollableEl = document.querySelector("#sidebar_scrollable");
    const menuActiveItemEl = menuEl.querySelector(".menu-item.active");
    if (!menuActiveItemEl || KTDom.isVisibleInParent(menuActiveItemEl, scrollableEl)) {
      return;
    }
    scrollableEl.scroll({
      top: KTDom.getRelativeTopPosition(menuActiveItemEl, scrollableEl) - 100,
      behavior: "instant"
    });
  }
  static init() {
    this.sidebarEl = document.querySelector("#sidebar");
    this.sidebarWrapperEl = document.querySelector("#sidebar_wrapper");
    this.headerEl = document.querySelector("#header");
    this.sidebarToggleEl = document.querySelector("#sidebar_toggle");
    if (this.sidebarEl && this.sidebarToggleEl) {
      this._handleSidebar();
      this._handleSidebarMenu();
    }
  }
  static isSidebarCollapse() {
    return this._isSidebarCollapse();
  }
}
const _sfc_main$o = {
  __name: "Header",
  __ssrInlineRender: true,
  setup(__props) {
    useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<header${ssrRenderAttrs(mergeProps({
        class: "flex lg:hidden items-center fixed z-10 top-0 start-0 end-0 shrink-0 bg-[--tw-page-bg] dark:bg-[--tw-page-bg-dark] h-[--tw-header-height]",
        id: "header"
      }, _attrs))}><div class="container-fixed flex items-center justify-between flex-wrap gap-3"><a href="/"><img class="dark:hidden min-h-[30px]" src="/images/logo.png"><img class="hidden dark:block min-h-[30px]" src="/images/logo.png"></a><button class="btn btn-icon btn-light btn-clear btn-sm -me-2" data-drawer-toggle="#sidebar"><i class="ki-filled ki-menu"></i></button></div></header>`);
    };
  }
};
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Header.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
const getMatches = (query) => {
  if (typeof window !== "undefined") {
    return window.matchMedia(query).matches;
  }
  return false;
};
const useMediaQuery = (query) => {
  const matches = ref(getMatches(query));
  const handleChange = () => {
    matches.value = getMatches(query);
  };
  onMounted(() => {
    const matchMedia = window.matchMedia(query);
    handleChange();
    matchMedia.addEventListener("change", handleChange);
  });
  onUnmounted(() => {
    const matchMedia = window.matchMedia(query);
    matchMedia.removeEventListener("change", handleChange);
  });
  return matches;
};
const breakpoints = ["sm", "md", "lg", "xl", "2xl"];
const useResponsive = (query, key, start, end) => {
  var _a, _b;
  const screens = (_b = (_a = tailwindConfig) == null ? void 0 : _a.theme) == null ? void 0 : _b.screens;
  if (query === "up" && key) {
    key = breakpoints.includes(key) && screens ? screens[key] : key;
    return useMediaQuery(`(min-width: ${key})`);
  }
  if (query === "down" && key) {
    key = breakpoints.includes(key) && screens ? screens[key] : key;
    return useMediaQuery(`(max-width: ${key})`);
  }
  return false;
};
const _sfc_main$n = /* @__PURE__ */ defineComponent({
  __name: "MenuItem",
  __ssrInlineRender: true,
  props: {
    item: { type: Object, required: true },
    menu: { type: Object, required: true },
    isActive: Boolean
  },
  setup(__props) {
    useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      if (!__props.item.children) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["menu-item", {
            here: __props.isActive
          }]
        }, _attrs))}><a class="menu-link" href="#"><span class="menu-title">${ssrInterpolate(__props.item.name)}</span></a></div>`);
      } else {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["menu-item menu-item-dropdown", {
            here: __props.isActive
          }],
          "data-menu-item-placement": "right-start",
          "data-menu-item-toggle": "accordion|lg:dropdown",
          "data-menu-item-trigger": "click|lg:hover"
        }, _attrs))}><div class="menu-link grow cursor-pointer"><span class="menu-title">${ssrInterpolate(__props.item.name)}</span><span class="menu-arrow"><i class="ki-filled ki-right text-3xs rtl:translate rtl:rotate-180"></i></span></div><div class="menu-default menu-dropdown gap-0.5 w-[220px]"><!--[-->`);
        ssrRenderList(__props.item.children, (child, index) => {
          _push(`<div class="menu-item"><a class="menu-link" href="#"><span class="menu-title">${ssrInterpolate(child.name)}</span></a></div>`);
        });
        _push(`<!--]--></div></div>`);
      }
    };
  }
});
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Sidebar/MenuItem.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
const _sfc_main$m = /* @__PURE__ */ defineComponent({
  __name: "MenuElement",
  __ssrInlineRender: true,
  props: {
    menu: { type: Object, required: true }
  },
  setup(__props) {
    const sidebarStore = useSidebarStore();
    const menuContent = (menu) => {
      return `
    <span
                class="menu-icon menu-item-here:text-primary menu-item-active:text-primary menu-link-hover:text-primary text-gray-600"
            >
                <i class="ki-filled text-1.5xl ${menu.icon}"></i>
            </span>
            <span
                class="text-center menu-title text-xs menu-item-here:text-primary menu-item-active:text-primary menu-link-hover:text-primary text-gray-600 font-medium"
            >
                ${menu.title}
            </span>
    `;
    };
    return (_ctx, _push, _parent, _attrs) => {
      if (!__props.menu.items) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["menu-item", {
            active: _ctx.route().current(__props.menu.route)
          }]
        }, _attrs))}><a class="menu-link rounded-[9px] border border-transparent menu-item-active:border-gray-200 menu-item-active:bg-light menu-link-hover:bg-light menu-link-hover:border-gray-200 w-[80px] h-[60px] flex flex-col justify-center items-center gap-1 p-2" href="#">${menuContent(__props.menu) ?? ""}</a></div>`);
      } else {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["menu-item", {
            here: unref(sidebarStore).isActive(__props.menu)
          }],
          "data-menu-item-offset": "-10px, 14px",
          "data-menu-item-overflow": "true",
          "data-menu-item-placement": "right-start",
          "data-menu-item-toggle": "dropdown",
          "data-menu-item-trigger": "click|lg:hover"
        }, _attrs))}><div class="menu-link rounded-[9px] border border-transparent menu-item-here:border-gray-200 menu-item-here:bg-light menu-link-hover:bg-light menu-link-hover:border-gray-200 w-[80px] h-[60px] flex flex-col justify-center items-center gap-1 p-2 grow">${menuContent(__props.menu) ?? ""}</div><div class="menu-default menu-dropdown gap-0.5 w-[220px] scrollable-y-auto lg:overflow-visible max-h-[50vh]" style="${ssrRenderStyle({})}"><!--[-->`);
        ssrRenderList(__props.menu.items, (item, itemIndex) => {
          var _a;
          _push(ssrRenderComponent(_sfc_main$n, {
            menu: __props.menu,
            item,
            isActive: unref(sidebarStore).isActive(__props.menu) && ((_a = unref(sidebarStore).currentMenu) == null ? void 0 : _a.selected) === itemIndex
          }, null, _parent));
        });
        _push(`<!--]--></div></div>`);
      }
    };
  }
});
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Sidebar/MenuElement.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
const _sfc_main$l = {};
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    class: "dropdown",
    "data-dropdown": "true",
    "data-dropdown-offset": "-10px, 15px",
    "data-dropdown-placement": "right-end",
    "data-dropdown-trigger": "click|lg:click"
  }, _attrs))}><button class="dropdown-toggle btn btn-icon btn-icon-xl relative rounded-md size-9 border border-gray-500 hover:bg-light hover:text-primary hover:border-gray-200 dropdown-open:bg-gray-200 text-gray-600"><span class="menu-icon"><i class="ki-filled ki-setting-4"></i></span></button><div class="dropdown-content light:border-gray-300 w-screen max-w-[320px]"><div class="flex items-center justify-between gap-2.5 text-2xs text-gray-600 font-medium px-5 py-3 border-b border-b-gray-200"><span> Apps </span><span> Enabled </span></div><div class="flex flex-col scrollable-y-auto max-h-[400px] divide-y divide-gray-200"><div class="flex items-center justify-between flex-wrap gap-2 px-5 py-3.5"><div class="flex items-center flex-wrap gap-2"><div class="flex items-center justify-center shrink-0 rounded-full bg-gray-100 border border-gray-200 size-10"><img alt="" class="size-6" src="https://keenthemes.com/static/metronic/tailwind/dist/assets/media/brand-logos/jira.svg"></div><div class="flex flex-col"><a class="text-2sm font-semibold text-gray-900 hover:text-primary-active" href="#"> Jira </a><span class="text-2xs font-medium text-gray-600"> Project management </span></div></div><div class="flex items-center gap-2 lg:gap-5"><label class="switch switch-sm"><input type="checkbox" value="2"></label></div></div><div class="flex items-center justify-between flex-wrap gap-2 px-5 py-3.5"><div class="flex items-center flex-wrap gap-2"><div class="flex items-center justify-center shrink-0 rounded-full bg-gray-100 border border-gray-200 size-10"><img alt="" class="size-6" src="https://keenthemes.com/static/metronic/tailwind/dist/assets/media/brand-logos/inferno.svg"></div><div class="flex flex-col"><a class="text-2sm font-semibold text-gray-900 hover:text-primary-active" href="#"> Inferno </a><span class="text-2xs font-medium text-gray-600"> Ensures healthcare app </span></div></div><div class="flex items-center gap-2 lg:gap-5"><label class="switch switch-sm"><input checked type="checkbox" value="1"></label></div></div><div class="flex items-center justify-between flex-wrap gap-2 px-5 py-3.5"><div class="flex items-center flex-wrap gap-2"><div class="flex items-center justify-center shrink-0 rounded-full bg-gray-100 border border-gray-200 size-10"><img alt="" class="size-6" src="https://keenthemes.com/static/metronic/tailwind/dist/assets/media/brand-logos/evernote.svg"></div><div class="flex flex-col"><a class="text-2sm font-semibold text-gray-900 hover:text-primary-active" href="#"> Evernote </a><span class="text-2xs font-medium text-gray-600"> Notes management app </span></div></div><div class="flex items-center gap-2 lg:gap-5"><label class="switch switch-sm"><input checked type="checkbox" value="1"></label></div></div><div class="flex items-center justify-between flex-wrap gap-2 px-5 py-3.5"><div class="flex items-center flex-wrap gap-2"><div class="flex items-center justify-center shrink-0 rounded-full bg-gray-100 border border-gray-200 size-10"><img alt="" class="size-6" src="https://keenthemes.com/static/metronic/tailwind/dist/assets/media/brand-logos/gitlab.svg"></div><div class="flex flex-col"><a class="text-2sm font-semibold text-gray-900 hover:text-primary-active" href="#"> Gitlab </a><span class="text-2xs font-medium text-gray-600"> DevOps platform </span></div></div><div class="flex items-center gap-2 lg:gap-5"><label class="switch switch-sm"><input type="checkbox" value="2"></label></div></div><div class="flex items-center justify-between flex-wrap gap-2 px-5 py-3.5"><div class="flex items-center flex-wrap gap-2"><div class="flex items-center justify-center shrink-0 rounded-full bg-gray-100 border border-gray-200 size-10"><img alt="" class="size-6" src="https://keenthemes.com/static/metronic/tailwind/dist/assets/media/brand-logos/google-webdev.svg"></div><div class="flex flex-col"><a class="text-2sm font-semibold text-gray-900 hover:text-primary-active" href="#"> Google webdev </a><span class="text-2xs font-medium text-gray-600"> Building web expierences </span></div></div><div class="flex items-center gap-2 lg:gap-5"><label class="switch switch-sm"><input checked type="checkbox" value="1"></label></div></div></div><div class="grid p-5 border-t border-t-gray-200"><a class="btn btn-sm btn-light justify-center" href="account/api-keys.html"> Go to Apps </a></div></div></div>`);
}
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/DropdownSetting.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
const DropdownSetting = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["ssrRender", _sfc_ssrRender$3]]);
const _sfc_main$k = /* @__PURE__ */ defineComponent({
  __name: "Sidebar",
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarStore = useSidebarStore();
    const userStore = useUserStore();
    const desktopMode = useResponsive("up", "lg");
    useResponsive("down", "lg");
    const sidebarRef = ref();
    const headerRef = ref();
    const footerRef = ref();
    const scrollableHeight = ref(589);
    const { height: viewportHeight, isMobile } = useViewport();
    const showMenu = (name) => computed(() => {
      switch (name.toLowerCase()) {
        case "roles":
          return userStore.hasPermission("view_roles");
        case "permissions":
          return userStore.hasPermission("view_permissions");
        case "configuration":
          return userStore.hasPermission("manage_configuration");
        case "config. api":
          return userStore.hasPermission("access_internal_api");
        default:
          return true;
      }
    });
    onMounted(async () => {
      nextTick(() => {
        if (isMobile) {
          closeMobileSidebar();
        } else {
          updateScrollableHeight();
        }
      });
      await userStore.fetchPermissions();
      await userStore.fetchRoles();
    });
    function updateScrollableHeight() {
      const headerHeight = headerRef.value ? getHeight(headerRef.value) : 0;
      const footerHeight = footerRef.value ? getHeight(footerRef.value) : 0;
      scrollableHeight.value = viewportHeight.value - headerHeight - footerHeight - 40;
    }
    function closeMobileSidebar() {
      const drawer = KTDrawer.getInstance(sidebarRef.value);
      if (drawer) {
        drawer.hide();
      }
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "fixed top-0 bottom-0 z-20 rounded-r-lg md:rounded-none outline-2 md:outline-0 hidden lg:flex flex-col items-stretch shrink-0 bg-[--tw-page-bg] dark:bg-[--tw-page-bg-dark]",
        "data-drawer": "true",
        "data-drawer-class": "drawer drawer-start flex",
        "data-drawer-enable": "true|lg:false",
        "data-drawer-backdrop-static": "false",
        "data-drawer-persistent": "false",
        ref_key: "sidebarRef",
        ref: sidebarRef,
        id: "sidebar"
      }, _attrs))}>`);
      if (unref(desktopMode)) {
        _push(`<div class="hidden lg:flex items-center justify-center shrink-0 pt-8 pb-3.5" id="sidebar_header"><a href="/"><img class="dark:hidden min-w-[30px] max-w-[40px]" src="/images/favicon.png"><img class="hidden dark:block min-x-[30px] max-w-[40px]" src="/images/favicon.png"></a></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="scrollable-y-hover grow gap-2.5 shrink-0 flex items-center pt-5 lg:pt-0 ps-3 pe-3 lg:pe-0 flex-col" style="${ssrRenderStyle({ height: scrollableHeight.value + "px" })}" data-scrollable="true" data-scrollable-dependencies="#sidebar_header,#sidebar_footer" data-scrollable-height="auto" data-scrollable-offset="80px" data-scrollable-wrappers="#sidebar_menu_wrapper" id="sidebar_menu_wrapper"><div class="menu flex flex-col gap-2.5 grow" data-menu="true" id="sidebar_menu"><!--[-->`);
      ssrRenderList(unref(sidebarStore).menus, (menu, index) => {
        _push(`<!--[-->`);
        if (showMenu(menu.title).value) {
          _push(ssrRenderComponent(_sfc_main$m, { menu }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div><div class="flex flex-col gap-5 items-center shrink-0 pb-4"><div class="flex flex-col gap-1.5">`);
      _push(ssrRenderComponent(DropdownSetting, null, null, _parent));
      _push(`</div>`);
      _push(ssrRenderComponent(_sfc_main$10, {
        "data-menu-item-offset": "-20px, 28px",
        "data-menu-item-overflow": "true",
        "data-menu-item-placement": "right-end",
        "data-menu-item-toggle": "dropdown",
        "data-menu-item-trigger": "click|lg:click",
        rounded: false,
        "img-size": "size-10"
      }, null, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Sidebar.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
const useBreadcrumbStore = defineStore("breadcrumb", {
  state: () => ({
    breadcrumb: []
  }),
  getters: {
    generateBreadcrumb: (state) => {
      return (sidebarStore) => {
        var _a;
        const breadcrumb = [];
        const menu = (sidebarStore == null ? void 0 : sidebarStore.currentMenu) || null;
        if (menu) {
          if (menu.title != "Accueil") {
            breadcrumb.push({
              name: menu.title,
              route: menu.route
            });
          }
          (_a = menu.items) == null ? void 0 : _a.forEach((item) => {
            let name = "";
            const index = sidebarStore.getIndex(
              menu.items,
              item.name
            );
            if (index === menu.selected) {
              name = item.name;
            }
            if (item.children) {
              const foundChild = item.children.find(
                (child) => child.name === menu.selected
              );
              const index2 = state.getIndex(
                item.children,
                foundChild == null ? void 0 : foundChild.name
              );
              if (menu.selected === index2) {
                name = foundChild.name;
              }
            }
            if (name) {
              breadcrumb.push({
                menu,
                name
              });
            }
          });
        } else {
          breadcrumb.push({
            name: "Page: " + route().current(),
            route: route().current()
          });
        }
        return breadcrumb;
      };
    }
  },
  actions: {
    updateBreadcrumb() {
      this.breadcrumb = this.generateBreadcrumb();
    }
  }
});
const _sfc_main$j = /* @__PURE__ */ defineComponent({
  __name: "Breadcrumb",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    const page2 = usePage();
    const sidebarStore = useSidebarStore();
    const breadcrumbStore = useBreadcrumbStore();
    route().current();
    const breadcrumbs = computed(
      () => breadcrumbStore.generateBreadcrumb(sidebarStore)
    );
    const breadcrumbClass = (index, length) => ({
      "text-gray-700 cursor-default": index >= length - 1,
      "text-gray-900 hover:text-primary": index < length - 1
    });
    onMounted(() => {
      router.on("finish", (event) => {
        var _a;
        if ((_a = page2.props.auth) == null ? void 0 : _a.user) {
          breadcrumbStore.updateBreadcrumb();
        }
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Link = resolveComponent("Link");
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col md:flex-row items-center justify-center md:justify-between flex-wrap gap-1 lg:gap-5" }, _attrs))}><h1 class="font-medium text-base text-gray-900"><button class="border rounded-lg px-2 btn-light" onclick="refreshPage()"><i class="pi pi-refresh"></i></button> ${ssrInterpolate(__props.title || "Titre de page")}</h1><div class="flex items-center flex-wrap gap-1 text-sm"><a class="text-gray-900 hover:text-primary" href="javascript:void(0)"> Accueil </a><!--[-->`);
      ssrRenderList(breadcrumbs.value, (crumb, index) => {
        _push(`<!--[--><span class="text-gray-400 text-sm"> / </span>`);
        if (crumb.route) {
          _push(ssrRenderComponent(_component_Link, {
            class: breadcrumbClass(index, breadcrumbs.value.length),
            href: _ctx.route(crumb.route)
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`${ssrInterpolate(crumb.name)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(crumb.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent));
        } else {
          _push(`<a class="${ssrRenderClass(breadcrumbClass(index, breadcrumbs.value.length))}" href="javascript:void(0)">${ssrInterpolate(crumb.name)}</a>`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div>`);
    };
  }
});
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Breadcrumb.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
const _sfc_main$i = {
  __name: "RapidLinks",
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarStore = useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "menu menu-default p-0 px-2",
        "data-menu": "true"
      }, _attrs))}><div class="menu-item w-full px-0.5 menu-item-dropdown" data-menu-item-offset="-4px, 0" data-menu-item-placement="top-start" data-menu-item-toggle="dropdown" data-menu-item-trigger="hover"><button class="menu-toggle w-full btn btn-light btn-sm justify-between flex-nowrap"><span class="flex items-center gap-1.5"><i class="pi pi-external-link !text-md"></i> Liens Rapides </span><span class="flex items-center lg:ms-4"><i class="ki-filled ki-down !text-xs"></i></span></button><div class="menu-dropdown w-[170px] py-2" style="${ssrRenderStyle({})}"><!--[-->`);
      ssrRenderList(unref(sidebarStore).rapidLinks, (item, index) => {
        _push(`<div class="${ssrRenderClass([{
          active: item.route && _ctx.route().current(item.route)
        }, "menu-item"])}"><a class="menu-link"${ssrRenderAttr("href", item.url ?? _ctx.route(item.route))}${ssrRenderAttr("target", item.url ? "_blank" : "_self")}><span class="menu-icon"><i class="${ssrRenderClass(item.icon)}"></i></span><span class="menu-title">${ssrInterpolate(item.label)}</span></a></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    };
  }
};
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/RapidLinks.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const _sfc_main$h = {};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    class: "btn btn-xs btn-light hidden lg:flex",
    href: "#"
  }, _attrs))}><i class="ki-filled ki-chart-line-star"></i> Rapports </button>`);
}
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Rapports.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const Rapports = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["ssrRender", _sfc_ssrRender$2]]);
const _sfc_main$g = {
  __name: "Toolbar",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    const desktopMode = useResponsive("up", "lg");
    const mainStore = useMainStore();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "pb-5 md:sticky md:top-0 md:px-2 z-10" }, _attrs))}><div class="${ssrRenderClass([[
        {
          "topbar-sticky rounded-lg": unref(mainStore).isScrolled && unref(desktopMode)
        }
      ], "container-fluid flex justify-center md:justify-between items-center flex-wrap gap-3 md:p-1.5"])}">`);
      _push(ssrRenderComponent(_sfc_main$j, { title: __props.title }, null, _parent));
      _push(`<div class="flex items-center justify-center flex-wrap gap-1.5 lg:gap-3.5"><button class="btn btn-icon btn-icon-lg size-9 rounded-md hover:bg-gray-200 dropdown-open:bg-gray-200 hover:text-primary text-gray-600" data-modal-toggle="#search_modal"><i class="ki-filled ki-magnifier"></i></button>`);
      _push(ssrRenderComponent(_sfc_main$12, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$i, null, null, _parent));
      _push(ssrRenderComponent(Rapports, null, null, _parent));
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Gestion/Toolbar.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const _sfc_main$f = {
  __name: "NoContentCard",
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarStore = useSidebarStore();
    const home = () => {
      router.visit("/");
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Card = __unplugin_components_0$5;
      const _component_Button = __unplugin_components_0$1;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex justify-center items-center min-h-[500px]" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_Card, null, {
        content: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="text-center"${_scopeId}><h3 class="text-2xl mb-3"${_scopeId}> Cette page est actuellement indisponible ! </h3><div class="flex flex-wrap justify-center gap-3"${_scopeId}>`);
            if (unref(sidebarStore).currentMenu) {
              _push2(ssrRenderComponent(_component_Button, {
                onClick: ($event) => unref(sidebarStore).setSelected(
                  unref(sidebarStore).currentMenu.title,
                  unref(sidebarStore).currentMenu.selected
                ),
                raised: "",
                label: "Actualier",
                icon: "ki-filled ki-arrow-circle-right"
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(_component_Button, {
              onClick: home,
              raised: "",
              severity: "secondary",
              label: "Tableau de bord",
              icon: "ki-filled ki-home"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            return [
              createVNode("div", { class: "text-center" }, [
                createVNode("h3", { class: "text-2xl mb-3" }, " Cette page est actuellement indisponible ! "),
                createVNode("div", { class: "flex flex-wrap justify-center gap-3" }, [
                  unref(sidebarStore).currentMenu ? (openBlock(), createBlock(_component_Button, {
                    key: 0,
                    onClick: ($event) => unref(sidebarStore).setSelected(
                      unref(sidebarStore).currentMenu.title,
                      unref(sidebarStore).currentMenu.selected
                    ),
                    raised: "",
                    label: "Actualier",
                    icon: "ki-filled ki-arrow-circle-right"
                  }, null, 8, ["onClick"])) : createCommentVNode("", true),
                  createVNode(_component_Button, {
                    onClick: home,
                    raised: "",
                    severity: "secondary",
                    label: "Tableau de bord",
                    icon: "ki-filled ki-home"
                  })
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
};
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/NoContentCard.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const _sfc_main$e = {
  __name: "GestionLayout",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    const mainStore = useMainStore();
    const sidebarStore = useSidebarStore();
    const { width: viewportWidth } = useViewport();
    const noContent = ref(false);
    useBodyClasses(`
    [--tw-page-bg:#F6F6F9]
    [--tw-page-bg-dark:var(--tw-coal-200)]
    [--tw-content-bg:var(--tw-light)]
    [--tw-content-bg-dark:var(--tw-coal-500)]
    [--tw-content-scrollbar-color:#e8e8e8]
    [--tw-header-height:60px]
    [--tw-sidebar-width:105px]
    bg-[--tw-page-bg]
    dark:bg-[--tw-page-bg-dark]
  `);
    function setDefaultMenu() {
      sidebarStore.menus.forEach((menu, index) => {
        if (route().current(menu.route)) {
          sidebarStore.selectedMenu = menu.title;
        }
      });
    }
    onBeforeMount(() => {
      setDefaultMenu();
    });
    onMounted(() => {
      router.on("start", (event) => {
        if (event.detail.visit.method.toLowerCase() === "get")
          mainStore.showContent = false;
      });
      router.on("finish", (event) => {
        setDefaultMenu();
        mainStore.showContent = true;
      });
    });
    onUnmounted(() => {
    });
    watch(
      () => (sidebarStore.currentMenu, sidebarStore.currentComponent),
      (currentMenu, currentComponent) => {
        if (!currentMenu || !currentComponent) {
          noContent.value = true;
        } else {
          noContent.value = false;
        }
      },
      { deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_Divider = __unplugin_components_0$4;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, {
        title: __props.title + " (Gestion)"
      }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$o, {
        style: { maxWidth: unref(viewportWidth) + "px" }
      }, null, _parent));
      _push(`<div class="flex flex-col lg:flex-row grow pt-[--tw-header-height] lg:pt-0">`);
      _push(ssrRenderComponent(_sfc_main$k, null, null, _parent));
      _push(`<p class="min-h-[2px]"></p><div class="flex flex-col grow rounded-xl bg-[--tw-content-bg] dark:bg-[--tw-content-bg-dark] border border-gray-300 dark:border-gray-200 lg:ms-[--tw-sidebar-width] mt-0 lg:mt-5 m-5"><div class="flex flex-col grow lg:scrollable-y-auto lg:[scrollbar-width:auto] lg:light:[--tw-scrollbar-thumb-color:var(--tw-content-scrollbar-color)] pt-5" id="scrollable_content"><main class="grow pb-3" role="content">`);
      _push(ssrRenderComponent(_sfc_main$g, { title: __props.title }, null, _parent));
      _push(`<div class="container-fluid xxl:container-fixed"><div class="xl:px-[70px]">`);
      if (noContent.value) {
        _push(ssrRenderComponent(_sfc_main$f, null, null, _parent));
      } else {
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      }
      _push(`</div></div></main></div>`);
      _push(ssrRenderComponent(_component_Divider, null, null, _parent));
      _push(ssrRenderComponent(_sfc_main$Y, null, null, _parent));
      _push(`</div><p class="min-h-[2px]"></p></div><!--]-->`);
    };
  }
};
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/GestionLayout.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const _sfc_main$d = /* @__PURE__ */ defineComponent({
  __name: "SearchTabs",
  __ssrInlineRender: true,
  props: {
    tabs: Object
  },
  setup(__props) {
    const tabTarget = (title, index) => {
      return `${title.toLowerCase().replace(" ", "_")}_modal_tab_${index}`;
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><div class="tabs justify-between px-5 mb-2.5" data-tabs="true"><div class="flex items-center gap-5"><!--[-->`);
      ssrRenderList(__props.tabs, (tab, index) => {
        _push(`<button class="tab py-5 active"${ssrRenderAttr("data-tab-toggle", "#" + tabTarget(tab.title, index))}>${ssrInterpolate(tab.title)}</button>`);
      });
      _push(`<!--]--></div><div class="menu -mt-px" data-menu="true"><div class="menu-item menu-item-dropdown" data-menu-item-offset="0, 10px" data-menu-item-placement="bottom-end" data-menu-item-placement-rtl="bottom-start" data-menu-item-toggle="dropdown" data-menu-item-trigger="click|lg:hover"><button class="menu-toggle btn btn-sm btn-icon btn-light btn-clear"><i class="ki-filled ki-setting-2"></i></button><div class="menu-dropdown menu-default w-full max-w-[175px]" data-menu-dismiss="true"><div class="menu-item"><a class="menu-link" href="#"><span class="menu-icon"><i class="ki-filled ki-document"></i></span><span class="menu-title"> View </span></a></div><div class="menu-item menu-item-dropdown" data-menu-item-offset="-15px, 0" data-menu-item-placement="right-start" data-menu-item-toggle="dropdown" data-menu-item-trigger="click|lg:hover"><div class="menu-link"><span class="menu-icon"><i class="ki-filled ki-notification-status"></i></span><span class="menu-title"> Export </span><span class="menu-arrow"><i class="ki-filled ki-right text-3xs rtl:transform rtl:rotate-180"></i></span></div><div class="menu-dropdown menu-default w-full max-w-[175px]"><div class="menu-item"><a class="menu-link" href="#"><span class="menu-icon"><i class="ki-filled ki-sms"></i></span><span class="menu-title"> Email </span></a></div><div class="menu-item"><a class="menu-link" href="#"><span class="menu-icon"><i class="ki-filled ki-message-notify"></i></span><span class="menu-title"> SMS </span></a></div><div class="menu-item"><a class="menu-link" href="#"><span class="menu-icon"><i class="ki-filled ki-notification-status"></i></span><span class="menu-title"> Push </span></a></div></div></div></div></div></div></div><div class="scrollable-y-auto" data-scrollable="true" data-scrollable-max-height="auto" data-scrollable-offset="300px" style="${ssrRenderStyle({ "max-height": "266px" })}"><!--[-->`);
      ssrRenderList(__props.tabs, (tab, index) => {
        _push(`<div${ssrRenderAttr("id", tabTarget(tab.title, index))} class="">`);
        ssrRenderVNode(_push, createVNode(resolveDynamicComponent(tab.content), mergeProps({ ref_for: true }, tab.props), null), _parent);
        _push(`</div>`);
      });
      _push(`<!--]--></div><!--]-->`);
    };
  }
});
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Modals/SearchTabs.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const _sfc_main$c = /* @__PURE__ */ defineComponent({
  __name: "SearchMenu",
  __ssrInlineRender: true,
  setup(__props) {
    const mainStore = useMainStore();
    const sidebarStore = useSidebarStore();
    const results = computed(() => {
      return sidebarStore.getMenus(mainStore.mainSearch);
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col gap-2.5" }, _attrs))}><div><div class="text-xs text-gray-600 font-medium pt-2.5 pb-1.5 ps-5"> Elements du menu </div><div class="menu menu-default p-0 flex-col"><!--[-->`);
      ssrRenderList(results.value, (menu, index) => {
        _push(`<!--[--><div class="menu-item"><a class="menu-link" href="#" data-modal-dismiss="true"><span class="menu-icon"><i class="${ssrRenderClass([menu.icon, "ki-filled"])}"></i></span><span class="menu-title">${ssrInterpolate(menu.title)}</span></a></div>`);
        if (menu.items) {
          _push(`<!--[-->`);
          ssrRenderList(menu.items, (item, itemIndex) => {
            _push(`<div class="menu-item ml-4"><a class="menu-link" href="#" data-modal-dismiss="true"><span class="menu-icon"><i class="${ssrRenderClass([item.icon, "ki-filled"])}"></i></span><span class="menu-title">${ssrInterpolate(item.name)}</span></a></div>`);
          });
          _push(`<!--]-->`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div></div>`);
    };
  }
});
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SearchMenu.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const _sfc_main$b = /* @__PURE__ */ defineComponent({
  __name: "SearchModal",
  __ssrInlineRender: true,
  setup(__props) {
    const mainStore = useMainStore();
    const tabs = [
      {
        title: "Menu",
        content: markRaw(_sfc_main$c)
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "modal",
        "data-modal": "true",
        id: "search_modal"
      }, _attrs))}><div class="modal-content max-w-[600px] top-[15%]"><div class="modal-header py-4 px-5"><i class="ki-filled ki-magnifier text-gray-700 text-xl"></i><input class="input px-0 border-none bg-transparent shadow-none ms-2.5" name="query"${ssrRenderAttr("value", unref(mainStore).mainSearch)} placeholder="Tape pour rechercher" type="text"><button class="btn btn-sm btn-icon btn-light btn-clear shrink-0" data-modal-dismiss="true"><i class="ki-filled ki-cross"></i></button></div><div class="modal-body p-0 pb-5">`);
      _push(ssrRenderComponent(_sfc_main$d, { tabs }, null, _parent));
      _push(`</div></div></div>`);
    };
  }
});
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Modals/SearchModal.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
const _sfc_main$a = {
  __name: "MainLayout",
  __ssrInlineRender: true,
  props: {
    title: String
  },
  setup(__props) {
    const mainStore = useMainStore();
    const userStore = useUserStore();
    const scrollable = ref(null);
    onMounted(() => {
      userStore.fetchUser();
      window.addEventListener("load", mainStore.setShowContent(true), false);
      nextTick(() => {
        var _a;
        KTComponents.init();
        KTLayout.init();
        KTTogglePassword.init();
        scrollable.value = document.getElementById("scrollable_content");
        (_a = scrollable.value) == null ? void 0 : _a.addEventListener("scroll", mainStore.handleScroll);
      });
    });
    onUnmounted(() => {
      var _a;
      (_a = scrollable.value) == null ? void 0 : _a.removeEventListener("scroll", mainStore.handleScroll);
      window.removeEventListener("load", mainStore.setShowContent(true));
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      const _component_Loader = resolveComponent("Loader");
      const _component_Toast = __unplugin_components_0$8;
      const _component_ConfirmDialog = __unplugin_components_1$8;
      const _component_ScrollTop = __unplugin_components_2$6;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<link href="/static/css/styles.css" rel="stylesheet"${_scopeId}>`);
          } else {
            return [
              createVNode("link", {
                href: "/static/css/styles.css",
                rel: "stylesheet"
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      if (!unref(mainStore).showContent) {
        _push(ssrRenderComponent(_component_Loader, null, null, _parent));
      } else {
        _push(`<div class="flex grow">`);
        if (_ctx.$page.props.routePrefix === "app.") {
          _push(ssrRenderComponent(_sfc_main$W, { title: __props.title }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  renderSlot(_ctx.$slots, "default")
                ];
              }
            }),
            _: 3
          }, _parent));
        } else if (_ctx.$page.props.routePrefix === "gestion.") {
          _push(ssrRenderComponent(_sfc_main$e, { title: __props.title }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  renderSlot(_ctx.$slots, "default")
                ];
              }
            }),
            _: 3
          }, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      }
      _push(ssrRenderComponent(_sfc_main$b, null, null, _parent));
      _push(ssrRenderComponent(_component_Toast, null, null, _parent));
      _push(ssrRenderComponent(_component_ConfirmDialog, null, null, _parent));
      _push(ssrRenderComponent(_component_ScrollTop, null, null, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/MainLayout.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const _sfc_main$9 = /* @__PURE__ */ defineComponent({
  __name: "AuthLayout",
  __ssrInlineRender: true,
  props: {
    branded: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const authStatus = usePage().props.authStatus || null;
    useBodyClasses("dark:bg-coal-500");
    const { height: viewportHeight } = useViewport();
    onMounted(() => {
      nextTick(() => {
        KTTogglePassword.init();
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Message = __unplugin_components_0;
      if (!__props.branded) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center justify-center grow bg-center bg-no-repeat page-bg px-2 md:px-0" }, _attrs))}>`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</div>`);
      } else {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: "grid lg:grid-cols-2 grow bg-orange-50",
          style: {
            minHeight: unref(viewportHeight) + "px"
          }
        }, _attrs))}><div class="flex flex-col justify-center items-center order-2 lg:order-1">`);
        if (unref(authStatus)) {
          _push(ssrRenderComponent(_component_Message, {
            severity: unref(authStatus).severity,
            closable: true
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`${ssrInterpolate(unref(authStatus).message)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(unref(authStatus).message), 1)
                ];
              }
            }),
            _: 1
          }, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<div class="flex justify-center items-center p-8 lg:p-10">`);
        ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
        _push(`</div></div><div class="lg:rounded-xl lg:border lg:border-gray-200 lg:m-5 order-1 lg:order-2 bg-top xxl:bg-center xl:bg-cover bg-no-repeat branded-bg"><div class="flex flex-col pb-0 sm:pb-8 p-8 lg:p-16 gap-4"><a href="/"><img class="h-[28px] max-w-none" src="/images/logo.png"></a><div class="flex flex-col gap-3">`);
        ssrRenderSlot(_ctx.$slots, "headerText", {}, () => {
          _push(`<h3 class="text-2xl font-semibold text-gray-900"> Le lieu où l&#39;avenir prend forme ! </h3><div class="text-base font-medium text-gray-600"> Viens retrouver tous les outils pour <br> prendre en main <span class="text-gray-900 font-semibold"> ton avenir </span> et <br> transformer ta vie. </div>`);
        }, _push, _parent);
        _push(`</div></div></div></div>`);
      }
    };
  }
});
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AuthLayout.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const _sfc_main$8 = {
  __name: "ErrorLayout",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      default: "Erreur"
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = resolveComponent("Head");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: __props.title }, null, _parent));
      _push(`<div class="flex flex-col items-center justify-center grow h-[95%]">`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div><!--]-->`);
    };
  }
};
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/ErrorLayout.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const _sfc_main$7 = {
  __name: "PageLayout",
  __ssrInlineRender: true,
  props: {
    title: String,
    componentProps: Object
  },
  setup(__props) {
    const sidebarStore = useSidebarStore();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_MainLayout = resolveComponent("MainLayout");
      _push(ssrRenderComponent(_component_MainLayout, mergeProps({ title: __props.title }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="grid gap-5 lg:gap-7.5"${_scopeId}><div class="grid lg:grid-cols-1 gap-5 lg:gap-7.5 items-stretch"${_scopeId}><div class=""${_scopeId}>`);
            ssrRenderSlot(_ctx.$slots, "default", {}, () => {
              ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(unref(sidebarStore).currentComponent()), __props.componentProps, null), _parent2, _scopeId);
            }, _push2, _parent2, _scopeId);
            _push2(`</div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "grid gap-5 lg:gap-7.5" }, [
                createVNode("div", { class: "grid lg:grid-cols-1 gap-5 lg:gap-7.5 items-stretch" }, [
                  createVNode("div", { class: "" }, [
                    renderSlot(_ctx.$slots, "default", {}, () => [
                      (openBlock(), createBlock(resolveDynamicComponent(unref(sidebarStore).currentComponent()), __props.componentProps, null, 16))
                    ])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    };
  }
};
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/PageLayout.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const _sfc_main$6 = {
  __name: "CardTemplate",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "card card-grid h-full min-w-full" }, _attrs))}><div class="card-header"><h3 style="${ssrRenderStyle(__props.title ? null : { display: "none" })}" class="card-title">${ssrInterpolate(__props.title)}</h3>`);
      ssrRenderSlot(_ctx.$slots, "header", {}, null, _push, _parent);
      _push(`</div>`);
      if (_ctx.$slots.default) {
        _push(`<div class="card-body scrollable">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      ssrRenderSlot(_ctx.$slots, "footer", {}, () => {
        _push(`<div class="card-footer"></div>`);
      }, _push, _parent);
      _push(`</div>`);
    };
  }
};
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/CardTemplate.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const _sfc_main$5 = /* @__PURE__ */ defineComponent({
  ...{
    inheritAttrs: false
  },
  __name: "CustomDataTable",
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      default: "Liste"
    },
    paginated: {
      type: Object,
      required: false,
      default: () => {
      }
    },
    filters: {
      type: Object,
      required: false,
      default: () => {
      }
    },
    filterName: {
      type: String,
      required: false
    },
    showSearch: {
      type: Boolean,
      default: true
    },
    showPagination: {
      type: Boolean,
      default: true
    },
    showCreationDate: {
      type: Boolean,
      default: false
    },
    showUpdateDate: {
      type: Boolean,
      default: false
    }
  },
  emits: ["searched"],
  setup(__props, { emit: __emit }) {
    useViewport();
    const emits = __emit;
    const props = __props;
    const data = ref({});
    const searchCount = ref(0);
    const filters = ref();
    const initFilters = () => {
      filters.value = {
        ...props.filters,
        created_at: { value: null, matchMode: FilterMatchMode.CONTAINS },
        updated_at: { value: null, matchMode: FilterMatchMode.CONTAINS }
      };
    };
    initFilters();
    const onFilter = (event) => {
    };
    const onSearch = () => {
      searchCount.value++;
      emits("searched", searchCount.value);
    };
    const parseDate = (date) => {
      return date ? dayjs(date).format("DD/MM/YYYY à HH:mm:ss") : "--";
    };
    watch(
      () => props.paginated,
      () => {
        var _a, _b;
        data.value = ((_b = (_a = props.paginated) == null ? void 0 : _a.data) == null ? void 0 : _b.map((item) => {
          return {
            ...item,
            created_at: parseDate(item.created_at),
            updated_at: parseDate(item.updated_at)
          };
        })) || {};
      },
      { immediate: true, deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      var _a, _b;
      const _component_SearchInput = resolveComponent("SearchInput");
      const _component_DataTable = __unplugin_components_1$7;
      const _component_Message = __unplugin_components_0;
      const _component_Column = __unplugin_components_2;
      const _component_InputText = __unplugin_components_1$2;
      const _component_Pagination = resolveComponent("Pagination");
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "card card-grid h-full",
        style: { maxWidth: "auto" }
      }, _attrs))}><div class="card-header">`);
      if (__props.showSearch) {
        _push(ssrRenderComponent(_component_SearchInput, {
          "filter-name": __props.filterName,
          placeholder: "Rechercher...",
          onSearched: onSearch
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="card-title">${ssrInterpolate(__props.title)} `);
      if ((_a = __props.paginated) == null ? void 0 : _a.total) {
        _push(`<span>${ssrInterpolate(`(total ${((_b = __props.paginated) == null ? void 0 : _b.total) || ""})`)}</span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div><div class="card-body"><div class="datatable-initialized" data-datatable="true" data-datatable-page-size="5"><div class="scrollable-x-auto">`);
      _push(ssrRenderComponent(_component_DataTable, mergeProps({
        class: "table table-auto",
        "data-datatable-table": "true"
      }, _ctx.$attrs, {
        ref: "dt",
        value: Object.values(data.value),
        filters: filters.value,
        "onUpdate:filters": ($event) => filters.value = $event,
        filterDisplay: "row",
        scrollable: "",
        scrollHeight: unref(scrollHeight),
        pt: unref(pt),
        onFilter
      }), {
        empty: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "empty", {}, () => {
              _push2(`<div class="flex items-center grow rounded-xl border border-dashed gap-4 p-4 border-primary bg-secondary-light"${_scopeId}><i class="ki-outline ki-information-1 text-3xl text-primary"${_scopeId}></i><div class="flex flex-col gap-0.5"${_scopeId}><p class="text text-2sm font-normal"${_scopeId}> Aucun résultat trouvé </p></div></div>`);
            }, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "empty", {}, () => [
                createVNode("div", { class: "flex items-center grow rounded-xl border border-dashed gap-4 p-4 border-primary bg-secondary-light" }, [
                  createVNode("i", { class: "ki-outline ki-information-1 text-3xl text-primary" }),
                  createVNode("div", { class: "flex flex-col gap-0.5" }, [
                    createVNode("p", { class: "text text-2sm font-normal" }, " Aucun résultat trouvé ")
                  ])
                ])
              ])
            ];
          }
        }),
        loading: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "loading", {}, () => {
              _push2(ssrRenderComponent(_component_Message, {
                severity: "contrast",
                icon: "pi pi-hourglass"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Chargement...`);
                  } else {
                    return [
                      createTextVNode(" Chargement...")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            }, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "loading", {}, () => [
                createVNode(_component_Message, {
                  severity: "contrast",
                  icon: "pi pi-hourglass"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Chargement...")
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        footer: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "footer")
            ];
          }
        }),
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
            if (__props.showCreationDate) {
              _push2(ssrRenderComponent(_component_Column, {
                field: "created_at",
                header: "Date de création",
                sortable: "",
                style: { "max-width": "11rem" }
              }, {
                body: withCtx(({ data: data2, field }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${ssrInterpolate(data2[field])}`);
                  } else {
                    return [
                      createTextVNode(toDisplayString(data2[field]), 1)
                    ];
                  }
                }),
                filter: withCtx(({ filterModel, filterCallback }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_InputText, {
                      style: { "min-width": "5rem", "max-width": "7rem" },
                      size: "small",
                      modelValue: filterModel.value,
                      "onUpdate:modelValue": ($event) => filterModel.value = $event,
                      onInput: ($event) => filterCallback(),
                      placeholder: "jj/mm/aaaa"
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_InputText, {
                        style: { "min-width": "5rem", "max-width": "7rem" },
                        size: "small",
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        onInput: ($event) => filterCallback(),
                        placeholder: "jj/mm/aaaa"
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            if (__props.showUpdateDate) {
              _push2(ssrRenderComponent(_component_Column, {
                field: "updated_at",
                header: "Dernière modification",
                style: { "max-width": "11rem" },
                sortable: ""
              }, {
                body: withCtx(({ data: data2, field }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${ssrInterpolate(data2[field])}`);
                  } else {
                    return [
                      createTextVNode(toDisplayString(data2[field]), 1)
                    ];
                  }
                }),
                filter: withCtx(({ filterModel, filterCallback }, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(ssrRenderComponent(_component_InputText, {
                      style: { "min-width": "5rem", "max-width": "7rem" },
                      size: "small",
                      modelValue: filterModel.value,
                      "onUpdate:modelValue": ($event) => filterModel.value = $event,
                      onInput: ($event) => filterCallback(),
                      placeholder: "jj/mm/aaaa"
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode(_component_InputText, {
                        style: { "min-width": "5rem", "max-width": "7rem" },
                        size: "small",
                        modelValue: filterModel.value,
                        "onUpdate:modelValue": ($event) => filterModel.value = $event,
                        onInput: ($event) => filterCallback(),
                        placeholder: "jj/mm/aaaa"
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              renderSlot(_ctx.$slots, "default"),
              __props.showCreationDate ? (openBlock(), createBlock(_component_Column, {
                key: 0,
                field: "created_at",
                header: "Date de création",
                sortable: "",
                style: { "max-width": "11rem" }
              }, {
                body: withCtx(({ data: data2, field }) => [
                  createTextVNode(toDisplayString(data2[field]), 1)
                ]),
                filter: withCtx(({ filterModel, filterCallback }) => [
                  createVNode(_component_InputText, {
                    style: { "min-width": "5rem", "max-width": "7rem" },
                    size: "small",
                    modelValue: filterModel.value,
                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                    onInput: ($event) => filterCallback(),
                    placeholder: "jj/mm/aaaa"
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                ]),
                _: 1
              })) : createCommentVNode("", true),
              __props.showUpdateDate ? (openBlock(), createBlock(_component_Column, {
                key: 1,
                field: "updated_at",
                header: "Dernière modification",
                style: { "max-width": "11rem" },
                sortable: ""
              }, {
                body: withCtx(({ data: data2, field }) => [
                  createTextVNode(toDisplayString(data2[field]), 1)
                ]),
                filter: withCtx(({ filterModel, filterCallback }) => [
                  createVNode(_component_InputText, {
                    style: { "min-width": "5rem", "max-width": "7rem" },
                    size: "small",
                    modelValue: filterModel.value,
                    "onUpdate:modelValue": ($event) => filterModel.value = $event,
                    onInput: ($event) => filterCallback(),
                    placeholder: "jj/mm/aaaa"
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                ]),
                _: 1
              })) : createCommentVNode("", true)
            ];
          }
        }),
        _: 3
      }, _parent));
      _push(`</div></div></div>`);
      if (__props.showPagination) {
        _push(`<div class="card-footer justify-center md:justify-end">`);
        _push(ssrRenderComponent(_component_Pagination, {
          paginated: __props.paginated,
          filterName: __props.filterName
        }, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/CustomDataTable.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const _sfc_main$4 = {
  __name: "Notice",
  __ssrInlineRender: true,
  props: {
    title: { type: String, default: "" },
    severity: {
      type: String,
      default: "primary"
    }
  },
  setup(__props) {
    const props = __props;
    const getIcon2 = () => {
      switch (props.severity) {
        case "primary":
          return "information";
        case "danger":
          return "exclamation-2";
        case "success":
          return "check-2";
        case "secondary":
          return "check-2";
        case "warning":
          return "warning-2";
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["notice d-flex rounded border border-dashed mb-9 p-6", `bg-light-${__props.severity} border-${__props.severity}`]
      }, _attrs))}><i class="${ssrRenderClass([`ki-${getIcon2()} text-${__props.severity}`, "ki-filled text-3xl me-4"])}"></i><div class="d-flex flex-stack flex-grow-1"><div class="fw-semobold">`);
      if (__props.title) {
        _push(`<h4 class="text-gray-800 fw-bold">${__props.title ?? ""}</h4>`);
      } else {
        _push(`<!---->`);
      }
      if (_ctx.$slots.content) {
        _push(`<div class="fs-6 text-gray-600">`);
        ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div>`);
    };
  }
};
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/Notice.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const _sfc_main$3 = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
  const _component_ProgressSpinner = __unplugin_components_0$a;
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col items-center justify-center grow h-[95%]" }, _attrs))}>`);
  _push(ssrRenderComponent(_component_ProgressSpinner, null, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/Loader.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const Loader = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender$1]]);
const _sfc_main$2 = /* @__PURE__ */ defineComponent({
  __name: "Status",
  __ssrInlineRender: true,
  props: {
    flash: Object,
    summary: {
      type: String,
      default: null
    }
  },
  setup(__props) {
    const props = __props;
    const toast = useToast();
    const visible = ref(false);
    const showToast = () => {
      if (!visible.value) {
        const { severity, summary, detail } = getToastData();
        toast.add({
          severity,
          summary,
          detail,
          group: "toastStatus",
          life: 3e4
          // 30 seconds
        });
        visible.value = true;
      }
    };
    const closeToast = () => {
      toast.removeGroup("toastStatus");
      visible.value = false;
    };
    const onClose = () => {
      visible.value = false;
    };
    onMounted(() => {
      router.on("start", (event) => {
        if (event.detail.visit.method.toLowerCase() !== "get") closeToast();
      });
    });
    watch(
      () => props.flash,
      (newFlash) => {
        if (newFlash.fail || newFlash.success || newFlash.status) showToast();
        else closeToast();
      },
      { immediate: true, deep: true }
    );
    function getToastData() {
      var _a, _b, _c;
      if (props.summary) {
        return { severity: "contrast", summary: props.summary, detail: "" };
      }
      if ((_a = props.flash) == null ? void 0 : _a.fail) {
        return {
          severity: "error",
          summary: "Échec de l'opération",
          detail: props.flash.fail
        };
      }
      if ((_b = props.flash) == null ? void 0 : _b.success) {
        return {
          severity: "success",
          summary: "Succès de l'opération",
          detail: props.flash.success
        };
      }
      if ((_c = props.flash) == null ? void 0 : _c.status) {
        return {
          severity: "info",
          summary: "Statut de l'opération",
          detail: props.flash.status
        };
      }
      return { severity: null, summary: "", detail: "" };
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Toast = __unplugin_components_0$8;
      _push(ssrRenderComponent(_component_Toast, mergeProps({
        position: "bottom-center",
        group: "toastStatus",
        onClose,
        class: "container"
      }, _attrs), {
        message: withCtx(({ message }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="flex flex-col items-start flex-auto" data-v-3d93a240${_scopeId}><div class="flex items-center gap-2" data-v-3d93a240${_scopeId}><i class="pi pi-exclamation-triangle" shape="circle" data-v-3d93a240${_scopeId}></i><span class="font-bold" data-v-3d93a240${_scopeId}>${ssrInterpolate(message.summary)}</span></div><div class="font-medium my-4" data-v-3d93a240${_scopeId}>${ssrInterpolate(message.detail)}</div></div>`);
          } else {
            return [
              createVNode("div", { class: "flex flex-col items-start flex-auto" }, [
                createVNode("div", { class: "flex items-center gap-2" }, [
                  createVNode("i", {
                    class: "pi pi-exclamation-triangle",
                    shape: "circle"
                  }),
                  createVNode("span", { class: "font-bold" }, toDisplayString(message.summary), 1)
                ]),
                createVNode("div", { class: "font-medium my-4" }, toDisplayString(message.detail), 1)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/Toast/Status.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const ToastStatus = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["__scopeId", "data-v-3d93a240"]]);
const _sfc_main$1 = {
  __name: "CopyBtn",
  __ssrInlineRender: true,
  props: {
    text: {
      type: String,
      default: null
    }
  },
  emits: ["copied"],
  setup(__props, { emit: __emit }) {
    const copied = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.text) {
        _push(`<i${ssrRenderAttrs(mergeProps({
          class: ["cursor-pointer ki-filled", copied.value ? "ki-copy-success text-success" : "ki-copy"]
        }, _attrs))}></i>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/CopyBtn.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_Card = __unplugin_components_0$5;
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex justify-center items-center min-h-[500px]" }, _attrs))}>`);
  _push(ssrRenderComponent(_component_Card, null, {
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="text-center"${_scopeId}><h3 class="text-2xl mb-3"${_scopeId}> Vous n&#39;avez pas les autorisations requises pour voir cette page ! </h3><div class="flex flex-wrap justify-center gap-3"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          class: "btn btn-primary btn-lg",
          href: "/"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<i class="ki-filled ki-home"${_scopeId2}></i> Tableau de bord `);
            } else {
              return [
                createVNode("i", { class: "ki-filled ki-home" }),
                createTextVNode(" Tableau de bord ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "text-center" }, [
            createVNode("h3", { class: "text-2xl mb-3" }, " Vous n'avez pas les autorisations requises pour voir cette page ! "),
            createVNode("div", { class: "flex flex-wrap justify-center gap-3" }, [
              createVNode(_component_Link, {
                class: "btn btn-primary btn-lg",
                href: "/"
              }, {
                default: withCtx(() => [
                  createVNode("i", { class: "ki-filled ki-home" }),
                  createTextVNode(" Tableau de bord ")
                ]),
                _: 1
              })
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Base/NotPermitted.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const NotPermitted = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
function registerComponents(app) {
  app.component("Head", Head);
  app.component("Link", Link);
  app.component("MainLayout", _sfc_main$a);
  app.component("AuthLayout", _sfc_main$9);
  app.component("ErrorLayout", _sfc_main$8);
  app.component("PageLayout", _sfc_main$7);
  app.component("InputError", _sfc_main$2F);
  app.component("CardTemplate", _sfc_main$6);
  app.component("CustomDataTable", _sfc_main$5);
  app.component("Pagination", _sfc_main$1d);
  app.component("Notice", _sfc_main$4);
  app.component("Loader", Loader);
  app.component("FormButtonGroup", _sfc_main$2r);
  app.component("ToastError", ToastError);
  app.component("ToastStatus", ToastStatus);
  app.component("SearchInput", _sfc_main$1c);
  app.component("CopyBtn", _sfc_main$1);
  app.component("NotPermitted", NotPermitted);
}
createServer(
  (page2) => createInertiaApp({
    page: page2,
    render: renderToString,
    resolve: (name) => {
      const pages = /* @__PURE__ */ Object.assign({ "./Pages/API/Index.vue": __vite_glob_0_0, "./Pages/API/Partials/ApiTokenManager.vue": __vite_glob_0_1, "./Pages/Account/Index.vue": __vite_glob_0_2, "./Pages/Account/Partials/Activities.vue": __vite_glob_0_3, "./Pages/Account/Partials/EmailAndPassword.vue": __vite_glob_0_4, "./Pages/Account/Partials/EmailForm.vue": __vite_glob_0_5, "./Pages/Account/Partials/LogoutOtherBrowserSessionsForm.vue": __vite_glob_0_6, "./Pages/Account/Partials/PasswordForm.vue": __vite_glob_0_7, "./Pages/App/Dashboard.vue": __vite_glob_0_8, "./Pages/App/Emploi.vue": __vite_glob_0_9, "./Pages/App/Entreprendre.vue": __vite_glob_0_10, "./Pages/App/Formation.vue": __vite_glob_0_11, "./Pages/App/Partials/CvForm.vue": __vite_glob_0_12, "./Pages/App/Partials/Dashboard/Hero.vue": __vite_glob_0_13, "./Pages/Auth/2Fa.vue": __vite_glob_0_14, "./Pages/Auth/ForgotPassword.vue": __vite_glob_0_15, "./Pages/Auth/Jetstream/ConfirmPassword.vue": __vite_glob_0_16, "./Pages/Auth/Jetstream/ForgotPassword.vue": __vite_glob_0_17, "./Pages/Auth/Jetstream/Login.vue": __vite_glob_0_18, "./Pages/Auth/Jetstream/Register.vue": __vite_glob_0_19, "./Pages/Auth/Jetstream/ResetPassword.vue": __vite_glob_0_20, "./Pages/Auth/Jetstream/TwoFactorChallenge.vue": __vite_glob_0_21, "./Pages/Auth/Jetstream/VerifyEmail.vue": __vite_glob_0_22, "./Pages/Auth/Login.vue": __vite_glob_0_23, "./Pages/Auth/PasswordChanged.vue": __vite_glob_0_24, "./Pages/Auth/Register.vue": __vite_glob_0_25, "./Pages/Auth/ResetPassword.vue": __vite_glob_0_26, "./Pages/Auth/TwoFactorChallenge.vue": __vite_glob_0_27, "./Pages/Auth/VerifyEmail.vue": __vite_glob_0_28, "./Pages/Error/403.vue": __vite_glob_0_29, "./Pages/Error/404.vue": __vite_glob_0_30, "./Pages/Error/419.vue": __vite_glob_0_31, "./Pages/Error/500.vue": __vite_glob_0_32, "./Pages/Gestion/Configuration.vue": __vite_glob_0_33, "./Pages/Gestion/Dashboard.vue": __vite_glob_0_34, "./Pages/Gestion/Partials/AgoraSessions.vue": __vite_glob_0_35, "./Pages/Gestion/Partials/AgoraSessions/AgoraForm.vue": __vite_glob_0_36, "./Pages/Gestion/Partials/AgoraSessions/AgoraList.vue": __vite_glob_0_37, "./Pages/Gestion/Partials/Configuration/Departements.vue": __vite_glob_0_38, "./Pages/Gestion/Partials/Configuration/JobForm.vue": __vite_glob_0_39, "./Pages/Gestion/Partials/Configuration/Jobs.vue": __vite_glob_0_40, "./Pages/Gestion/Partials/Configuration/SiteSettings/OtherSettings.vue": __vite_glob_0_41, "./Pages/Gestion/Partials/Configuration/SiteSettings/Settings.vue": __vite_glob_0_42, "./Pages/Gestion/Partials/Configuration/SiteSettings/SettingsForm.vue": __vite_glob_0_43, "./Pages/Gestion/Partials/Configuration/SiteSettings/SocialLinks.vue": __vite_glob_0_44, "./Pages/Gestion/Partials/Configuration/TrainingForm.vue": __vite_glob_0_45, "./Pages/Gestion/Partials/Configuration/Trainings.vue": __vite_glob_0_46, "./Pages/Gestion/Partials/DashSide.vue": __vite_glob_0_47, "./Pages/Gestion/Partials/Faqs.vue": __vite_glob_0_48, "./Pages/Gestion/Partials/Faqs/FaqForm.vue": __vite_glob_0_49, "./Pages/Gestion/Partials/Faqs/FaqList.vue": __vite_glob_0_50, "./Pages/Gestion/Partials/MembersWidget.vue": __vite_glob_0_51, "./Pages/Gestion/Partials/NeighboursWidget.vue": __vite_glob_0_52, "./Pages/Gestion/Partials/Overview.vue": __vite_glob_0_53, "./Pages/Gestion/Partials/Polls.vue": __vite_glob_0_54, "./Pages/Gestion/Partials/Polls/PollForm.vue": __vite_glob_0_55, "./Pages/Gestion/Partials/Polls/PollList.vue": __vite_glob_0_56, "./Pages/Gestion/Partials/Polls/ShowPoll.vue": __vite_glob_0_57, "./Pages/Gestion/Partials/Polls/Stats.vue": __vite_glob_0_58, "./Pages/Gestion/Partials/RolesStats.vue": __vite_glob_0_59, "./Pages/Gestion/Partials/Users/AddUser.vue": __vite_glob_0_60, "./Pages/Gestion/Partials/Users/EditPermissions.vue": __vite_glob_0_61, "./Pages/Gestion/Partials/Users/EditRoles.vue": __vite_glob_0_62, "./Pages/Gestion/Partials/Users/EditUser.vue": __vite_glob_0_63, "./Pages/Gestion/Partials/Users/InvitationsList.vue": __vite_glob_0_64, "./Pages/Gestion/Partials/Users/UsersList.vue": __vite_glob_0_65, "./Pages/Gestion/Partials/UsersStats.vue": __vite_glob_0_66, "./Pages/Gestion/Permissions.vue": __vite_glob_0_67, "./Pages/Gestion/Roles.vue": __vite_glob_0_68, "./Pages/Gestion/Users.vue": __vite_glob_0_69, "./Pages/Jetstream/Dashboard.vue": __vite_glob_0_70, "./Pages/Jetstream/PrivacyPolicy.vue": __vite_glob_0_71, "./Pages/Jetstream/TermsOfService.vue": __vite_glob_0_72, "./Pages/Jetstream/Welcome.vue": __vite_glob_0_73, "./Pages/Member/Partials/Overview.vue": __vite_glob_0_74, "./Pages/Member/Partials/ProfileTabs.vue": __vite_glob_0_75, "./Pages/Member/Profile.vue": __vite_glob_0_76, "./Pages/Profile/Jetstream/Partials/DeleteUserForm.vue": __vite_glob_0_77, "./Pages/Profile/Jetstream/Partials/LogoutOtherBrowserSessionsForm.vue": __vite_glob_0_78, "./Pages/Profile/Jetstream/Partials/TwoFactorAuthenticationForm.vue": __vite_glob_0_79, "./Pages/Profile/Jetstream/Partials/UpdatePasswordForm.vue": __vite_glob_0_80, "./Pages/Profile/Jetstream/Partials/UpdateProfileInformationForm.vue": __vite_glob_0_81, "./Pages/Profile/Jetstream/Show.vue": __vite_glob_0_82, "./Pages/Profile/Partials/EditAddress.vue": __vite_glob_0_83, "./Pages/Profile/Partials/EditPersonalInfo.vue": __vite_glob_0_84, "./Pages/Profile/Partials/EditProfilePhoto.vue": __vite_glob_0_85, "./Pages/Profile/Partials/ProfileStepper.vue": __vite_glob_0_86, "./Pages/Profile/Show.vue": __vite_glob_0_87, "./Pages/Settings/Index.vue": __vite_glob_0_88, "./Pages/Settings/Partials/AccountSetting.vue": __vite_glob_0_89, "./Pages/Settings/Partials/AuthSetting.vue": __vite_glob_0_90, "./Pages/Settings/Partials/DeactivateAccount.vue": __vite_glob_0_91, "./Pages/Settings/Partials/LogoutOtherBrowserSessionsForm.vue": __vite_glob_0_92, "./Pages/Settings/Partials/Side.vue": __vite_glob_0_93, "./Pages/Settings/Partials/TwoFactorAuthenticationForm.vue": __vite_glob_0_94 });
      return pages[`./Pages/${name}.vue`];
    },
    setup({ App, props, plugin }) {
      const app = createSSRApp({
        render: () => h$1(App, props)
      });
      app.use(plugin).use(k);
      initPinia(app);
      initPrime(app);
      registerComponents(app);
      return app;
    }
  })
);
